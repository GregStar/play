package  {	import flash.text.*;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLVariables;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.display.Loader;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.net.URLRequestMethod;	import flash.net.sendToURL;		public class EndeScreen extends Sprite {		public var punkteEndstand_txt:TextField;				private var varLoader:URLLoader = new URLLoader();		private var varObj:URLVariables;				private var save_bt:SimpleButton;		private var back_bt:SimpleButton;		private var again_bt:SimpleButton;				public function EndeScreen() {			addEventListener(Event.ADDED_TO_STAGE, geadded);		}// ende Konstruktor endeScreen				private function geadded(evt:Event){			/* zentriert einfügen */			x = Object(parent).spielfeldWidth/2;			y = Object(parent).spielfeldHeight/2;			/* Hintergrundbild je nach Kampagne laden */						var bgPic:Loader = new Loader();				bgPic.x = - Object(parent).spielfeldWidth / 2;				bgPic.y = - Object(parent).spielfeldHeight/ 2;				varObj = varLoader.data;				bgPic.load( new URLRequest( Object(parent).pfad + 'endeScreen/design_'+Object(parent).kampagne+'.jpg') );			addChild(bgPic);						/* Textfeld für Punktestand erstellen */			punkteEndstand_txt = new TextField();				punkteEndstand_txt.x = -200;				punkteEndstand_txt.y = -51;				punkteEndstand_txt.type = TextFieldType.DYNAMIC;				punkteEndstand_txt.defaultTextFormat = Object(parent).inputFormat;				punkteEndstand_txt.width = 254;				punkteEndstand_txt.height = 28;				punkteEndstand_txt.text = Object(parent).punkteSpieler;			addChild(punkteEndstand_txt);						/* Hintergrundgrafik für Button laden */			var buttonBg:Loader = new Loader();				buttonBg.x = - Object(parent).spielfeldWidth/2 + 135;				buttonBg.y = 20;				varObj = varLoader.data;				buttonBg.load( new URLRequest( Object(parent).pfad + 'endeScreen/bt_'+Object(parent).kampagne+'.png') );				buttonBg.mouseChildren = false;			addChild(buttonBg);						/* Play-Button erstellen und mit Event-Listener belegen*/			save_bt = new SimpleButton(); 				save_bt.upState = buttonBg;   				save_bt.overState = buttonBg;   				save_bt.hitTestState = buttonBg; 			addChild(save_bt); 								/* Hintergrundgrafik für back-Button laden */			var back_btBg:Loader = new Loader();				back_btBg.x = -1;				back_btBg.y = 130;				varObj = varLoader.data;				back_btBg.load( new URLRequest( Object(parent).pfad + 'endeScreen/zurueck_bt_'+Object(parent).kampagne+'.png') );				back_btBg.mouseChildren = false;			addChild(back_btBg);						/* back-Button erstellen und Event-Listener hinzufügen*/			back_bt = new SimpleButton(); 				back_bt.upState = back_btBg;   				back_bt.overState = back_btBg;   				back_bt.hitTestState = back_btBg; 			addChild(back_bt); 						/* Hintergrundgrafik für play-again-Button laden */			var again_btBg:Loader = new Loader();				again_btBg.x = - Object(parent).spielfeldWidth/2 + 135;				again_btBg.y = 130;				varObj = varLoader.data;				again_btBg.load( new URLRequest( Object(parent).pfad + 'endeScreen/again_bt_'+Object(parent).kampagne+'.png') );				again_btBg.mouseChildren = false;			addChild(again_btBg);						/* play-again-Button erstellen und Event-Listener hinzufügen*/			again_bt = new SimpleButton(); 				again_bt.upState = again_btBg;   				again_bt.overState = again_btBg;   				again_bt.hitTestState = again_btBg; 			addChild(again_bt); 						/* Focus auf Speichern Button */			stage.focus = save_bt;						/* EnventListener hinzufuegen */			save_bt.addEventListener(MouseEvent.CLICK, saveHighscore);			back_bt.addEventListener(MouseEvent.CLICK, zurueckZumStart);			again_bt.addEventListener(MouseEvent.CLICK, playAgain);		}// ende geadded				private function saveHighscore(evt:MouseEvent){			/* eintragen in DB */			var datenArray:Object = {	username: String(Object(parent).nameSpieler), 										score: String(Object(parent).punkteSpieler) };			sendeAnDB(datenArray);								/* Button entfernen */			save_bt.removeEventListener(MouseEvent.CLICK, saveHighscore);			removeChild(save_bt);						/* Textfeld für Punktestand erstellen */			var ausgabe_txt:TextField = new TextField();				ausgabe_txt.x = -202;				ausgabe_txt.y = 20;				ausgabe_txt.type = TextFieldType.DYNAMIC;				ausgabe_txt.defaultTextFormat = Object(parent).ausgabeFormat;				ausgabe_txt.width = 380;				ausgabe_txt.height = 28;				ausgabe_txt.text = "Deine Punkte wurden gespeichert!";			addChild(ausgabe_txt);		}//ende saveHighscore();				function sendeAnDB(daten:Object = null){			//schickt Variablen an PHP zum speichern			// zu übergebenden Variablen zusammenstellen			var variables:URLVariables = new URLVariables();				for(var index:String in daten){					variables[String(index)] = daten[index];				}			var request:URLRequest = new URLRequest( Object(parent).pfad + 'senden.php' );				request.data = variables;				request.method = URLRequestMethod.POST;						sendToURL(request);		}//ende sendeVariablen				private function zurueckZumStart(evt:MouseEvent){		//neuen Namen eingeben; StartScreen wird eingeblendet			cleanup();			Object(parent).initGame();			Object(parent).entferneEndeScreen();		}//ende zurueckZumStart();						private function playAgain(evt:MouseEvent){				//mit selben Namen weiterspielen -> direkt zum Spiel			cleanup();			Object(parent).gameMode();			Object(parent).entferneEndeScreen();		}//ende zurueckZumStart();				private function cleanup(){			if(save_bt){ save_bt.removeEventListener(MouseEvent.CLICK, saveHighscore); }			back_bt.removeEventListener(MouseEvent.CLICK, zurueckZumStart);			again_bt.removeEventListener(MouseEvent.CLICK, playAgain);		}//ende cleanUp();	}}