package  {		import flash.display.MovieClip;	import flash.events.KeyboardEvent;	import flash.events.Event;	import flash.ui.Keyboard;	import flash.utils.Timer;	import flash.events.TimerEvent;	import flash.media.Sound;			public class Zoom extends MovieClip {				private var getroffen:Boolean = false;		private var crashSound:Sound = new CrashSound();		private var selectSound:Sound = new SelectSound();		private var verkleinernSound:Sound = new VerkleinernSound();		private var verlangsamenSound:Sound = new VerlangsamenSound();				public function Zoom() {			addEventListener(Event.ADDED_TO_STAGE, geadded);			}//ende Konstruktor zoom				private function geadded(evt:Event){			addEventListener(Event.ENTER_FRAME, zoom);			z = 4200;			y = -900 - height/2;		}//ende geadded				private function zoom(ereignis:Event){			if(Object(parent).game === true && Object(parent).zoomen == true){			//stopt sobald Spiel fertig				y += 25;				z -= 78;				hitCheck();								//Element außerhalb des Spielfelds				if(y - height > Object(parent).spielfeldHeight){ elementEntfernen(this); }			}			//wenn spiel gecleart wird -> alle Elemente entfernen			if(Object(parent).game === false){ elementEntfernen(this); }		}//ende zoom				private function elementEntfernen(element){			if(this is Tacho || this is Verkleinern){				Object(parent).kampagneElement = false;			}			this.removeEventListener(Event.ENTER_FRAME, zoom);			Object(parent).removeChild(this);					}//ende elementEntfernen				private function hitCheck(){			/* Quad stößt auf entgegenkommendes Objekt */			if(hitTestObject(Object(parent).quad)){				var abstand:Number = Math.abs(Object(parent).quad.x - x );								if(abstand < width - 20 ){					/* getroffenes Element erbt von der Klasse Rotate (Stern, Coin) */					if(this is Rotate){ 						if(getroffen == false){		// nur beim ersten Treffer							getroffen = true;							if(this is Stern || this is Credit){								selectSound.play();							}														/* wenn Element Tacho soll Timer langsamer werden */							if(this is Tacho){								verlangsamenSound.play();								Object(parent).verlangsamen();							}														/* wenn Element Tacho soll Timer langsamer werden */							if(this is Verkleinern){								verkleinernSound.play();								Object(parent).verkleinern();							}												/*  Element entfernen und Punkte setzten */							elementVerschwindet();										Object(parent).setztePunkte(this);						}					}										/* getroffenes Element erbt von der Klasse Hindernis */					if(this is Hindernis){							if(getroffen == false){			// wird zum ersten Mal getroffen							getroffen = true;							crashSound.play();							/* Zoomen und Timer stoppen, beim Drücken einer Taste weiter */							Object(parent).zoomen = false;							Object(parent).elementeTimer.stop();							Object(parent).zeitAnzeige.pauseAnfang();							/* EventListener zum Weiter Spielen */							stage.addEventListener(KeyboardEvent.KEY_DOWN, tasteRunter);														/* Leben entfernen */							Object(parent).setzteLeben();						}					}				}			}		}//ende hitCheck		private function tasteRunter(evt:KeyboardEvent){			/* wird einmalig ausgelöst wenn Spiel gestoppt und Taste rauf gedrückt */			if(evt.keyCode == Keyboard.UP && Object(parent).zoomen == false){ weiterSpielen(); }		}//ende tasteRunter()				private function weiterSpielen(){			/* EventListener entfernen */			stage.removeEventListener(KeyboardEvent.KEY_DOWN, tasteRunter);						/* zoomen und Timer weiter */			Object(parent).zoomen = true;			Object(parent).zeitAnzeige.pauseEnde();			if(Object(parent).elementeTimer){	Object(parent).elementeTimer.start(); }		}//ende weiterSpielen				private function elementVerschwindet(){			//ausblenden Effekt			if((y > Object(parent).spielfeldHeight - Object(parent).quad.y)){ addEventListener(Event.ENTER_FRAME, elementAusblenden); }		}//ende elementVerschwindet				private function elementAusblenden(evt:Event){			height *= 0.3;			width *=0.3;			//sobald nicht mehr sichtbar Listener entfernen			if(height <= 0){ elementWeg(); }		}//ende elementAusblenden				private function elementWeg(){			removeEventListener(Event.ENTER_FRAME, elementAusblenden);		}//ende elementWeg	}}