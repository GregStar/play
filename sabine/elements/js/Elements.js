// https://developer.mozilla.org/En/Using_web_workers           
var deg2rad = Math.PI / 180, 
rad2deg = 180 / Math.PI,

windowHalfX = window.innerWidth / 2,
windowHalfY = window.innerHeight / 2;

var ELEMENTS = ELEMENTS || {};

//______________________________________________________________________________
// SETTINGS
ELEMENTS.Config = {
    
    nextWorld: 0,
    thisWorld: 0,
    trackNr: 0,
    
    volume: 1,
    bridgeSoundEffect: 'audio/effect',
    mouseHoverNoise: 'audio/hover',
    
    showBridge: false,
    bridge: false,
    useLoading: false,
    load: false,

    speedFast: 30,       //32
    
    worldExists: false,

    opacityFace: 0.3,
    opacityLine: 0.7,
    opacityLineFull: 1,
    bloom: 0.7    
}

//______________________________________________________________________________
// Colors

ELEMENTS.Color = {
    yellow: new THREE.Color(0xFFFF33),
    red: new THREE.Color(0xFF0000),
    blue: new THREE.Color(0x33b6f2)
};

//______________________________________________________________________________
// Materials

ELEMENTS.Material = function( ) {
    this.faceM = new THREE.MeshPhongMaterial({
        opacity : ELEMENTS.Config.opacityFace,
        depthTest : false, 
        transparent : true 
    });
    
    this.lineM = new THREE.LineBasicMaterial({
        color: 0xFFFFFF, 
        opacity: ELEMENTS.Config.opacityLine, 
        linewidth: 2, 
        linecap: "square"
    });
    
    this.lineM2 = new THREE.LineBasicMaterial({
        color: 0xFFFFFF, 
        opacity: ELEMENTS.Config.opacityLineFull, 
        linewidth: 2, 
        linecap: "square"
    });
    
    this.particleM = new THREE.ParticleBasicMaterial({
        color: 0xFFFFFF,
        size: 20,
        map: THREE.ImageUtils.loadTexture(
            "img/particle.png"
            ),
        blending: THREE.AdditiveBlending,
        depthTest : false, 
        transparent: true
    });
    
    this.cometM = new THREE.MeshBasicMaterial({
        color: 0xFFFFFF,
        map: THREE.ImageUtils.loadTexture(
            "img/comet.png"
            ),
        blending: THREE.AdditiveBlending,
        depthTest : false, 
        transparent: true
    });
};

ELEMENTS.FireMusic = {
    0: {			// FEUER PAUL
        srcPath: 'audio/fire/f_00',
        startTime: 0,   // sec
        speed: 9,

        delayBridge: [ 41, 70 ],
        
         animationSets:{
            delayCometFly: 2000,
            zoomMaxScale: 1.2,
            zoomDuration: 1500,
            lightWfading: 5,
            lightWmax:10,
            lightYfading: 2.5,
            lightYmax: 5,
            
            particleUp: 5.5,
            particleMaxHeight: 230,
            countPerZoom: 1
            
        },
        
        delays: {
            fountain: [ 
                        // Snare
                        20.4, 22.8, 25.2, 27.6, 30, 32.4, 34.8, 37.2, 39.6, 42, 44.4, 46.8, 49.2, 51.6, 54, 56.4, 67.8, 69, 70.2, 71.7, 72.6, 73.8, 75, 76.5, 77.4, 78.6, 79.8, 81.3, 82.2, 83.4, 84.6, 86.1, 87, 88.2, 89.4, 90.9, 91.8, 93, 94.2, 95.7
                    ],
            comet: [ 1.214, 3.640, 5.879, 8.436, 10.83, 13.082, 15.619, 18.022,       24.027, 27.623, 34.880, 37.228, 39.625, 41.943, 44.425, 46.773, 49.227, 51.634, 54.007, 56.432,       66.028    , 73.234, 75.621,    81.630, 85.221,    94.834 ]

        },
        
        f_mainBassVolume: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,17,1,16,1,9,1,2,2,3,2,2,1,1,2,0,11,13,7,5,8,4,10,1,13,2,20,17,9,7,1,8,2,10,11,12,4,7,8,6,14,0,21,17,22,18,11,10,2,9,2,12,9,16,6,40,11,7,15,2,28,22,29,24,14,12,3,11,4,9,2,5,5,0,0,0,5,0,0,0,0,0,2,0,1,2,0,5,14,17,3,9,12,4,14,1,22,16,25,20,12,10,2,9,2,10,12,23,9,10,15,6,15,3,26,19,31,25,15,12,3,10,3,9,19,25,12,10,15,8,19,2,31,25,35,27,16,14,3,12,4,9,16,7,1,0,4,11,21,27,36,7,0,1,5,10,0,0,18,9,12,5,1,0,3,10,18,25,30,6,0,0,4,8,0,0,15,9,11,5,4,0,2,9,18,24,31,6,0,1,4,8,0,0,15,7,12,1,7,0,3,9,22,29,34,5,1,0,5,9,1,0,19,16,0,0,0,0,1,3,3,5,5,4,0,0,1,1,0,1,0,3,11,6,2,1,3,8,16,22,27,5,0,0,3,7,0,0,14,8,12,9,7,1,4,9,16,23,31,5,0,0,3,8,0,0,15,7,11,10,5,1,4,12,22,30,37,6,0,0,4,10,0,0,18,16,1,4,29,37,11,40,4,23,2,5,6,8,4,5,2,2,4,0,12,17,4,12,14,5,15,1,23,17,26,22,12,10,2,10,3,11,18,25,7,8,15,6,18,3,29,21,33,27,16,12,3,11,4,6,16,22,6,6,10,6,14,0,23,20,23,21,12,10,2,9,3,7,3,4,4,0,0,0,3,0,0,0,0,0,1,0,0,1,0,4,15,21,3,5,8,5,14,1,19,15,24,18,12,9,1,9,2,6,25,18,7,6,13,8,21,1,24,19,32,23,16,13,2,11,4,11,22,27,7,8,15,6,20,1,26,20,30,24,15,13,3,11,3,8,4,6,22,2,7,2,10,3,3,7,1,6,1,0,1,9,1,4,5,3,1,6,4,14,0,6,6,12,6,15,3,8,10,5,0,1,15,11,0,6,3,15,3,4,6,11,9,15,4,8,10,4,1,6,13,11,4,4,0,17,4,3,6,12,10,17,3,10,11,5,0,0,5,4,5,1,5,8,7,6,1,0,2,2,1,1,0,0,1,3,9,7,5,4,2,16,4,2,6,10,9,15,3,8,10,5,0,9,7,10,2,6,2,21,2,4,8,14,12,20,5,10,14,6,0,2,20,6,3,4,0,20,1,3,9,13,10,18,6,9,12,5,1,1,8,13,27,35,11,38,4,23,1,4,5,7,3,5,0,3,4,0,16,24,14,10,12,8,17,0,27,21,29,23,14,10,3,10,3,12,10,17,12,8,11,8,16,0,22,17,23,19,12,10,1,10,3,10,10,16,8,9,13,5,16,2,28,20,28,24,13,11,2,10,3,8,2,5,4,0,0,1,4,0,0,0,0,0,2,0,1,1,0,5,15,18,7,8,12,4,14,2,23,17,27,21,12,10,3,10,3,7,18,20,11,8,14,6,15,2,25,20,28,22,13,10,2,9,3,7,22,20,2,6,13,6,16,0,24,19,29,23,13,11,2,11,3,5,0,12,12,0,26,38,2,2,6,0,0,3,6,9,13,20,0,3,16,6,3,0,5,16,30,41,53,8,1,0,5,10,0,0,16,11,10,1,4,1,1,7,15,22,26,5,0,1,3,8,3,6,18,13,13,6,1,4,9,0,4,17,10,1,1,8,12,1,3,14,5,2,0,0,0,5,6,1,2,5,1,0,0,0,2,2,1,3,3,4,21,3,6,13,17,54,16,34,25,2,1,6,6,16,0,1,31,17,17,13,6,23,7,16,27,41,53,2,4,6,0,3,8,28,9,1,11,1,2,7,18,0,30,40,51,8,1,0,6,13,5,9,25,15,24,28,15,16,16,10,24,0,28,22,30,24,15,11,3,13,4,16,11,25,7,14,18,8,22,2,22,2,32,27,15,13,3,13,4,13,15,26,8,11,20,6,24,0,27,21,32,25,14,12,3,12,4,12,23,24,4,55,16,7,24,0,26,22,29,23,16,13,3,12,4,9,3,5,6,0,0,0,4,0,0,0,0,0,2,0,3,1,0,7,27,26,3,8,17,9,23,2,29,4,0,0,11,8,3,6,6,2,16,50,37,47,42,9,36,7,21,5,1,6,5,9,5,7,5,2,15,45,42,47,43,34,33,10,22,5,1,6,5,9,5,7,6,7,2,16,31,12,5,48,27,21,36,3,2,12,0,16,18,0,6,2,2,15,54,9,6,80,48,44,80,3,1,24,0,23,24,1,6,11,1,6,39,4,4,46,29,24,43,1,1,0,2,21,23,0,7,13,0,6,32,11,3,46,28,22,38,1,0,12,0,19,20,0,7,12,1,20,16,4,10,0,3,7,2,4,8,0,0,5,1,5,2,0,9,6,3,4,0,9,0,0,3,17,8,24,52,21,53,18,54,14,35,11,24,25,22,45,6,0,7,22,27,0,20,32,44,2,8,2,1,9,7,11,1,16,2,6,6,25,0,30,7,8,3,13,42,18,5,21,7,11,12,46,39,24,25,27,7,24,31,32,30,14,26,1,14,32,25,30,42,26,24,4,18,7,8,16,2,15,0,8,1,11,13,26,29,31,31,8,30,5,15,5,1,26,6,20,9,2,0,13,13,37,41,45,41,13,36,7,14,4,5,9,3,2,21,8,4,8,4,16,9,9,3,4,6,0,3,7,1,9,5,0,1,7,2,3,11,39,26,29,33,2,26,3,11,2,1,1,5,13,3,3,8,4,10,27,18,48,35,32,32,15,23,1,1,8,6,4,4,10,2,0,2,27,22,49,40,8,36,12,25,7,0,6,4,5,4,1,10,6,6,1,4,5,5,2,0,9,8,0,1,0,0,4,3,12,6,0,15,1,0,4,10,0,3,19,13,0,4,2,5,2,2,8,2,2,4,1,2,2,6,0,0,9,8,2,0,2,2,1,0,7,2,1,8,1,2,0,5,0,0,15,5,1,0,2,0,0,1,8,2,2,2,1,0,6,8,0,1,2,0,1,2,0,0,3,2,3,3,1,9,3,0,0,8,2,7,17,12,3,2,4,3,2,4,11,3,1,14,4,0,4,12,1,4,20,12,0,2,3,0,0,1,15,7,0,20,2,2,5,14,3,6,25,15,0,1,5,0,1,4,18,6,1,2,0,11,2,0,13,3,1,0,14,5,12,26,10,20,7,18,1,8,30,27,37,34,9,33,6,18,4,0,4,4,6,4,6,5,0,10,38,38,39,40,8,39,7,22,3,0,7,5,9,5,7,5,3,2,27,23,36,28,8,31,6,14,4,0,3,5,6,4,6,2,1,0,8,2,12,6,0,1,0,1,0,1,0,1,1,0,0,0,0,7,23,19,32,26,7,30,4,15,2,1,4,3,6,3,5,3,4,3,31,33,41,38,7,36,9,19,3,0,6,5,8,5,7,3,4,10,35,33,38,37,6,34,7,19,4,3,6,4,6,5,6,4,2,1,4,6,10,0,3,1,0,1,0,0,0,1,0,0,0,0,1,1,11,31,11,3,46,28,23,39,0,0,10,0,10,11,0,4,5,1,8,25,3,2,29,17,13,22,0,1,7,0,10,11,0,5,7,0,7,26,4,3,34,18,14,24,0,0,8,0,11,12,0,4,7,1,12,9,2,5,0,1,4,1,2,4,0,0,3,0,2,0,0,0,15,41,13,4,61,33,27,42,3,1,15,0,19,20,0,6,13,0,17,53,12,5,69,38,36,54,5,2,20,0,27,28,1,9,14,7,9,49,15,1,70,39,32,51,5,1,17,1,25,24,1,8,14,4,9,2,7,6,9,0,1,0,16,2,10,25,9,18,5,16,1,12,34,38,33,33,6,34,8,19,3,0,5,4,7,6,7,4,6,13,35,32,29,32,6,29,5,16,2,1,5,3,7,3,5,3,2,18,38,30,32,33,8,33,7,19,3,1,6,5,6,4,6,4,1,1,8,3,14,6,0,3,1,2,1,0,1,0,1,0,1,0,1,15,34,27,35,32,8,33,5,16,3,0,6,3,6,4,5,3,1,10,35,30,35,35,7,32,7,17,3,0,6,4,7,4,6,4,0,5,30,21,47,34,7,33,9,17,4,0,5,5,7,4,5,4,0,3,1,4,73,33,17,5,2,0,3,8,0,1,16,7,0,0,1,24,2,2,8,16,0,9,33,27,3,1,7,0,2,4,15,5,0,12,0,0,4,8,1,3,16,12,1,1,2,0,1,3,15,6,1,15,0,0,4,9,0,4,18,10,0,1,3,0,1,3,14,5,2,14,1,1,4,16,0,7,28,19,2,1,5,0,3,6,22,8,1,21,3,6,11,17,2,8,37,24,3,1,6,1,0,6,29,10,7,24,2,0,3,20,0,7,35,22,1,2,6,0,3,8,27,9,4,24,1,1,6,18,0,7,32,20,3,1,6,0,0,6,25,8,3,12,47,53,43,50,7,37,6,18,2,6,2,5,6,5,6,4,1,12,30,31,35,35,12,27,13,21,6,4,11,4,9,3,10,2,0,17,25,24,27,28,21,21,15,16,8,8,9,2,6,3,8,1,3,7,17,20,19,11,15,15,14,11,7,8,4,0,4,3,6,0,4,2,11,21,9,2,11,12,14,8,7,9,1,0,1,3,4,1,5,0,12,24,5,5,9,7,12,2,6,7,0,1,0,3,1,1,6,0,7,19,3,0,8,5,10,0,5,6,0,0,0,2,0,1,6,3,3,10,3,1,7,4,7,1,4,3,0,0,1,1,2,1,5,6,2,2,0,2,1,0,3,4,1,2,0,0,3,2,0,0,0,0,2,5,2,1,1,0,5,8,4,5,1,0,3,2,1,0,0,0,1,2,1,1,0,0,2,4,1,3,1,0,3,1,1,0,0,2,3,2,2,0,1,0,1,3,1,2,1,0,1,1,2,0,0,1,2,3,1,0,2,0,3,6,1,3,1,1,3,2,1,0,0,1,5,5,4,1,5,4,4,3,0,5,0,1,1,2,0,0,0,3,0,0,0,0,1,0,3,1,2,0,0,1,1,0,0,2,2,1,2,3,2,1,1,0,3,3,2,5,1,2,0,0,3,4,2,1,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,1,0,0,0,0,2,0,0,1,3,1,0,0,1,5,1,0,2,0,0,0,1,1,1,0,0,4,1,2,1,7,1,4,0,0,0,3,0,1,2,3,3,0,0,1,0,0,8,3,0,16,7,4,0,5,0,4,0,2,5,3,2,1,6,11,5,4,1,4,0,0,0,7,1,5,12,4,9,3,3,0,10,12,2,5,10,6,15,0,24,19,28,21,15,8,4,6,4,1,4,24,23,35,31,7,30,6,15,3,24,19,13,10,1,9,3,6,17,16,8,4,7,2,8,3,9,2,1,2,2,4,2,3,1,0,9,23,21,19,8,3,10,1,17,15,16,13,9,7,1,7,1,8,11,28,25,25,26,5,30,6,19,3,4,4,4,7,4,7,3,13,13,18,2,6,12,7,17,1,26,20,27,22,13,7,4,6,2,6,16,39,34,32,34,8,34,7,20,4,26,22,13,10,2,11,3,10,4,9,10,0,25,38,3,2,2,4,7,0,1,15,7,0,0,4,15,4,1,8,5,16,28,39,57,9,1,2,10,18,0,0,33,18,19,5,2,11,15,1,7,34,23,2,2,7,0,1,6,26,28,18,20,10,2,0,1,8,15,20,27,4,0,0,4,0,3,13,5,2,15,2,2,6,8,1,4,17,12,1,0,0,4,8,0,0,16,8,10,10,0,1,2,8,16,19,13,2,0,4,0,1,3,15,5,1,21,2,0,5,5,13,27,35,51,13,0,1,4,8,0,0,15,10,10,2,0,2,8,0,3,15,13,1,1,4,0,1,3,20,24,13,19,14,8,10,9,5,12,0,14,11,15,11,7,4,2,3,2,3,14,33,26,33,32,8,33,7,20,4,33,26,16,13,2,13,4,13,13,24,9,9,19,7,23,7,19,3,0,8,5,6,5,6,4,2,19,29,16,29,10,4,10,1,14,10,15,11,7,6,1,6,1,5,12,23,20,20,21,4,21,3,11,1,0,4,3,5,2,5,2,6,18,21,2,7,12,8,19,2,27,21,33,26,16,9,5,8,5,1,16,46,36,53,43,10,38,8,20,7,32,25,17,14,3,13,4,13,24,26,17,14,15,11,23,10,22,3,1,6,5,9,5,7,3,7,1,14,35,8,0,12,2,3,4,9,8,13,3,7,8,4,0,5,7,14,50,8,5,79,47,43,79,5,1,30,0,42,43,2,0,6,22,9,11,8,1,24,7,3,11,22,18,35,5,42,42,0,12,21,9,13,32,12,5,51,28,23,39,3,9,14,3,8,10,4,0,6,6,6,1,5,0,12,0,23,39,3,2,14,0,19,20,1,6,12,3,11,4,1,5,23,3,13,0,1,3,5,3,5,0,6,6,8,9,8,18,18,19,28,9,0,2,19,19,0,8,19,19,0,0,0,7,18,2,0,1,3,14,15,2,4,0,1,14,2,5,8,10,7,10,2,2,5,0,4,0,0,0,7,2,4,1,2,1,1,2,0,12,16,8,7,10,5,15,6,19,4,1,5,5,8,5,8,5,4,15,44,35,38,35,8,37,8,29,23,31,24,15,13,3,12,3,17,11,30,24,18,21,4,19,3,11,1,0,4,2,4,2,3,2,6,11,12,8,6,7,3,10,1,17,14,17,13,10,5,3,5,2,2,6,28,25,23,23,4,29,7,18,2,27,21,14,11,2,10,2,16,9,18,7,11,12,7,18,7,20,3,1,7,5,9,4,7,5,0,17,40,33,39,14,8,18,2,32,25,33,26,18,14,3,12,3,12,10,3,6,5,7,0,3,13,7,0,1,2,0,0,2,9,9,5,6,5,2,0,2,7,16,22,28,5,0,0,4,0,3,14,5,1,15,2,0,4,11,0,6,23,12,2,0,0,4,8,0,0,16,8,13,7,2,0,1,6,10,13,7,1,0,2,0,0,2,8,3,1,11,0,1,2,3,8,14,20,28,4,0,0,4,8,0,0,16,11,6,1,0,1,5,0,1,10,6,0,0,2,0,0,1,7,8,4,7,5,1,1,3,9,15,22,29,6,0,0,2,0,1,8,3,1,8,1,1,3,6,1,3,13,8,1,0,0,4,7,0,0,17,15,0,8,20,19,5,21,2,0,0,8,1,6,13,4,9,3,9,2,7,25,19,26,9,4,13,2,23,17,25,21,12,10,2,10,3,9,19,34,37,40,41,8,39,7,20,6,1,7,4,9,6,7,3,10,13,9,8,3,7,2,7,1,11,9,12,10,5,3,1,4,1,1,9,24,24,20,21,3,20,4,12,2,19,15,9,7,1,7,2,8,6,11,5,4,8,6,14,5,15,3,1,5,3,7,4,6,4,6,15,40,36,34,13,8,18,1,27,22,30,24,13,11,2,12,4,13,6,39,27,36,34,8,34,6,19,2,2,7,4,7,4,6,3,9,3,4,16,0,5,2,3,1,2,2,0,1,0,0,0,0,1,0,5,8,32,8,2,46,27,23,36,3,7,14,4,7,9,5,0,5,13,8,0,12,6,18,0,27,41,4,1,15,0,20,20,0,5,11,4,3,24,9,2,10,0,0,4,7,4,8,2,4,5,3,0,2,10,11,29,10,0,42,25,24,38,3,1,13,0,18,20,0,0,1,9,0,0,5,2,7,1,1,4,6,4,8,1,10,11,0,4,6,4,6,39,5,0,55,35,29,51,4,8,13,2,6,7,4,0,0,7,2,3,4,2,8,3,17,29,2,0,10,0,12,12,0,4,6,0,2,2,3,3,17,2,9,2,1,2,3,1,2,1,1,2,0,9,23,25,23,24,5,29,6,17,2,1,6,4,7,4,6,3,13,11,16,8,8,11,8,16,0,22,17,23,18,12,7,3,5,3,4,18,29,21,18,17,3,16,3,9,1,14,11,6,5,1,5,1,8,7,12,3,5,8,3,10,3,12,2,0,4,2,5,3,4,2,1,9,29,23,29,9,5,12,3,24,17,29,23,14,11,3,10,2,10,17,35,27,39,31,7,32,7,18,3,1,5,5,8,4,6,2,14,8,18,9,8,13,7,17,2,26,20,27,23,12,7,4,6,4,2,2,4,0,72,31,18,6,2,1,3,7,0,1,15,12,19,0,5,12,11,5,2,5,17,29,33,24,1,2,7,0,2,8,32,12,6,21,5,3,11,2,15,29,39,51,8,0,0,2,1,0,0,28,15,22,1,4,2,9,0,5,19,11,1,1,3,0,0,3,13,14,8,11,8,2,0,2,7,16,20,28,4,0,0,4,1,3,14,5,3,11,3,2,7,9,0,4,19,13,2,1,1,4,8,0,0,16,12,14,0,3,1,6,13,25,32,18,0,2,4,0,1,3,14,5,1,13,3,0,3,2,6,15,20,26,4,1,0,5,11,0,0,23,13,21,23,27,20,23,5,17,3,10,1,0,3,2,4,2,3,2,9,6,19,7,10,11,7,16,1,29,22,32,27,15,9,5,8,4,1,24,49,37,49,44,12,37,7,18,4,30,24,14,11,3,12,3,13,21,12,4,5,8,4,13,4,11,2,0,3,2,4,2,3,2,4,10,23,17,22,8,3,10,1,17,14,19,15,9,7,1,7,3,11,8,30,25,38,36,9,36,7,20,3,0,7,4,8,5,7,3,14,21,25,6,10,16,11,25,2,29,24,32,25,17,10,5,8,5,1,16,45,42,47,42,9,38,10,22,3,31,24,16,13,2,14,2,21,8,15,4,8,1,12,1,10,24,1,0,4,6,8,9,3,0,6,11,4,4,5,0,5,1,0,0,8,4,1,3,0,6,1,1,2,4,6,3,0,1,6,1,6,10,3,2,0,1,7,6,2,2,0,0,1,3,0,3,0,1,0,1,1,1,1,1,3,2,1,0,0,1,2,2,1,1,1,0,1,4,1,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,2,3,2,2,1,1,0,0,0,0,2,0,1,0,1,1,0,0,0,2,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],

        f_leadFlute: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,4,2,3,3,1,0,0,0,1,5,1,31,4,2,1,1,1,3,3,2,1,0,0,1,1,1,0,1,0,0,2,1,0,0,1,0,1,0,0,0,0,0,0,0,0,1,4,6,2,2,0,0,0,1,1,0,1,1,0,0,0,0,2,0,2,1,1,7,1,7,9,4,0,5,0,0,2,1,3,2,0,3,0,2,0,4,4,1,0,2,0,2,2,1,0,1,1,2,0,0,0,1,0,1,0,4,2,1,2,1,0,0,0,0,3,3,0,0,0,0,0,2,2,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,3,3,0,2,1,0,1,1,2,3,3,5,4,4,18,4,0,3,2,1,2,0,0,4,1,0,1,1,0,0,0,2,0,0,0,1,0,0,1,0,1,0,0,0,1,2,1,1,0,0,4,0,0,0,2,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,7,7,3,3,6,4,4,4,9,1,2,0,4,0,2,5,2,13,5,1,0,0,5,4,4,5,11,3,0,6,0,0,3,1,0,0,3,3,0,2,3,0,1,1,2,2,2,0,2,0,0,1,3,5,0,0,2,1,3,2,1,3,1,2,1,1,0,0,2,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,4,3,3,2,1,0,1,0,0,0,4,2,8,5,2,0,0,2,1,2,0,3,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,1,0,4,0,0,0,0,1,0,2,0,2,0,0,0,1,0,1,1,0,0,2,6,0,0,1,0,2,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,4,0,1,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,2,2,1,4,5,6,5,3,3,0,0,1,0,2,6,1,0,0,1,0,1,2,2,3,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,0,0,0,1,0,1,2,1,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,6,5,4,5,0,0,5,4,1,5,2,6,2,2,0,0,0,1,1,7,8,10,4,0,2,0,2,1,2,2,0,0,2,0,0,1,3,1,3,2,0,1,0,0,0,1,0,1,2,0,0,0,0,0,0,0,1,6,2,2,7,6,0,1,3,1,0,0,1,2,2,0,0,1,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,2,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,1,1,0,0,3,5,4,5,3,2,1,3,4,1,7,3,3,0,1,0,0,2,0,2,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,2,3,2,1,0,1,0,0,2,0,2,1,0,0,1,0,1,2,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,4,0,7,2,2,2,2,7,3,6,0,4,1,15,17,2,2,0,1,1,3,1,0,0,0,2,0,2,0,0,1,0,0,0,1,0,1,0,1,0,1,1,1,3,1,2,1,0,2,3,0,1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,2,2,3,6,9,17,3,15,5,0,4,5,1,5,9,0,0,3,6,0,2,6,6,5,4,1,1,8,7,3,6,6,4,9,12,1,5,8,9,7,15,5,3,10,6,7,9,2,2,4,4,3,0,4,7,1,2,5,6,1,0,2,0,5,5,3,7,3,4,6,6,4,0,8,7,2,2,8,4,4,0,2,5,7,3,1,2,7,3,19,7,2,6,0,4,0,0,16,6,8,14,0,4,12,3,12,11,10,9,6,7,2,4,7,1,8,2,5,11,0,9,1,0,8,1,7,10,1,4,6,3,12,2,7,2,2,15,2,2,11,3,7,5,13,0,1,2,12,18,13,3,10,10,11,16,10,3,10,2,6,3,2,9,10,8,5,3,11,5,7,8,7,12,7,10,8,0,8,12,3,9,7,1,1,10,4,15,10,7,1,8,5,11,10,0,1,6,5,10,11,11,7,0,11,12,7,15,1,9,0,1,13,2,5,7,17,25,15,2,3,3,4,2,2,5,5,2,3,6,4,1,5,3,4,11,0,3,0,2,6,3,10,7,0,6,0,2,4,0,0,0,1,1,1,1,0,2,2,1,2,2,0,1,1,1,2,1,0,0,0,0,0,1,0,1,0,0,0,1,1,2,0,0,0,0,0,0,0,1,0,1,1,2,0,4,1,8,1,1,8,1,8,3,2,3,2,1,6,6,10,0,1,1,0,0,3,0,0,3,0,3,1,3,1,2,2,0,1,1,1,0,0,3,0,0,2,2,3,1,0,1,0,0,4,2,3,2,0,1,1,0,2,1,0,0,0,2,0,0,0,1,0,0,1,4,6,4,2,6,2,3,6,2,4,0,2,8,12,11,1,1,3,1,2,2,2,2,0,1,0,1,1,1,0,0,1,0,1,0,0,0,1,0,0,2,1,1,1,1,1,0,1,4,4,8,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,1,0,1,1,1,0,3,0,1,2,1,13,7,8,3,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,3,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,2,4,1,5,4,7,8,5,5,2,6,6,3,0,5,3,3,5,4,3,4,5,0,1,8,5,7,9,0,1,8,6,4,7,4,4,10,9,2,5,5,2,8,9,3,7,6,6,1,3,5,2,0,0,5,3,0,0,3,0,3,2,5,6,2,0,5,4,0,5,3,3,7,10,1,0,2,9,1,3,3,0,3,4,3,0,0,3,1,2,5,11,3,4,8,5,12,17,3,9,8,0,13,8,10,9,9,5,2,6,2,2,7,3,6,9,13,11,5,9,3,1,9,11,11,9,1,9,4,4,6,1,11,14,6,6,5,3,2,5,14,3,4,4,3,9,0,3,0,4,4,13,7,1,2,2,3,2,0,4,8,8,4,2,9,7,2,8,2,5,4,0,4,5,0,6,1,0,6,5,4,10,9,6,8,8,4,4,1,7,2,1,2,7,4,6,3,4,0,1,5,4,4,2,3,2,8,2,0,2,2,4,2,0,2,4,6,5,5,2,2,4,4,0,5,2,9,1,7,1,6,0,5,5,4,10,0,4,2,2,5,7,3,4,3,0,5,1,5,4,0,3,4,1,2,5,0,9,4,0,7,7,3,5,0,0,6,1,3,5,5,0,2,6,5,6,6,2,1,4,9,1,8,7,7,2,3,0,4,1,0,2,3,1,0,1,0,1,3,1,0,0,0,0,1,0,0,0,1,1,2,2,2,0,0,3,2,0,0,3,2,0,0,2,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,4,0,6,0,5,1,3,4,0,5,1,5,2,0,3,1,13,10,8,2,1,1,2,0,1,0,2,0,0,1,0,1,0,1,0,0,0,0,1,0,1,0,0,2,0,3,0,2,0,0,1,0,3,0,2,1,2,0,1,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,5,1,6,2,1,6,0,5,0,2,2,8,4,2,1,0,0,0,3,0,4,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,2,0,1,1,0,3,0,2,0,0,1,6,1,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,6,3,7,0,6,4,2,6,0,3,14,20,7,4,2,1,0,2,4,0,3,0,0,0,0,0,1,0,3,0,0,1,0,0,1,0,2,0,2,0,1,2,0,1,0,1,1,2,0,1,0,0,0,1,0,0,2,1,0,0,1,0,0,1,1,5,0,4,9,1,8,14,3,3,1,1,1,6,5,3,2,1,0,2,0,0,0,2,2,2,1,0,1,1,0,0,0,1,0,0,0,1,0,0,1,1,1,4,0,1,1,0,0,3,4,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,1,3,2,6,0,9,5,5,3,0,3,8,12,4,5,2,2,0,2,2,0,5,4,1,1,0,1,0,0,2,1,0,1,1,0,0,0,0,0,3,0,2,0,1,2,0,0,0,2,3,0,0,1,1,0,0,2,2,0,0,1,3,2,1,4,2,0,0,0,0,1,0,0,2,1,2,2,3,5,9,4,2,0,1,0,3,0,2,0,0,0,0,0,0,0,1,1,0,1,0,1,0,2,1,0,1,0,0,0,0,0,1,0,0,1,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,3,2,3,3,1,5,4,0,4,1,1,2,16,14,6,0,1,0,0,0,1,2,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,1,0,2,1,0,0,3,4,2,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,6,0,2,4,0,3,2,1,0,1,0,1,0,0,0,7,4,2,8,9,11,5,2,4,2,5,0,1,6,9,9,5,2,2,0,3,1,4,0,6,4,11,0,2,0,5,2,1,1,2,1,2,1,2,1,1,2,2,1,2,0,2,2,0,2,0,3,1,0,1,0,2,2,1,3,6,3,1,1,0,0,5,1,0,0,0,0,0,0,0,2,2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,5,0,5,0,3,1,3,2,2,2,0,1,1,10,4,0,0,2,1,1,1,1,2,1,0,0,0,0,1,0,2,0,2,2,1,1,1,0,1,0,2,1,1,1,1,0,0,0,4,0,1,0,0,2,2,2,3,2,1,4,0,4,3,3,2,1,0,2,0,3,0,2,2,5,6,4,0,1,0,1,0,0,0,1,1,1,0,0,1,3,2,4,5,1,0,3,0,0,1,0,0,0,0,1,0,0,3,1,0,4,3,1,2,3,1,0,0,0,1,0,0,0,0,0,0,2,1,0,3,0,2,1,3,1,0,0,0,0,0,0,1,0,0,3,1,5,1,2,5,2,4,1,2,1,1,3,4,6,1,0,2,2,2,0,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,1,0,1,2,1,2,0,0,0,2,2,2,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,2,0,2,1,9,1,1,2,9,0,3,4,3,4,5,5,1,0,0,1,0,0,2,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,4,1,2,1,1,4,2,1,0,2,1,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,7,3,2,7,0,5,5,3,3,2,1,1,0,0,20,16,14,0,1,0,0,1,0,1,4,3,0,1,1,1,0,0,2,0,0,0,1,0,0,1,1,0,1,2,1,2,0,1,0,0,2,2,3,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,9,1,3,6,1,6,5,3,5,0,6,0,17,20,5,1,4,1,1,0,0,2,1,0,0,1,0,2,1,2,0,1,1,2,0,1,2,0,0,1,1,1,2,0,1,0,1,0,3,3,5,1,2,1,0,0,1,0,0,1,0,1,0,0,0,2,1,1,4,5,12,2,3,7,5,4,6,8,5,12,5,1,1,5,5,1,3,5,3,4,5,3,0,9,6,4,10,1,2,9,8,0,5,8,7,10,7,2,5,6,6,8,8,0,8,4,5,0,2,3,2,2,0,2,4,3,0,2,1,3,2,6,2,2,0,4,5,1,3,5,6,0,5,2,2,5,3,3,5,5,4,3,2,9,6,7,0,2,1,1,4,1,0,16,8,10,13,1,7,10,5,15,10,13,5,1,8,0,0,6,1,9,5,14,10,7,6,2,5,6,1,8,12,6,9,0,6,0,0,14,12,13,4,13,13,11,17,11,8,5,7,1,0,18,10,7,7,8,3,3,12,5,1,7,5,4,0,1,6,9,4,4,5,6,12,8,2,4,3,5,0,6,2,4,9,0,8,5,2,10,7,0,12,10,1,2,1,6,1,5,7,9,0,0,6,5,1,2,5,1,3,0,5,2,3,11,2,6,0,8,5,11,21,12,6,12,2,14,1,13,7,12,5,10,5,5,7,3,6,18,18,3,0,4,7,5,4,4,1,6,2,5,1,3,0,3,2,0,3,2,2,0,3,4,0,1,0,4,2,2,1,1,2,1,1,2,3,0,1,0,0,1,1,2,1,0,0,0,1,1,0,0,1,2,1,0,2,2,4,4,2,1,8,0,7,5,2,9,2,5,3,1,1,12,17,14,5,5,4,4,3,6,6,4,2,0,1,0,0,2,0,0,2,1,0,1,0,1,1,1,0,2,1,3,1,0,1,0,1,1,0,1,3,1,4,2,1,2,3,2,1,0,0,0,1,0,1,0,0,1,0,2,2,2,0,4,3,3,4,0,2,1,3,1,9,3,2,0,0,2,0,2,1,1,1,2,0,1,0,0,0,2,0,1,0,0,0,1,0,0,0,3,1,2,2,0,1,0,2,2,1,1,1,0,1,1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,8,0,5,2,3,6,0,5,4,4,4,1,2,1,0,0,1,3,1,3,2,0,1,1,1,1,1,0,0,0,0,0,0,0,2,0,2,0,1,1,0,2,0,2,2,1,2,3,2,0,0,0,1,2,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,5,4,7,2,2,8,11,1,0,6,5,4,7,0,0,1,3,7,1,3,7,3,1,2,4,7,5,7,3,1,4,9,11,3,4,9,5,6,8,1,1,6,5,2,4,0,4,2,0,0,5,4,2,1,2,3,1,0,1,4,0,7,4,3,4,5,6,6,8,1,2,6,7,4,4,7,6,3,2,3,1,4,0,6,0,0,4,0,9,1,0,1,2,1,0,6,10,11,11,0,4,7,2,12,7,8,7,9,3,8,3,3,8,4,11,9,11,14,2,8,6,8,4,11,9,11,11,0,7,3,8,5,11,16,5,9,6,4,8,9,1,3,0,12,6,6,8,0,2,4,7,1,2,0,5,2,0,7,4,4,0,0,7,5,2,4,0,0,3,5,8,0,4,1,7,6,9,2,5,2,1,5,0,1,4,3,5,7,1,5,8,7,2,4,1,2,3,2,1,1,2,4,0,1,0,6,3,3,3,1,2,3,5,2,0,4,3,1,1,3,1,10,4,5,7,2,2,1,3,4,7,10,4,3,1,6,1,3,2,0,8,1,6,1,2,2,2,1,5,1,2,4,4,3,6,2,5,4,0,4,4,3,7,5,1,4,2,2,7,2,0,6,3,9,5,8,2,7,2,6,2,2,6,6,1,1,0,5,4,5,2,0,0,0,1,2,1,0,3,0,4,1,0,0,2,1,0,2,0,2,2,2,2,1,2,1,0,2,1,1,1,3,0,1,2,2,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,0,1,1,0,0,1,0,1,0,0,0,0,0,1,3,3,4,0,5,0,3,4,3,4,1,4,0,0,0,12,3,4,2,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,0,4,0,1,1,0,1,1,0,1,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,1,5,0,1,1,4,1,5,0,5,0,11,9,4,0,1,0,3,3,1,2,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,1,0,1,0,0,2,0,2,2,1,0,3,2,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,3,10,6,1,0,8,7,11,0,1,10,8,10,2,1,5,3,0,0,6,4,3,4,3,0,6,6,6,3,0,12,9,4,9,6,0,8,7,3,7,8,4,8,7,8,3,5,8,6,2,1,4,6,2,0,4,4,3,1,1,1,1,5,5,0,4,4,6,1,4,4,3,7,5,0,0,5,7,1,4,7,1,6,3,1,2,1,1,13,2,0,3,3,1,3,5,8,9,1,7,10,3,6,10,11,5,8,3,6,4,0,6,6,6,3,0,11,8,6,0,8,7,4,6,0,6,7,2,7,4,15,10,17,13,9,2,5,11,13,0,3,8,11,4,3,8,1,13,6,12,13,4,9,14,3,13,18,3,1,0,0,5,6,6,7,1,1,2,9,5,10,8,3,9,5,3,5,6,6,4,1,4,7,4,2,14,5,4,8,2,0,4,4,2,7,6,3,2,10,4,1,2,2,2,7,1,7,2,12,1,2,4,1,6,6,3,1,1,4,0,7,5,2,2,4,3,2,4,1,7,0,9,3,7,8,0,0,3,1,2,1,0,5,4,6,2,5,3,0,5,3,2,0,1,1,1,3,3,4,2,3,1,2,0,0,0,0,3,3,4,1,1,4,2,3,2,4,1,0,1,1,1,0,0,0,0,0,2,1,0,0,2,3,4,3,5,2,1,7,5,4,6,0,1,3,1,0,8,3,1,0,3,1,1,1,1,3,3,0,2,0,2,0,1,0,0,1,0,2,1,2,0,2,2,1,3,1,3,0,2,0,0,0,4,0,2,2,0,1,1,0,2,1,1,0,1,0,0,0,0,0,0,0,1,1,3,1,5,1,5,3,3,0,5,1,15,4,1,7,2,1,1,1,1,2,5,4,0,0,1,1,1,0,0,1,0,1,0,0,1,0,1,1,0,2,1,0,2,0,1,0,2,2,2,0,1,0,1,1,1,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,4,6,7,0,7,4,5,6,3,4,2,13,7,0,0,6,3,3,2,0,5,0,0,0,0,2,0,2,2,0,2,1,1,0,1,0,1,0,2,2,0,2,1,1,1,0,0,1,3,1,3,3,2,0,3,0,3,0,1,0,1,1,0,0,0,1,1,0,0,4,2,3,8,9,1,2,4,11,2,0,3,2,3,1,3,3,2,4,5,2,6,4,7,4,6,4,7,4,7,3,7,1,7,0,10,0,7,3,0,5,0,3,2,3,0,1,1,5,2,4,0,3,0,4,0,1,0,1,4,1,3,4,3,4,3,4,3,1,2,2,4,3,5,0,0,0,2,0,10,9,2,3,7,9,6,11,1,11,6,1,10,8,9,3,15,2,15,10,6,12,13,4,6,7,2,1,5,0,8,6,2,8,3,6,5,3,9,1,10,7,6,15,12,0,0,8,6,0,7,0,11,2,15,3,9,10,12,3,12,3,0,3,3,2,2,0,2,6,5,0,7,6,0,0,0,0,2,5,0,5,6,9,3,4,1,0,1,0,4,6,6,7,3,3,4,5,5,1,4,1,3,4,1,5,8,5,3,2,11,6,4,3,8,1,0,0,1,1,3,1,3,7,0,0,6,0,6,1,2,4,7,9,4,0,7,6,9,1,1,6,3,3,0,0,2,1,0,0,1,2,2,1,0,2,3,3,4,1,3,4,3,5,2,5,3,5,5,0,0,5,3,6,5,0,5,7,0,3,7,2,5,5,1,1,0,5,2,2,0,0,5,3,0,1,11,1,7,0,6,7,1,10,8,2,1,0,2,0,3,0,2,0,0,0,0,2,1,1,5,2,1,2,0,5,5,3,0,2,0,1,0,4,3,0,2,4,5,1,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,3,2,2,2,5,0,7,2,5,2,2,3,2,2,1,1,5,4,2,0,1,1,0,2,1,3,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,2,1,1,1,0,0,2,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,4,0,7,0,6,4,7,5,6,3,2,0,2,12,5,7,2,0,3,0,1,3,2,1,0,2,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,2,1,0,2,1,2,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        phase: [ 7.541, 14.484, 19.2,   // PHASE 0-3: Pulsieren + Cometen
                23.814,                 // 4 kein pulsieren 
                28.644,                  // 5 pulsieren
                34.714,                 // 6 kein pulsieren
                38.4,                   // 7 kein pulsieren
                57.6,                   // 8 pulsieren
                62.158,                  // 9 kein pulsieren
                67.2,                   // 10 pulsieren
                73.091,                 // 11 kein p.
                76.536,                 // 12 p.
                81.479,                 // 13 kein p.
                86.422,                 // 14 p.
                92.347,                 // 15 kein p.
                96                      // 16 p.
               ]
    },
    
    1: {			// FEUER PIERRE 
        srcPath: 'audio/fire/f_01', 
        startTime: 0,   // sec
        speed: 9,

        delayBridge: [ 40, 62 ],
        
         animationSets:{
            delayCometFly: 3000,
            zoomMaxScale: 2,
            zoomDuration: 20000,
            lightWfading: 1,
            lightWmax: 6,
            lightYfading: 1,
            lightYmax: 6,
            particleMaxHeight: 230,
            particleUp: 4,
            countPerZoom: 25
        },
        
        delays: {
            fountain: [ 27.059,     58.181, 59.077, 59.916, 60.895, 61.804, 62.713, 63.622, 64.531, 65.454, 66.349, 67.258, 68.167, 69.076, 69.986, 70.895, 71.804 ],
            comet: [ 29.091, 32.727, 34.545, 36.363, 40.000, 41.818, 43.636, 47.270, 49.090, 50.909, 54.545, 56.363, 72.727, 76.363, 78.182, 80.000, 83.636, 85.454, 87.273 ],
            zoom: [  0.909, 2.727, 4.545, 6.363, 8.182, 10, 11.818, 13.636, 14.545, 14.773, 15.454, 16.363, 16.591, 17.273, 18.182, 18.409, 19.091, 20, 20.227, 20.909, 21.818, 22.045, 22.727, 23.636, 23.863, 24.545, 25.454, 25.682, 26.363, 27.273, 27.500, 27.727, 28.182, 28.409, 28.636, 28.864,

                    29.091, 29.319, 29.546, 29.774, 30, 30.228, 30.455, 30.683, 30.796, 30.910, 31.137, 31.364, 31.592, 31.818, 32.046, 32.273, 32.501, 32.614, 32.728, 32.956, 33.182, 33.410, 33.637, 33.865, 34.091, 34.319, 34.433,
                    34.546, 34.774, 35.000, 35.228, 35.455, 35.683, 35.909, 36.137, 36.251, 36.364, 36.592, 36.819, 37.046, 37.273, 37.501, 37.728, 37.956, 38.069, 38.183, 38.410, 38.637, 38.865, 39.091, 39.319, 39.546, 39.774, 39.887,
                    40.001, 40.228, 40.455, 40.683, 40.910, 41.138, 41.364, 41.592, 41.705, 41.819, 42.047, 42.273, 42.501, 42.728, 42.956, 43.182, 43.410, 43.524, 43.637, 43.865, 44.091, 44.319, 44.546, 44.774, 45.001, 45.228,
                    45.342, 45.456, 45.683, 45.909, 46.137, 46.364, 46.592, 46.819, 47.047, 47.160, 47.274, 47.501, 47.728, 47.956, 48.182, 48.410, 48.637, 48.865, 48.978, 49.092, 49.319, 49.774, 50, 50.228, 50.455, 50.683, 50.796, 
                    50.910, 51.138, 51.364, 51.592, 51.818, 52.047, 52.273, 52.501, 52.615, 52.728, 52.956, 52.955, 53.182, 53.410, 53.637, 53.865, 54.091, 54.319, 54.433, 54.546, 54.774, 55, 55.228, 55.455, 55.683, 55.909, 56.137, 
                    56.251, 56.364, 56.592, 56.818, 57.047, 57.273, 57.501, 57.727, 

                    72.728, 72.956, 73.183, 73.411, 73.637, 73.865, 74.092, 74.320, 74.433, 74.547, 74.774, 75.001, 75.229, 75.455, 75.683, 75.910, 76.138, 76.251, 76.365, 76.593, 76.819, 77.047, 77.274, 77.502, 77.728, 77.956, 
                    78.070, 78.183, 78.411, 78.637, 78.865, 79.092, 79.320, 79.546, 79.774, 79.888, 80.001, 80.229, 80.456, 80.683, 80.910, 81.138, 81.365, 81.593, 81.706, 81.820, 82.047, 82.274, 82.502, 82.728, 82.956, 83.183, 
                    83.411, 83.524, 83.638, 83.865, 84.092, 84.320, 84.547, 84.775, 85.001, 85.229, 85.342, 85.456, 85.684, 85.910, 86.138, 86.365 ]
        },
        
        f_drumsVolume: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,9,32,491,99,366,25,47,18,78,125,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,34,111,178,400,95,343,84,47,94,149,151,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,9,105,298,334,310,153,92,38,146,151,96,11,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,66,191,350,423,252,147,123,147,103,11,46,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,63,356,16,434,29,116,62,107,41,23,91,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,60,117,171,292,303,235,96,23,16,116,109,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,77,237,113,38,258,133,75,1,100,151,126,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,111,424,179,232,436,7,85,93,147,161,80,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,10,97,124,314,322,140,80,41,148,141,90,10,4,31,54,173,46,408,394,175,27,137,108,22,29,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,79,67,34,152,376,23,41,148,148,127,1,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,1,157,346,413,260,141,121,149,109,3,37,4,27,64,269,261,190,194,246,72,121,32,0,95,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,53,165,34,421,381,180,139,135,109,29,35,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,66,343,16,425,45,109,59,105,45,34,89,16,2,142,16,13,486,114,365,23,45,13,82,127,60,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,77,267,267,198,203,263,66,117,31,0,92,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,60,126,157,290,297,236,100,80,19,117,78,8,3,23,110,165,374,82,359,76,48,98,130,146,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,140,5,20,482,113,366,22,44,19,85,122,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,71,226,108,44,259,127,73,1,96,151,128,5,25,13,97,126,309,322,147,80,39,150,141,89,11,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,26,109,188,404,96,349,76,50,101,152,148,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,108,385,192,228,446,17,82,97,150,170,82,3,0,126,57,160,339,420,264,134,121,150,107,10,44,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,8,98,118,299,322,152,85,40,147,140,86,12,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,83,75,44,154,388,14,43,148,147,128,2,18,1,32,76,345,15,428,39,114,59,102,46,32,89,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,49,159,364,404,269,150,115,152,110,13,45,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,56,165,19,406,396,180,27,138,112,25,30,18,1,20,61,187,169,291,297,239,92,26,12,109,80,7,4,35,116,170,401,86,342,79,48,101,156,145,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,65,344,9,431,35,110,58,111,36,25,93,3,2,145,4,16,479,109,369,25,44,16,85,125,59,1,78,109,414,199,216,451,28,74,99,150,164,83,4,0,131,56,157,345,414,262,146,119,146,102,9,41,4,50,224,300,326,268,222,334,54,135,8,6,90,59,38,36,55,56,157,69,364,112,67,4,115,144,129,6,6,5,54,178,222,33,72,51,15,9,0,3,1,0,56,97,232,0,38,150,37,16,21,1,6,3,7,22,85,201,228,98,644,384,328,16,116,129,209,53,68,32,5,6,2,44,27,50,36,30,25,10,14,2,4,4,207,181,162,185,129,71,49,3,0,1,0,1,0,4,7,4,4,2,0,15,120,187,163,50,167,27,40,111,176,342,545,73,433,23,0,69,84,158,111,30,165,36,261,248,132,474,44,95,122,158,165,85,0,2,155,385,137,372,186,103,15,3,0,5,2,1,0,67,131,288,102,131,149,70,2,15,3,4,16,12,34,22,12,158,188,263,209,327,24,46,158,173,49,69,48,22,36,37,30,49,48,35,16,1,2,7,19,2,28,16,232,323,141,236,28,61,23,12,0,2,2,2,2,76,63,57,146,114,18,59,81,93,204,58,90,39,169,249,225,408,17,486,55,8,132,151,153,60,3,12,55,105,233,301,512,12,34,177,146,138,2,16,2,9,35,72,280,145,137,3,8,11,1,3,0,0,1,15,6,52,60,58,80,9,31,19,8,1,5,15,94,252,73,356,528,646,153,20,198,156,169,22,21,7,22,38,41,29,41,22,12,5,14,19,13,16,7,138,184,107,358,3,166,66,65,0,4,5,1,1,0,6,0,9,4,3,2,1,122,147,57,178,106,64,25,189,476,175,493,408,278,89,80,157,143,127,29,42,22,209,50,81,542,398,216,49,147,109,27,27,23,2,127,166,47,354,300,15,69,0,4,7,1,0,0,0,85,243,56,150,130,70,8,8,9,0,10,36,12,18,341,120,233,39,523,271,4,142,162,75,81,21,82,13,13,18,42,22,8,0,20,28,33,12,11,3,33,96,61,269,247,64,81,35,30,8,2,2,0,0,30,49,16,7,100,114,44,27,69,126,219,4,41,8,108,203,31,282,573,422,136,168,151,91,85,20,26,47,64,65,28,311,84,283,56,121,21,2,97,85,3,74,211,68,163,246,50,64,11,9,1,2,2,0,0,142,216,117,95,38,8,11,15,25,0,2,31,8,33,21,75,331,542,694,101,71,80,15,58,133,13,31,9,14,15,9,1,23,30,34,34,28,16,16,8,16,96,152,335,135,94,126,3,18,4,0,3,3,1,2,9,4,6,1,2,5,39,113,166,258,120,118,31,152,334,3,77,586,125,285,88,61,36,10,122,14,35,103,67,99,501,260,384,53,97,35,89,122,66,0,111,133,147,125,304,120,52,16,5,0,8,0,0,1,5,109,30,284,123,73,30,13,29,19,4,11,8,70,160,217,280,217,376,321,142,20,51,68,133,40,73,52,17,10,11,23,41,43,43,36,28,12,5,11,4,61,240,76,306,47,87,58,18,18,5,2,1,1,21,24,3,56,103,93,84,60,141,195,65,99,13,67,161,421,267,152,503,249,338,85,32,39,106,97,54,7,79,92,146,208,244,359,102,32,121,159,146,20,0,7,192,160,7,286,93,72,52,5,11,8,0,1,0,144,112,10,236,55,6,39,28,25,13,2,4,27,45,209,45,305,620,30,509,74,92,149,158,128,12,29,3,35,21,21,41,46,40,36,29,12,1,15,2,3,124,366,97,317,253,112,25,10,5,2,0,1,0,3,4,2,10,3,7,4,2,21,27,194,126,48,26,104,3,95,253,186,229,210,45,70,116,173,166,6,12,111,59,268,263,497,122,108,50,165,143,87,6,0,49,95,312,207,9,218,44,19,3,1,5,0,0,1,90,137,52,195,197,110,45,20,2,12,14,10,27,12,17,173,196,551,65,537,29,32,144,155,128,91,77,69,11,36,21,29,42,34,17,3,14,22,22,24,0,109,72,25,163,268,110,92,26,2,6,4,1,1,7,13,103,192,46,106,94,27,147,219,129,142,19,47,90,290,14,494,356,423,8,60,177,151,161,98,6,18,110,56,68,155,470,198,168,131,160,105,16,43,4,44,96,34,365,110,184,44,59,2,2,3,0,1,0,20,110,109,202,191,15,7,23,8,8,10,6,35,73,198,190,152,434,406,341,72,135,145,126,34,75,3,55,76,46,40,32,34,5,7,12,21,19,28,22,10,87,158,160,314,300,26,90,13,6,6,0,1,0,1,3,7,8,3,3,2,31,135,212,103,129,134,13,16,177,62,337,74,518,101,26,192,138,146,14,53,19,175,50,291,137,535,122,112,78,104,48,29,93,3,24,138,62,169,159,93,59,53,0,2,6,5,0,0,129,105,206,31,216,151,42,10,8,8,4,26,32,5,113,157,106,343,633,521,83,101,123,48,77,113,137,12,11,16,12,26,5,20,26,31,28,30,37,2,0,106,167,39,45,176,5,71,6,24,4,2,2,2,24,32,56,106,19,138,37,40,17,33,131,26,171,7,101,237,47,488,461,524,191,44,191,90,38,24,43,37,70,13,204,48,306,353,249,105,21,37,111,77,10,9,4,198,318,255,221,98,13,14,1,1,4,0,0,7,2,77,99,188,116,13,0,35,19,8,14,23,20,130,240,7,117,697,115,179,55,27,79,110,123,56,43,35,9,4,6,29,27,36,34,40,29,17,13,5,54,163,103,268,300,128,45,23,13,4,2,0,1,1,5,0,1,10,0,0,2,131,204,6,57,160,11,57,190,277,320,248,269,320,78,130,5,0,103,50,0,41,39,67,161,60,377,127,69,13,112,146,122,1,10,12,66,188,205,29,70,54,8,7,3,1,0,0,44,81,260,37,2,161,83,10,3,10,5,6,8,24,126,305,72,157,581,183,370,3,20,144,165,4,128,35,20,20,3,39,27,49,39,35,21,10,12,3,3,23,140,140,153,205,131,75,20,5,11,4,1,0,0,2,65,37,43,149,79,38,94,193,154,56,169,57,46,94,204,328,540,91,405,24,7,72,87,126,90,24,188,26,251,247,142,478,42,96,113,145,174,83,3,1,152,393,112,376,196,113,35,2,3,1,1,1,0,65,141,267,157,144,156,36,7,41,12,6,3,14,33,62,66,53,146,306,236,321,97,138,170,197,95,72,4,20,39,33,37,41,48,32,14,4,2,3,17,1,40,8,201,343,147,243,37,24,13,0,2,0,2,1,6,2,4,2,4,3,0,26,113,100,201,65,68,26,196,288,233,533,25,508,76,6,126,154,172,40,43,9,35,95,229,309,341,7,33,169,154,126,5,17,2,7,9,100,275,157,134,69,7,10,1,2,2,0,0,7,1,73,81,24,118,2,44,0,8,6,10,32,108,158,2,444,425,456,160,10,122,166,150,33,38,89,15,34,51,31,40,24,17,4,10,19,22,15,3,113,161,94,354,12,121,63,80,4,9,1,1,0,1,3,34,73,42,19,129,20,149,126,37,181,100,85,45,168,470,159,498,413,297,106,92,148,148,114,13,4,15,58,43,67,545,391,219,47,146,115,36,38,14,4,138,163,78,328,279,24,88,4,9,1,1,1,1,1,106,224,102,205,154,53,44,2,30,2,8,25,5,40,236,100,291,37,731,185,47,159,109,88,77,66,17,37,60,29,32,19,12,15,19,33,28,11,10,4,21,126,118,251,267,48,86,46,18,3,1,0,2,0,0,3,5,6,8,2,1,70,103,76,211,4,29,1,96,167,91,297,592,427,172,165,147,92,35,42,39,20,99,68,15,322,78,284,54,125,12,8,92,13,6,79,222,77,154,243,36,59,14,7,1,3,2,1,14,150,228,68,104,2,10,48,40,21,24,12,36,15,18,72,0,378,460,643,44,12,104,55,66,116,74,41,24,28,18,10,2,20,33,36,32,27,18,15,5,45,96,109,328,326,114,126,7,41,6,0,4,4,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,169,267,230,509,24,500,85,8,129,153,154,58,2,13,59,98,222,287,338,2,32,90,161,127,1,18,2,1,28,56,309,136,123,47,19,14,0,3,0,0,4,16,2,59,58,55,83,10,11,15,9,2,6,16,85,243,49,382,501,670,172,13,196,161,164,12,77,5,23,34,43,25,43,21,14,8,4,16,17,18,6,0,193,101,344,23,140,67,68,0,0,6,0,0,0,5,3,9,4,3,3,2,122,145,72,180,109,63,8,188,478,17,492,399,270,83,88,146,152,132,31,41,25,56,67,67,30,379,227,50,139,106,32,33,20,3,123,190,75,374,275,133,59,2,5,5,0,0,0,3,102,256,40,205,123,68,28,9,15,2,7,35,12,20,342,119,244,19,564,261,2,56,149,83,84,19,82,7,8,20,37,22,10,15,20,30,24,17,11,2,33,76,66,276,241,42,62,47,18,9,1,1,1,1,29,57,17,17,103,112,47,26,76,108,211,8,178,7,98,180,35,295,566,410,165,173,150,100,19,14,26,38,73,73,26,329,89,273,61,122,20,3,93,9,4,73,114,69,97,247,25,65,3,16,1,1,2,0,5,141,220,137,78,27,4,8,15,21,2,0,28,7,18,145,52,326,303,697,92,68,78,15,51,141,10,34,26,28,21,4,5,17,35,34,35,28,18,16,5,17,78,154,298,301,134,115,46,30,0,1,3,3,1,1,5,1,7,0,2,5,44,70,163,263,118,120,31,138,322,29,28,602,106,122,81,67,49,13,119,13,35,109,62,95,495,250,401,48,40,30,93,126,58,3,106,135,142,112,302,129,59,19,6,2,7,0,0,1,3,104,43,264,123,74,35,9,28,9,12,15,8,20,156,192,304,257,384,307,152,19,29,86,136,122,73,54,14,23,20,24,47,46,44,36,20,10,9,13,49,76,243,172,299,58,97,64,12,21,3,1,0,1,27,99,19,59,40,93,84,65,151,206,63,87,19,63,167,444,239,157,501,78,348,90,30,34,99,104,48,6,75,87,154,396,233,350,31,30,121,153,154,22,0,11,217,124,13,288,104,78,56,4,9,9,0,1,0,145,115,10,226,46,11,13,30,25,2,4,2,28,49,214,41,313,616,34,506,68,91,144,150,216,13,27,7,24,18,14,43,51,44,31,27,16,5,16,7,1,117,359,131,302,227,121,24,15,6,3,0,1,0,0,5,1,11,1,5,3,1,19,23,191,135,54,22,104,47,79,257,162,231,209,42,68,112,169,170,6,10,102,58,268,251,472,120,107,55,161,149,94,15,6,48,109,306,229,11,242,42,22,2,0,4,0,1,0,97,149,64,212,196,109,45,14,10,19,8,5,33,10,12,186,179,542,62,547,34,32,154,159,123,94,75,70,7,36,27,24,38,36,18,1,12,16,21,23,2,117,77,8,169,254,116,84,27,1,3,4,1,1,7,11,107,182,48,103,99,29,145,202,140,140,17,46,98,294,32,507,359,431,14,57,185,154,161,99,6,16,107,51,92,167,472,211,162,122,167,101,11,46,3,52,92,17,378,119,177,35,64,2,3,3,0,1,0,22,124,133,205,181,11,10,26,16,9,15,3,36,70,189,177,156,438,380,323,77,131,145,137,41,79,5,41,72,60,49,34,34,1,8,12,20,19,30,22,9,84,163,133,316,331,25,90,12,6,2,0,1,0,2,2,11,11,3,4,1,28,137,223,113,127,124,14,18,199,40,313,78,498,125,23,189,139,137,14,55,18,188,49,306,132,528,115,110,80,106,44,19,87,7,22,145,61,216,138,110,57,55,4,0,5,4,0,0,123,107,230,32,234,150,42,9,13,6,0,28,30,7,109,149,100,328,630,504,99,102,125,51,92,103,137,8,8,20,13,23,9,23,25,29,30,30,36,4,2,133,187,24,37,176,6,60,2,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        f_padsVolume: [ 4,2,22,5,8,9,4,15,35,8,0,26,11,22,2,0,31,17,15,32,20,35,35,14,20,12,18,31,5,33,0,10,40,30,20,2,12,35,35,29,34,1,39,55,2,23,2,39,54,42,5,3,5,38,8,4,4,4,23,59,32,8,4,18,56,8,6,28,10,36,40,21,6,16,55,71,10,33,6,26,69,29,32,12,0,27,43,1,6,15,39,46,3,4,2,38,66,7,20,33,3,53,53,18,11,7,21,83,4,3,27,41,69,39,38,15,7,82,70,22,14,29,38,63,25,29,13,16,54,27,2,14,1,45,25,8,20,52,19,63,4,23,57,0,54,47,11,27,43,58,48,35,12,44,8,77,23,50,57,17,51,32,18,36,63,30,56,32,27,66,7,28,38,17,54,34,32,8,7,32,18,25,68,11,49,72,21,79,46,54,66,21,43,55,25,109,38,10,16,5,35,65,13,40,2,15,56,36,7,0,41,20,42,20,31,23,52,54,8,32,15,1,70,56,26,65,113,42,34,27,19,22,68,17,75,111,55,35,37,31,46,43,1,71,89,8,30,76,26,32,36,17,32,103,14,39,46,34,33,17,8,5,78,28,40,87,23,14,7,29,57,86,0,71,84,50,14,1,15,91,45,5,74,67,3,15,40,21,61,65,15,37,92,9,2,39,26,63,58,10,66,88,37,18,29,32,18,25,8,81,98,51,29,77,38,44,25,30,106,68,30,57,61,9,59,13,6,70,78,1,38,55,6,34,21,8,73,99,21,67,79,10,20,12,18,94,73,22,52,86,15,1,0,30,44,81,35,49,73,10,28,0,28,59,34,27,92,53,3,11,17,20,58,24,19,73,61,33,40,36,27,67,38,72,110,58,20,42,34,21,54,34,24,99,48,5,51,36,6,21,14,40,68,30,38,60,27,43,34,4,63,70,31,7,51,51,20,14,7,45,72,51,61,72,66,18,15,22,95,100,31,38,82,34,39,28,26,35,7,27,33,45,45,20,45,30,11,60,17,34,48,10,55,1,38,63,27,35,5,49,52,56,44,45,9,68,25,23,45,39,52,23,22,19,38,11,25,24,35,32,7,8,40,18,17,21,35,6,13,26,59,17,24,35,25,41,50,15,21,33,70,30,10,24,20,55,61,24,18,6,42,79,31,39,8,22,33,69,4,19,19,48,25,44,15,1,55,55,30,13,5,26,44,55,1,7,2,28,91,0,23,2,49,77,45,13,21,19,66,92,7,16,6,41,74,42,0,14,20,49,39,3,3,13,55,27,16,3,18,38,58,24,20,2,12,81,58,0,6,26,54,71,40,15,7,38,79,12,1,22,4,65,58,22,9,23,19,55,20,12,30,1,41,26,4,32,33,24,27,20,44,32,26,57,12,44,30,16,46,54,34,18,29,60,13,42,48,21,1,41,17,34,42,13,42,30,14,41,34,37,31,39,34,38,16,6,47,37,64,3,44,6,32,56,20,43,10,91,44,54,98,99,27,42,41,24,50,57,64,117,64,12,35,26,42,44,33,33,60,63,11,27,41,26,37,39,32,75,63,12,67,31,21,24,4,39,108,51,20,61,91,15,7,16,38,59,95,8,75,56,38,0,0,31,59,39,2,78,51,15,5,25,33,59,46,20,68,82,1,54,4,41,42,48,42,104,60,0,29,60,30,38,1,39,75,60,8,23,41,26,36,27,15,52,52,7,30,13,42,37,0,13,49,31,13,44,51,2,9,3,65,95,35,45,72,41,20,15,7,82,93,35,51,56,34,23,6,5,52,50,22,47,64,29,21,18,20,78,49,24,28,44,15,33,15,9,70,35,28,66,74,26,6,35,4,71,18,69,99,84,1,0,29,24,64,14,19,82,33,10,37,44,33,32,6,9,74,61,3,49,48,28,56,11,14,97,53,15,43,20,9,25,4,48,76,29,31,78,58,35,15,15,11,79,51,6,51,6,4,43,18,22,67,22,51,25,1,1,13,34,54,26,23,18,42,45,47,3,5,53,60,16,20,52,7,42,69,13,36,14,38,61,40,15,33,24,39,30,45,14,58,18,35,16,10,18,40,59,21,10,20,20,32,35,14,26,31,67,84,21,31,23,51,63,40,17,7,30,69,80,7,11,3,38,33,45,21,31,17,22,38,0,26,12,37,20,7,13,8,31,57,39,13,11,12,61,60,3,3,2,21,69,2,23,2,41,54,25,12,18,15,52,63,21,26,48,31,60,30,4,3,9,26,26,16,10,15,10,49,39,41,18,7,80,37,14,38,5,46,72,22,55,7,44,62,37,46,15,6,59,32,19,28,5,33,44,28,12,41,17,45,38,36,31,27,30,55,30,47,21,35,49,42,37,42,12,44,61,17,51,28,47,39,68,62,1,35,50,42,32,37,31,26,28,26,47,20,5,22,8,18,2,2,21,26,28,37,16,3,18,77,43,13,27,14,33,66,37,26,12,17,38,29,23,29,2,33,27,0,64,84,43,26,33,7,20,37,24,41,66,52,25,20,40,15,33,4,40,67,77,41,74,70,0,4,10,33,76,70,25,63,36,17,12,12,21,51,27,32,68,19,26,6,7,20,52,9,44,42,38,4,28,4,6,41,27,32,39,34,32,30,17,2,64,24,43,95,51,24,29,1,11,47,53,39,52,34,14,17,20,7,28,24,14,48,21,30,35,1,14,53,25,14,42,59,18,26,4,4,16,19,33,58,39,49,51,12,11,3,2,65,77,51,51,24,5,2,37,31,41,29,15,39,29,30,12,6,17,44,35,42,32,50,34,13,0,11,46,53,59,38,44,24,20,36,7,24,18,45,81,68,44,31,18,7,32,33,33,55,33,21,28,10,3,19,23,23,59,62,3,48,62,15,44,30,35,103,78,28,36,27,12,21,6,50,67,67,38,61,43,7,17,3,24,76,30,45,37,33,6,24,15,41,36,29,23,41,33,30,4,28,35,49,31,68,40,42,1,2,54,52,25,23,35,29,37,54,41,4,40,36,21,16,47,15,42,32,33,1,18,8,8,39,31,11,4,25,14,28,42,31,20,43,53,49,7,22,52,12,48,23,8,5,55,53,37,5,19,20,59,66,0,11,28,37,27,29,14,0,17,39,41,6,10,24,50,54,8,14,3,31,69,41,24,36,15,69,65,2,37,26,58,57,22,17,7,43,62,32,7,5,12,20,57,22,0,10,38,31,60,6,0,40,9,32,11,13,14,50,53,2,0,31,21,82,37,1,1,12,49,59,19,8,14,10,56,38,2,13,47,26,43,9,37,12,9,45,7,15,14,3,7,42,38,8,0,25,43,19,6,6,56,46,4,17,21,30,61,43,25,43,9,47,66,60,36,36,2,15,52,25,22,11,25,23,39,34,9,8,23,49,12,22,35,28,38,31,45,25,24,64,66,44,14,50,33,37,73,21,11,47,44,33,36,15,39,26,21,16,36,6,17,28,57,41,29,62,57,11,2,0,27,86,47,15,42,102,6,6,31,6,18,75,29,89,82,24,45,32,21,36,43,57,77,63,10,46,27,38,25,17,12,59,47,8,68,37,24,11,20,37,91,40,0,59,55,17,10,9,16,73,57,25,79,58,30,12,12,29,72,67,55,88,57,29,16,10,42,58,21,6,57,73,12,23,22,38,45,19,25,64,56,10,28,28,56,63,3,60,91,56,6,13,71,26,31,27,45,72,65,19,49,27,42,34,7,52,70,25,8,25,56,41,22,11,27,41,31,16,38,30,10,9,11,34,61,29,19,62,42,35,22,36,47,45,52,14,35,38,26,0,2,35,28,18,22,38,11,16,11,13,39,12,5,8,45,1,6,23,19,25,18,4,35,49,16,0,29,4,39,18,5,29,41,9,5,38,5,18,9,1,28,19,20,20,23,0,22,17,22,41,4,2,25,21,7,21,10,4,43,13,6,32,12,2,11,22,10,10,27,4,20,14,5,3,23,9,16,1,5,21,4,17,0,2,16,27,6,0,21,7,10,4,3,7,11,5,3,25,8,12,18,9,16,17,10,5,17,0,17,2,4,16,9,4,2,20,8,0,12,6,0,9,17,0,22,13,27,18,13,28,1,0,2,1,21,0,7,10,11,8,8,11,12,10,3,27,9,17,13,3,4,9,3,8,7,3,17,6,14,9,0,20,5,11,9,13,0,2,15,13,9,0,17,14,0,3,14,10,3,13,0,2,1,7,11,4,19,2,5,1,6,25,0,5,7,4,1,1,6,14,9,9,23,7,2,18,10,8,1,6,6,9,6,21,7,7,23,11,11,5,3,17,5,9,8,1,3,8,10,11,10,7,22,13,8,10,8,2,0,2,9,7,6,19,6,18,12,0,18,4,8,14,15,10,6,4,7,26,8,12,11,10,20,12,11,4,12,3,4,5,10,9,8,20,10,11,6,14,21,0,4,5,16,1,7,18,2,21,8,6,14,10,2,4,10,1,10,0,2,18,13,8,14,14,10,1,1,5,15,2,11,18,2,3,14,4,1,6,1,4,7,3,13,7,4,1,20,0,11,19,5,6,8,3,11,18,3,5,5,8,12,3,2,11,11,3,15,0,6,11,3,14,6,25,8,8,16,10,22,2,14,13,8,8,13,18,4,23,4,11,13,6,4,6,6,7,21,5,0,5,0,6,5,10,10,14,4,11,8,2,18,9,18,18,0,7,0,0,9,3,7,1,0,4,13,6,0,10,2,3,2,0,0,4,0,5,9,4,2,2,3,1,0,3,3,6,4,0,4,4,2,8,1,8,0,2,6,11,4,3,7,1,4,3,2,0,9,3,2,3,2,2,0,6,0,2,2,9,6,8,4,4,1,3,3,7,2,0,4,0,2,3,1,0,0,1,3,1,5,8,5,1,14,8,3,0,5,1,1,4,1,6,9,1,1,4,0,5,2,2,3,12,27,24,12,6,19,12,5,14,15,14,7,22,8,25,10,16,16,13,17,14,0,9,2,5,1,6,4,13,1,11,13,15,8,0,6,3,5,6,13,1,18,6,0,16,1,19,21,1,8,7,15,0,9,6,26,9,27,8,3,11,1,10,10,3,16,2,0,6,4,3,2,8,7,1,2,10,3,1,5,3,3,0,0,17,8,6,14,26,14,5,3,16,4,13,2,26,8,16,12,11,9,2,12,16,8,7,8,9,2,6,9,4,16,8,13,3,17,5,10,11,9,11,4,0,7,20,5,0,9,15,19,8,8,12,10,11,7,0,1,4,11,13,7,12,6,9,8,0,17,10,1,5,0,0,6,15,0,13,2,15,7,0,9,10,4,7,4,0,2,5,16,17,0,14,14,8,12,2,17,10,12,9,6,11,6,15,3,7,4,10,4,2,10,0,2,9,4,2,10,4,13,10,7,17,1,2,5,7,24,12,11,7,7,2,9,14,12,13,12,2,18,11,1,4,6,9,1,6,7,2,3,2,0,2,5,4,0,1,11,9,14,5,9,10,7,0,11,18,5,13,13,5,8,10,4,8,21,1,17,8,6,9,3,2,4,0,2,14,5,7,14,0,5,0,8,2,15,1,8,11,10,11,6,10,7,15,11,6,11,13,28,3,13,10,18,11,7,17,1,10,4,8,19,11,14,3,6,1,14,1,7,13,11,12,5,13,2,5,2,0,8,17,8,5,12,8,18,2,5,21,3,0,2,13,5,20,14,0,17,4,5,5,8,3,13,6,3,16,8,7,4,3,5,10,10,9,7,0,0,6,3,13,8,6,17,15,12,5,6,2,9,6,6,29,1,2,12,12,1,10,0,1,12,2,6,11,0,6,4,0,8,18,3,6,12,8,11,3,7,2,14,1,15,12,9,16,11,7,6,22,3,8,17,9,14,3,11,11,12,2,5,11,2,7,1,21,11,17,10,1,16,10,11,4,19,8,7,4,7,11,3,22,4,8,16,9,21,2,14,0,0,0,23,7,5,11,6,14,4,3,18,9,8,0,14,2,5,8,19,8,19,13,2,1,1,5,2,0,20,15,4,2,18,11,12,21,8,21,5,20,5,9,1,10,3,4,2,6,7,12,9,13,5,10,9,14,1,0,0,9,6,4,16,8,13,8,9,19,6,3,10,5,15,6,3,15,14,3,23,0,22,7,4,6,9,7,4,4,2,10,3,7,4,2,16,12,12,19,1,15,6,13,14,2,7,14,10,8,18,2,12,13,12,0,4,17,0,3,10,22,6,1,6,8,11,5,4,4,7,10,7,7,6,1,7,13,5,11,10,10,12,8,7,4,5,14,7,0,2,20,8,11,10,8,16,0,14,4,0,1,7,6,0,2,8,12,0,4,0,5,11,8,16,0,10,10,11,0,5,3,9,19,1,15,19,4,16,2,7,0,0,4,3,6,15,11,3,11,3,13,1,9,13,0,19,4,38,12,2,7,1,0,7,15,0,8,5,6,7,7,4,3,6,8,15,1,0,14,7,2,11,17,15,9,3,14,13,5,1,5,0,4,7,5,9,4,0,7,2,5,4,3,7,5,8,0,1,0,4,8,4,4,14,4,14,5,2,0,11,5,13,23,7,0,1,9,2,15,1,2,8,13,3,4,0,7,3,9,3,14,3,0,7,10,5,12,16,1,17,0,5,2,10,11,8,13,1,14,0,16,6,10,14,26,1,12,3,11,0,3,7,2,1,0,5,0,4,3,2,2,12,3,2,3,0,1,5,2,3,2,1,7,4,0,12,0,0,0,0,0,7,6,4,5,6,3,0,0,5,8,2,5,3,6,1,6,8,3,0,0,0,1,12,2,5,9,1,7,2,1,0,5,3,10,7,1,9,6,0,1,6,0,8,4,8,11,6,1,2,6,4,8,4,6,7,13,4,2,11,2,2,8,2,4,13,0,3,2,0,7,10,10,7,2,4,23,2,6,3,0,22,9,8,6,12,9,1,0,10,4,2,17,0,6,0,15,4,6,0,14,0,9,3,4,11,11,5,23,12,19,10,14,2,1,8,9,2,3,4,6,8,19,9,4,5,12,9,2,14,7,15,3,18,2,1,0,10,12,8,0,9,0,12,6,4,9,15,2,19,2,11,20,11,10,6,11,12,9,3,15,1,15,14,1,15,3,2,19,10,9,1,9,0,7,6,15,4,10,8,2,8,3,13,5,3,18,11,9,11,21,8,1,20,5,20,5,14,15,3,8,0,10,7,3,11,17,7,4,7,4,12,4,7,8,2,19,11,4,4,13,0,9,5,7,14,1,21,13,9,6,2,2,7,0,4,8,3,16,12,5,4,3,11,7,2,8,11,7,0,11,7,16,6,11,9,0,7,0,4,8,4,3,14,11,6,18,1,14,5,20,0,1,12,4,0,5,6,1,4,9,8,19,2,14,7,5,4,6,8,9,5,34,2,16,8,7,14,5,0,2,8,0,19,0,3,11,9,10,11,1,3,21,12,13,9,13,13,3,6,7,14,1,3,7,8,5,7,9,18,7,1,3,2,4,15,1,9,6,12,10,6,14,8,18,3,17,9,6,4,14,13,2,18,7,9,3,8,10,4,6,6,14,2,7,1,0,2,6,5,3,12,5,13,7,0,14,0,6,6,11,3,22,17,1,13,6,5,1,15,9,11,4,6,13,4,9,6,1,4,5,20,14,8,9,1,9,3,14,0,2,6,14,0,3,12,3,8,4,2,10,13,11,3,6,6,9,11,4,10,11,6,2,0,4,0,4,0,11,2,5,5,7,9,4,8,7,3,8,10,3,6,18,2,1,4,12,0,4,15,2,9,2,5,0,19,0,8,15,5,15,2,6,2,12,5,11,16,1,8,0,7,7,7,2,7,2,0,13,0,2,5,8,6,13,16,2,18,3,16,15,13,11,3,9,5,18,0,10,10,1,1,1,4,9,9,2,0,8,2,10,3,5,3,0,9,7,3,12,2,5,16,22,2,9,7,13,10,10,4,8,7,9,7,7,22,11,3,3,9,5,5,8,0,1,2,12,6,3,9,9,12,9,2,5,0,1,15,3,3,8,8,17,8,0,14,5,15,1,3,4,10,11,11,0,2,19,5,8,5,3,20,10,6,5,10,8,5,11,8,2,5,6,6,7,4,6,5,11,4,6,5,10,6,6,13,17,6,20,20,6,16,3,12,8,9,9,7,2,8,7,5,16,4,0,5,3,9,9,3,1,2,6,8,3,7,3,2,10,9,5,11,8,11,8,7,4,6,5,11,8,12,25,5,5,5,7,6,3,5,8,7,6,14,8,13,7,2,11,0,11,6,7,5,3,3,7,3,6,15,0,6,13,6,14,11,6,3,6,12,10,8,4,19,5,18,6,3,14,4,4,5,8,7,4,6,8,4,5,15,3,3,3,6,9,2,10,8,0,0,3,18,2,6,1,18,7,16,18,3,12,4,16,1,25,8,6,15,8,13,2,16,12,8,10,0,9,2,13,1,14,2,12,7,10,14,0,14,7,10,2,9,9,13,10,2,8,3,16,8,6,16,2,3,2,8,0,11,13,0,12,2,0,5,4,2,7,5,2,15,2,6,2,2,0,15,7,4,11,1,8,0,5,10,10,5,5,10,13,7,0,0,2,0,9,16,0,0,7,4,2,5,3,5,15,1,9,11,6,9,0,3,3,4,4,4,11,4,4,3,1,2,3,1,5,10,5,10,1,5,4,7,1,0,6,3,9,8,2,10,3,3,0,0,3,8,3,0,2,8,4,1,2,1,0,10,0,2,5,3,3,0,1,7,1,6,4,4,2,7,0,6,5,3,2,0,2,0,4,3,8,3,3,2,4,1,1,0,5,2,6,10,2,2,8,0,2,11,1,4,4,2,1,3,5,3,1,10,1,4,0,0,3,8,5,2,6,3,7,9,3,8,5,6,13,15,7,0,9,5,20,11,19,0,12,14,10,5,1,16,12,7,4,7,13,6,12,5,14,1,6,10,4,6,8,22,3,0,0,4,3,3,4,7,3,13,4,2,3,4,0,17,2,13,3,14,21,2,11,10,2,15,6,3,16,6,2,7,6,19,15,6,12,2,3,4,0,2,2,6,18,7,7,1,5,9,10,0,21,0,7,10,10,8,10,9,14,6,7,21,1,12,6,9,7,19,10,17,1,3,9,5,0,5,0,6,18,6,13,0,12,13,1,0,5,5,4,5,1,14,3,8,17,2,2,3,5,12,8,6,18,6,10,8,1,15,4,1,3,5,4,9,0,5,7,1,10,1,3,7,0,10,8,6,3,3,5,17,13,4,11,0,15,10,6,15,2,2,5,7,1,0,2,14,6,6,14,8,6,8,3,5,10,0,0,0,4,14,7,4,2,5,9,9,5,10,1,1,9,7,7,6,2,16,8,4,15,6,18,0,7,9,14,12,2,9,5,6,2,8,6,4,8,1,7,6,7,3,6,1,9,2,5,7,3,9,4,10,5,2,0,10,5,9,13,9,14,16,0,22,6,1,14,10,8,1,15,2,4,0,3,10,9,5,0,8,4,2,1,0,11,0,1,11,6,2,4,3,2,6,3,8,21,1,14,11,6,8,10,2,1,15,3,13,0,1,10,0,2,4,11,0,12,10,2,3,9,7,0,0,6,15,2,14,20,0,8,5,14,11,10,12,5,14,0,13,9,15,7,13,14,4,15,2,12,1,9,12,0,1,2,7,2,17,1,14,9,7,10,3,11,2,8,1,12,5,13,5,2,9,8,12,9,3,14,4,5,3,11,7,14,10,4,9,1,1,1,5,2,11,15,4,6,1,10,1,7,8,12,5,1,9,2,4,0,0,6,14,6,12,9,10,8,4,0,6,1,4,13,3,0,2,1,1,8,1,3,10,2,11,14,6,3,6,18,10,6,6,5,4,14,16,16,16,8,21,3,12,10,16,5,5,9,9,18,3,6,17,0,16,0,10,8,10,1,3,0,9,7,5,12,0,5,9,6,21,9,3,11,5,6,12,1,10,14,0,20,6,9,2,4,0,0,2,19,11,5,7,6,7,14,13,10,7,6,15,2,4,3,17,2,7,0,6,5,5,15,12,4,10,11,0,7,6,11,11,7,21,4,0,9,1,8,9,11,17,5,1,7,4,0,3,22,1,13,6,17,4,4,2,13,1,0,1,17,11,4,15,0,5,6,5,16,9,9,7,9,2,0,5,13,5,0,15,0,9,5,1,1,3,13,3,2,0,10,7,2,10,8,3,5,12,13,3,0,3,9,0,3,2,15,8,7,18,7,11,5,3,4,4,18,12,0,3,11,4,6,12,5,4,1,9,8,6,4,3,0,1,1,5,12,6,12,11,0,9,6,13,4,5,9,13,8,7,15,3,16,5,8,14,8,0,0,6,12,1,9,1,8,11,8,10,5,5,10,8,6,15,9,11,6,10,10,5,7,11,10,0,13,8,11,13,3,16,10,17,0,8,9,17,7,8,9,0,4,1,9,7,2,3,6,8,1,3,7,2,11,6,2,7,16,1,0,6,0,4,11,3,4,13,4,2,4,2,15,9,9,7,10,4,0,3,3,7,5,3,4,10,2,3,2,9,0,4,4,3,2,2,2,0,12,2,5,2,1,11,11,9,6,15,3,14,5,3,4,6,4,7,2,2,5,1,6,2,2,4,0,5,3,2,3,2,5,2,0,12,3,7,2,2,1,14,2,9,9,8,3,0,7,0,14,4,6,2,2,5,2,9,9,1,2,3,4,6,0,3,10,4,1,4,6,0,4,1,9,0,14,9,0,0,1,4,8,11,4,9,3,7,1,2,5,9,3,1,0,3,4,0,3,5,12,2,2,2,2,3,5,3,5,2,5,0,2,1,5,3,3,0,12,2,6,3,16,14,14,6,1,14,0,15,4,1,0,7,6,18,4,12,6,5,10,4,11,1,1,6,16,7,13,7,7,18,9,5,3,5,20,2,13,0,1,1,15,0,13,1,5,8,7,2,4,1,17,2,1,1,15,5,1,6,5,18,3,11,8,7,4,13,5,6,3,3,7,14,3,13,13,21,3,6,4,4,12,13,4,2,17,9,4,0,2,11,0,9,6,0,12,5,7,0,2,7,12,1,13,3,12,0,5,2,2,6,15,1,8,3,11,3,12,5,19,15,2,12,0,0,0,6,5,2,1,13,17,4,1,4,8,8,0,14,3,4,5,8,1,6,2,3,12,0,11,0,4,16,11,2,3,5,5,8,1,16,13,15,10,1,12,1,5,5,0,0,6,3,0,6,5,5,2,2,9,2,1,15,0,2,1,0,1,14,3,4,5,10,11,2,12,4,1,6,3,3,4,2,18,3,4,14,1,2,5,9,4,5,2,1,4,25,14,1,2,0,14,4,15,7,2,18,6,1,6,18,10,7,5,9,3,23,4,1,27,4,8,6,0,6,19,1,10,13,0,1,1,3,19,16,6,19,13,4,3,4,0,17,11,20,5,19,5,2,4,14,7,16,1,12,26,1,11,4,5,14,23,1,5,20,6,2,3,9,11,19,13,17,15,0,12,1,8,11,13,20,20,21,21,2,0,22,9,23,26,17,22,0,3,5,15,17,19,13,10,19,1,2,2,1,15,13,41,7,22,33,10,2,5,9,16,30,14,24,28,24,8,1,3,10,23,28,11,22,18,0,2,14,5,28,14,10,15,10,12,17,2,2,23,17,35,25,18,15,1,2,20,33,18,41,42,17,15,9,26,16,31,5,34,25,37,15,8,11,14,17,30,5,17,31,1,4,9,10,17,3,20,16,31,26,6,24,0,1,17,37,34,42,43,33,20,19,13,6,60,38,27,35,10,30,1,7,12,37,18,32,31,9,18,12,28,2,25,8,1,21,4,31,22,12,20,19,26,22,5,16,18,19,32,3,14,10,12,23,18,0,16,9,18,19,4,12,7,21,11,13,5,5,14,17,10,5,9,2,17,26,5,7,5,1,22,6,0,12,13,22,17,7,11,4,21,30,2,9,1,12,31,13,1,8,3,17,4,12,3,6,8,14,4,2,6,3,24,1,3,5,5,23,28,4,3,7,15,26,20,5,2,1,21,17,8,8,2,18,26,6,11,6,13,26,16,7,5,1,16,13,4,10,5,14,7,13,19,1,8,25,8,8,15,5,28,21,11,3,3,20,35,8,21,3,5,28,13,12,13,7,15,16,5,12,10,5,12,10,9,16,6,6,16,15,9,3,15,8,6,21,16,17,20,9,13,9,5,15,12,9,26,0,4,16,8,14,13,5,12,6,15,19,4,15,0,5,12,12,4,0,7,6,11,2,0,4,11,31,6,3,1,14,27,16,5,9,2,24,30,7,5,0,12,21,22,2,3,8,26,12,6,10,1,15,15,7,2,6,8,19,12,7,10,7,18,14,4,4,1,20,17,10,1,7,13,22,17,4,3,6,11,23,6,3,1,14,16,3,6,2,3,13,10,3,8,6,10,12,3,8,0,6,10,7,2,2,7,5,9,3,10,1,13,10,1,7,8,6,10,6,4,5,4,10,4,5,6,2,2,3,5,3,4,2,3,2,2,4,3,4,1,2,3,7,1,0,5,4,6,0,2,2,5,8,1,2,1,3,7,5,2,1,0,4,6,1,0,2,2,3,3,0,0,1,2,3,0,0,0,2,3,0,0,0,1,3,1,0,1,1,3,2,0,0,0,2,3,0,0,0,1,2,1,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,3,6,2,0 ],
        
        phase: [    
                    3.689,
                    14.559,      
                    25.971,     // 2 wechsel 
                    29.091,     // 3 schneller
                    36.368,
                    43.692,
                    50.962,
                    58.182,     // 4 dumpfer
                    62.758,     // 5 zurück
                    72.758,
                    80.027,
                    86
                ]
    },
    
        2: {		// FEUER DAVE
        srcPath: 'audio/fire/f_02',
        startTime: 0,   // sec
        speed: 9.5,

        delayBridge: [ 37, 68 ],

         animationSets:{
            delayCometFly: 2000,
            zoomMaxScale: 1.7,
            zoomDuration: 3500,
            lightWfading: 1,
            lightWmax: 2.5,
            lightYfading: 0.9,
            lightYmax: 10,
            particleMaxHeight: 220,
            particleUp: 12,
            countPerZoom: 5
        },
        
        delays: {
            fountain: [ 27.428, 27.857, 28.285, 28.714, 29.142, 29.571, 30, 30.428, 30.857, 31.285, 31.714, 32.142, 32.571, 33, 33.428, 33.857, 34.285, 34.714, 35.142, 35.571, 36, 36.428, 36.857, 37.285, 37.714, 38.142, 38.571, 39, 39.428, 39.857, 39.285, 39.714, 40.142, 40.571, 42, 42.428, 42.857, 43.285, 43.714, 44.142, 44.571, 45, 45.428, 45.857, 46.285, 46.714, 47.142, 47.571, 48, 48.428, 48.857, 49.285, 49.714, 50.142, 50.571, 51, 51.428, 51.857, 52.285, 52.714, 53.142, 53.571, 54, 54.428,
                       /* 62.571, 63.428, 64.285, 65.142, 66, 66.857, */67.714, 68.571, 69.428, 70.285, 71.142, 72, 72.857, 73.714, 74.571, 75.428, 76.285, 77.142, 78, 78.857, 79.714, 80.571, 81.428, 82.285 ],
            comet: [ 30.214, 33.642, 37.071, 40.5, 43.928, 47.357, 50.785, 54.214,  76.93, 80.664, /*57.857, 61.279, 64.714, 68.136, 71.571, 74.993, 78.428, 81.85, 82.285 */ ],
            zoom: [ 0.857, 1.714, 2.571, 3.428, 4.285, 5.142, 6, 6.857, 7.714, 8.571, 9.428, 10.285, 11.142, 12, 12.857, 13.714, 14.571, 15.428, 16.285, 17.142, 18, 18.857, 19.714, 20.571, 21.428, 22.285, 23.142, 24, 24.857, 25.714, 26.571,  
                    27.428, 27.857, 28.285, 28.714, 29.142, 29.571, 30, 30.428, 30.857, 31.285, 31.714, 32.142, 32.571, 33, 33.428, 33.857, 34.285, 34.714, 35.142, 35.571, 36, 36.428, 36.857, 37.285, 37.714, 38.142, 38.571, 39, 39.428, 39.857, 40.285, 40.714, 41.142, 41.571, 42, 42.428, 42.857, 43.285, 43.714, 44.142, 44.571, 45, 45.428, 45.857, 46.285, 46.714, 47.142, 47.571, 48, 48.428, 48.857, 49.285, 49.714, 50.142, 50.571, 51, 51.428, 51.857, 52.285, 52.714, 53.142, 53.571, 54, 54.428,
                    54.857, 55.714, 56.571, 57.428, 58.285, 59.142, 60, 60.857, 61.714, 62.571, 63.428, 64.285, 65.142, 66, 66.857, 67.714, 68.571, 69.428, 70.285, 71.142, 72, 72.857, 73.714, 74.571, 75.428, 76.285, 77.142, 78, 78.857, 79.714, 80.571, 81.428, 82.285 ]

        },
        
        // Blink
        f_tomsVolume: [ 0,0,0,24,247,27,26,126,50,30,341,79,44,236,254,66,263,91,299,176,107,215,101,16,287,67,19,273,106,237,335,176,297,225,186,265,187,75,182,182,103,243,255,192,162,306,152,243,179,154,163,161,125,205,256,75,211,311,209,422,232,150,176,238,296,107,198,27,133,153,229,105,268,251,166,247,8,147,159,149,206,137,50,127,213,130,105,102,51,49,26,132,45,2,121,91,12,204,19,107,154,76,157,105,163,143,35,115,668,257,17,525,425,8,226,180,105,577,89,622,347,271,244,32,197,394,240,93,171,488,193,469,332,391,271,187,236,206,193,10,130,26,181,179,102,180,203,78,331,90,68,186,47,142,164,115,36,288,35,118,280,226,1,565,184,137,170,55,463,431,376,0,340,128,305,91,463,139,213,354,239,281,342,280,265,376,284,267,219,224,90,211,163,3,127,175,65,140,210,19,70,37,61,92,34,190,183,13,222,118,163,252,354,346,308,40,453,24,283,292,7,252,462,133,570,180,231,324,254,10,428,344,131,290,444,272,291,260,211,207,169,102,160,80,60,141,67,117,190,87,39,105,29,138,4,16,52,36,32,153,137,32,338,361,309,463,25,214,268,216,21,372,22,2,104,170,207,119,131,240,103,442,83,222,262,162,294,362,107,222,326,86,221,219,0,12,93,254,19,137,161,60,19,68,93,65,241,165,119,8,204,131,218,73,606,138,90,419,524,227,397,517,278,628,570,700,432,106,198,360,118,334,326,177,174,422,336,453,245,37,224,89,111,204,111,37,69,27,1,189,47,149,160,31,171,43,112,208,30,22,176,109,2,201,416,244,265,317,80,251,547,201,352,138,94,150,153,138,271,12,85,293,147,329,54,395,294,49,371,331,80,405,378,69,251,105,61,97,243,195,108,171,265,126,220,194,80,128,119,42,33,110,114,25,149,96,402,35,496,361,46,149,373,339,331,267,440,366,269,395,659,138,114,301,236,277,402,401,104,233,375,64,329,226,13,228,121,62,212,56,161,139,204,0,192,48,55,15,21,64,23,17,60,26,33,58,59,193,122,224,364,100,231,120,199,139,46,248,4,88,72,126,49,263,123,112,56,346,41,41,236,126,346,310,81,58,312,161,41,217,48,169,151,248,134,177,179,17,94,108,127,3,88,186,55,69,186,55,115,38,562,31,99,441,293,61,300,364,390,485,547,159,344,180,40,328,171,341,253,201,137,403,310,66,274,77,132,162,11,112,21,91,78,37,71,138,74,69,137,19,144,145,71,127,96,1,122,61,6,140,369,156,52,55,160,113,62,227,197,69,176,120,169,12,206,89,160,123,204,260,40,53,237,19,37,239,89,357,283,13,56,107,78,120,156,156,86,149,240,118,195,126,111,75,81,173,17,91,243,9,118,286,463,190,142,413,102,21,424,358,132,380,309,188,151,228,438,169,14,103,111,209,67,376,22,192,167,30,268,14,127,137,37,23,171,0,4,141,50,104,162,89,171,99,42,191,44,61,170,91,23,118,82,34,230,141,273,280,238,285,107,129,7,348,233,64,182,188,4,127,286,128,121,175,7,111,171,131,119,190,83,54,149,126,20,101,40,124,61,246,141,40,171,68,118,126,90,176,99,189,234,115,195,172,71,103,100,16,41,344,308,76,104,287,265,209,393,83,314,95,6,229,116,20,202,164,79,222,258,94,248,60,125,166,11,91,33,94,26,112,73,103,114,37,70,191,80,101,66,79,63,61,92,93,144,42,147,274,121,398,299,84,216,202,323,105,142,66,153,269,216,73,263,168,154,319,15,178,196,146,249,196,77,152,250,102,105,122,25,76,30,173,94,22,148,155,45,256,50,136,209,138,197,154,215,199,56,48,673,308,60,548,399,30,300,242,24,578,59,613,357,187,217,301,146,319,192,30,113,391,182,445,294,341,238,138,230,194,21,30,132,10,214,166,124,188,220,99,353,123,47,223,57,54,207,129,67,291,69,160,274,240,7,558,142,135,170,21,450,440,350,17,326,86,297,84,452,120,193,332,244,234,332,253,254,357,280,237,204,223,70,194,154,8,101,169,81,151,190,21,67,17,54,89,50,176,173,12,217,142,34,185,186,151,195,118,308,96,214,259,70,275,458,62,460,212,136,282,309,1,399,272,50,339,432,177,308,245,177,200,223,106,134,106,57,109,212,88,162,43,29,142,31,97,9,0,30,25,28,102,111,178,285,348,35,442,52,236,295,172,78,320,48,24,50,159,131,80,88,154,51,434,78,193,262,163,234,321,102,209,269,150,172,185,52,15,51,219,55,113,117,82,1,52,105,79,18,174,137,245,188,152,199,42,519,20,116,422,273,61,268,384,52,505,94,499,316,341,279,295,208,314,177,269,140,410,329,377,292,244,204,151,25,138,53,72,148,32,117,107,111,30,167,112,253,95,21,115,41,56,109,92,61,50,370,159,70,418,85,48,429,190,190,50,201,50,167,106,176,70,201,298,158,348,70,369,283,52,336,269,116,360,332,7,160,86,65,91,137,8,8,112,237,45,158,142,52,58,60,86,75,49,159,37,230,125,447,16,537,380,109,164,449,384,308,333,486,332,312,225,671,101,148,273,210,330,333,391,119,156,334,51,286,171,192,182,79,7,183,21,104,130,129,46,183,25,93,1,0,150,22,12,106,50,29,80,57,82,109,206,113,453,168,317,298,189,31,354,118,4,110,101,72,78,15,259,93,396,48,236,253,171,89,357,153,56,276,108,46,198,18,136,68,269,1,174,114,103,36,145,49,26,58,163,58,77,184,64,257,190,230,203,106,204,508,66,399,365,285,618,444,68,574,151,49,339,78,128,322,116,82,325,237,186,188,105,239,44,124,165,141,20,107,59,97,210,4,194,130,76,175,236,135,204,158,52,156,257,49,219,323,274,404,353,0,282,117,70,471,79,76,169,291,139,355,63,172,248,312,254,28,234,231,79,282,313,19,201,323,147,136,109,15,65,277,188,37,144,221,106,171,259,12,149,196,158,80,140,271,92,161,340,380,160,154,344,2,72,354,287,60,342,205,240,98,165,464,174,38,139,125,170,125,365,16,231,194,3,310,69,71,143,23,85,181,37,14,119,96,41,146,43,123,64,4,135,15,23,114,54,0,86,63,242,119,363,234,584,67,165,189,147,10,380,269,169,141,32,38,92,419,60,143,301,79,155,292,173,177,322,176,194,120,52,3,117,116,68,32,227,216,17,163,135,32,195,116,155,155,180,301,190,231,233,133,178,271,40,146,224,374,64,172,277,210,249,378,49,453,54,84,285,60,66,330,88,71,304,243,153,279,20,154,186,29,118,98,54,34,131,5,127,181,104,72,194,99,133,68,120,66,86,101,158,182,64,192,293,146,483,319,145,239,154,410,106,154,77,180,261,280,32,278,142,173,354,29,201,235,112,288,222,34,218,284,107,150,158,22,44,52,171,59,24,138,123,19,267,36,125,223,144,203,172,213,184,97,308,158,261,157,393,172,45,171,211,81,559,96,306,299,22,373,294,87,202,179,97,106,425,19,281,353,85,271,204,144,120,125,71,180,69,84,96,130,70,142,164,170,85,46,153,28,81,137,68,89,129,69,188,170,196,46,478,185,143,95,45,486,332,262,11,179,52,315,8,387,88,164,261,194,167,256,217,188,271,257,157,134,203,26,127,77,61,22,102,146,67,122,73,15,50,73,127,111,171,223,55,202,106,188,223,74,479,128,193,376,361,338,333,287,145,60,1,164,79,124,53,95,131,53,202,60,91,258,285,319,317,214,423,134,748,384,87,256,314,260,61,270,167,73,144,148,202,285,229,25,70,56,66,61,164,237,126,291,142,171,178,156,34,48,527,425,167,132,100,118,363,274,64,14,95,27,3,13,6,89,48,266,263,623,315,170,135,331,39,141,149,306,80,42,145,67,305,137,124,9,153,11,141,161,1,257,335,192,599,114,15,564,243,310,11,136,335,67,151,140,350,65,66,64,340,15,240,123,40,172,42,389,157,73,174,98,459,659,23,176,102,164,253,272,74,135,303,86,235,152,215,70,28,59,52,45,13,426,223,7,226,214,186,401,215,380,103,267,157,287,91,314,59,374,424,101,101,48,137,14,6,11,110,161,106,257,601,98,267,402,277,183,245,291,135,4,4,263,299,300,22,95,65,46,164,190,36,250,119,345,406,59,429,195,571,488,128,101,426,236,194,172,127,61,2,102,354,209,370,102,34,88,23,74,30,300,208,424,117,284,90,218,111,25,534,349,69,206,101,97,301,283,97,47,60,6,72,29,10,150,103,257,186,562,359,127,119,412,75,122,217,332,105,94,121,130,465,139,105,12,132,14,115,147,26,270,280,274,561,137,76,86,238,276,18,190,275,99,138,131,391,52,62,42,352,63,257,144,40,182,53,401,144,73,220,91,456,677,21,156,18,53,258,233,114,133,304,77,239,100,232,58,38,53,27,53,226,407,186,14,199,200,169,402,252,368,95,279,145,319,90,34,29,353,388,78,109,46,144,26,15,27,108,187,81,231,213,81,302,427,314,233,221,273,129,68,6,270,309,320,38,78,82,45,196,163,35,242,116,382,376,28,472,193,582,474,174,56,397,275,216,201,94,53,20,117,375,186,350,113,12,268,20,67,47,307,245,410,101,255,105,234,115,2,509,385,191,155,157,68,311,253,123,70,95,14,76,13,30,138,96,21,195,585,381,139,119,377,111,145,188,338,115,109,135,106,433,126,96,15,140,24,115,138,26,269,285,266,586,150,41,46,257,311,16,163,306,99,155,118,428,37,72,56,332,48,220,145,48,173,59,408,174,37,197,114,483,678,65,172,56,66,270,263,116,125,286,94,234,130,265,39,27,41,25,39,231,407,192,24,159,201,162,357,264,385,123,273,155,299,48,79,40,366,386,80,65,57,138,34,18,22,103,181,109,232,196,49,306,398,272,186,222,313,155,43,0,251,323,323,7,84,74,36,168,178,34,252,127,363,402,47,444,175,592,474,166,91,417,244,167,161,149,84,3,100,360,176,337,135,2,256,9,68,35,304,210,438,128,261,90,227,108,41,506,417,200,156,89,84,307,265,112,110,93,6,44,37,6,152,92,31,181,588,410,173,137,392,69,112,228,300,127,108,124,111,437,124,122,3,133,16,126,149,14,270,289,208,545,130,62,70,244,282,34,151,322,106,142,113,385,60,70,12,355,37,219,169,48,162,56,401,174,38,219,83,447,689,8,153,77,110,266,268,85,163,291,95,254,111,218,92,3,82,44,42,223,406,201,19,164,243,169,395,223,335,74,253,139,302,37,50,38,367,371,75,108,60,127,34,0,31,109,168,105,269,217,109,291,447,319,187,258,290,122,54,2,286,325,301,43,49,69,23,198,177,52,255,117,347,408,38,426,192,558,469,197,85,399,286,197,185,98,74,12,93,369,215,374,90,29,237,15,75,61,333,223,416,83,235,75,189,124,15,544,405,196,184,116,63,305,269,144,81,80,30,75,0,37,145,97,23,213,583,398,149,120,365,78,161,264,285,107,93,152,107,270,128,127,17,140,13,148,135,19,271,289,244,557,131,47,516,251,283,6,182,280,101,138,152,405,65,63,32,313,25,235,152,27,158,61,414,185,45,197,118,475,697,23,131,61,134,233,303,105,149,264,87,253,98,250,38,34,33,29,53,30,409,177,20,175,204,151,372,255,344,100,318,158,306,35,330,77,353,396,117,110,32,139,35,14,22,99,177,111,255,531,116,307,425,301,180,204,303,143,71,38,264,293,320,40,120,77,52,175,177,38,252,119,369,390,45,477,179,578,451,95,68,426,262,181,169,90,60,6,138,398,161,311,126,7,75,24,68,51,301,246,436,107,256,114,229,111,5,528,376,101,209,121,111,324,263,103,68,59,4,46,29,10,150,84,226,205,577,387,158,127,371,75,154,223,313,107,93,141,151,242,117,131,15,142,5,121,144,22,262,305,242,580,129,55,532,270,275,25,165,318,137,126,151,423,34,86,63,344,32,217,193,17,177,61,395,163,34,214,96,471,675,5,154,55,145,246,276,86,133,304,83,248,146,213,84,9,61,32,61,31,395,187,55,137,153,151,387,240,351,99,286,168,268,71,330,57,387,391,110,91,72,133,27,9,30,107,168,102,242,586,87,275,404,327,175,242,301,127,17,29,256,325,305,19,95,62,22,179,180,41,240,116,354,412,66,460,167,588,456,73,43,405,270,182,158,97,72,0,87,375,172,339,129,7,93,32,73,64,326,212,432,109,246,102,209,122,12,546,351,74,199,108,83,336,276,123,89,58,4,67,12,23,148,97,239,200,587,401,144,153,399,78,107,228,310,146,76,144,108,260,114,92,19,131,30,131,145,18,262,285,258,560,125,69,514,241,276,16,190,267,99,145,146,391,60,50,30,373,79,251,153,31,186,54,399,137,58,224,89,451,673,35,179,41,148,265,280,97,135,273,68,234,148,243,44,57,73,67,53,23,412,194,7,165,214,158,385,227,345,82,307,152,318,76,342,53,364,389,91,115,39,139,39,6,33,111,179,90,241,587,66,314,434,311,203,199,289,146,62,5,257,314,315,32,122,64,65,187,171,35,241,119,357,369,14,431,211,603,433,129,79,422,253,179,161,105,60,23,108,389,212,351,93,4,94,24,71,44,301,219,415,109,253,121,227,88,1,532,370,101,165,126,95,321,271,98,60,67,13,71,3,29,145,96,234,201,603,412,141,122,357,138,138,195,361,125,120,109,96,262,126,88,29,140,4,128,143,22,266,276,269,560,117,68,557,264,296,62,141,307,84,121,126,390,65,70,52,348,38,241,143,29,164,66,391,163,45,195,98,473,667,50,145,48,160,276,272,125,124,271,87,238,153,283,33,52,55,52,31,24,403,162,34,173,196,169,386,254,386,85,262,151,325,54,318,30,357,386,91,114,62,101,48,8,25,109,170,112,235,590,73,281,402,295,180,228,319,138,40,5,271,311,310,14,122,54,33,168,177,31,246,120,375,414,44,444,193,579,437,136,116,427,257,192,184,100,71,6,110,373,172,330,131,3,86,24,68,46,303,219,437,99,245,61,222,77,9,555,387,77,208,82,71,310,270,115,66,74,40,98,7,17,148,103,237,181,577,392,126,145,400,65,105,197,340,110,111,123,107,252,130,92,17,112,20,131,149,29,270,300,249,557,134,45,537,287,299,64,143,295,108,159,146,397,56,88,34,345,61,243,160,42,175,60,408,176,41,209,73,439,684,23,174,74,174,268,258,114,117,279,93,257,127,220,86,19,69,54,35,28,410,165,25,197,241,160,385,224,324,67,251,142,308,48,336,33,368,378,72,112,58,112,56,15,46,107,184,71,263,587,107,296,441,333,169,240,323,121,68,10,268,284,292,37,77,63,52,205,172,36,249,55,415,153,434,470,204,175,490,298,140,211,454,329,234,318,690,85,1,327,28,151,317,212,39,112,253,64,222,154,170,189,12,116,198,27,3,179,93,141,235,42,172,146,1,149,97,25,114,120,115,92,190,108,95,325,20,294,191,164,221,272,87,209,31,116,24,124,91,91,34,324,0,392,85,25,225,180,22,331,104,1,221,97,35,182,3,115,32,211,154,96,98,46,1,73,21,51,16,108,66,24,128,62,346,168,4,357,176,154,550,155,442,319,202,672,382,7,593,289,124,299,9,118,368,84,32,278,168,266,142,150,289,16,162,172,156,84,129,64,156,242,29,228,141,113,178,275,150,233,179,109,157,295,68,247,531,297,227,94,286,197,47,276,294,35,118,207,414,4,303,252,97,30,300,220,117,196,241,71,128,202,0,133,269,62,143,126,52,62,232,161,18,231,226,70,247,168,82,150,147,174,69,181,270,106,191,285,389,59,168,347,22,48,384,272,24,316,249,234,164,198,481,151,19,86,115,182,119,395,6,201,241,20,262,83,63,140,44,85,166,56,71,96,125,33,136,7,107,40,9,112,4,6,115,40,7,65,47,226,150,321,228,610,104,145,224,183,13,356,246,153,168,31,20,84,407,70,124,309,87,114,283,156,175,301,173,175,96,42,10,100,135,73,47,235,202,12,165,157,30,188,124,159,135,195,282,188,225,197,152,294,536,420,338,132,354,148,288,168,97,298,173,193,724,455,168,258,45,98,373,92,205,134,35,291,287,230,246,186,214,125,161,141,94,122,210,225,254,232,147,85,146,262,4,207,157,112,138,290,234,173,349,334,321,455,232,151,270,228,461,253,167,201,267,294,351,45,268,58,199,417,71,313,266,2,354,341,48,272,383,141,230,205,86,5,114,160,15,116,114,76,37,261,5,85,246,138,137,249,216,122,149,304,143,275,179,403,214,46,186,119,88,573,13,357,346,18,436,306,142,287,215,51,160,485,78,301,384,106,320,249,150,137,184,97,185,142,29,99,147,22,109,176,130,47,43,126,1,66,89,29,61,93,30,134,155,206,24,467,233,116,67,78,435,346,210,16,186,22,291,15,399,82,173,280,191,191,261,227,223,291,267,190,175,213,46,161,110,44,34,129,136,89,138,79,40,11,89,124,86,192,223,49,221,164,202,246,346,359,288,13,454,31,231,325,69,265,456,84,517,193,144,276,248,97,363,309,76,203,402,218,254,217,179,158,88,83,131,21,68,98,115,140,188,34,86,92,0,181,14,31,105,73,24,201,178,126,230,178,215,364,247,258,97,171,106,122,176,10,226,251,320,9,276,77,251,231,148,228,204,204,288,209,170,206,300,134,176,153,76,11,122,201,3,63,145,55,11,74,9,87,188,117,153,12,200,127,192,1,488,47,144,451,218,40,273,174,23,510,591,518,301,360,267,298,153,339,213,243,155,376,121,386,300,121,238,150,22,139,37,85,121,34,117,122,108,107,149,98,156,80,42,115,13,32,122,89,33,47,159,33,134,414,241,44,94,153,2,76,352,149,269,41,122,20,311,32,354,172,92,341,238,97,342,234,192,359,264,92,193,151,70,161,117,153,77,149,258,95,178,118,101,19,60,75,77,178,178,27,99,122,238,54,380,370,54,6,405,291,254,291,0,250,375,432,513,141,194,255,215,314,353,304,189,185,358,239,239,199,20,183,125,28,148,32,112,121,162,2,176,51,42,56,14,66,10,28,66,50,27,56,45,74,80,216,33,287,155,268,143,206,41,302,143,71,43,99,38,127,32,247,52,373,95,46,202,188,37,320,163,37,244,102,35,196,7,40,45,219,192,124,105,94,4,115,43,71,24,143,93,209,217,98,341,192,146,330,186,226,566,126,471,331,286,652,407,574,612,236,68,300,57,134,358,102,55,251,178,235,133,164,214,9,171,181,189,60,122,27,164,222,31,235,160,89,195,23,142,227,192,88,157,288,67,240,533,269,217,86,315,213,266,239,289,32,173,213,368,26,274,202,81,42,260,240,81,346,265,66,113,207,12,96,259,59,135,110,51,58,222,159,182,210,210,65,243,155,66,127,133,165,59,156,265,93,179,65,364,31,7,281,10,54,313,243,104,272,285,109,195,287,605,130,79,79,176,198,77,361,69,111,329,52,200,172,14,218,106,67,120,78,137,105,174,4,91,36,37,1,29,39,31,22,60,19,9,38,20,220,54,326,316,550,142,156,172,144,60,294,226,95,93,65,7,147,417,130,103,269,77,97,148,177,156,256,173,125,85,61,11,65,96,87,59,220,185,226,139,150,34,177,103,162,110,166,285,141,199,225,198,168,219,134,135,107,435,23,129,274,219,218,383,77,426,138,89,331,68,102,317,65,68,316,241,159,281,66,201,188,70,149,109,4,73,152,57,183,200,155,114,207,137,193,62,164,125,39,131,204,215,122,216,272,230,469,258,205,168,243,378,126,95,129,182,264,333,65,310,172,205,290,29,201,205,110,280,236,35,206,294,125,135,144,28,47,62,160,38,28,159,99,95,236,24,121,210,125,194,163,216,173,83,295,173,290,130,301,135,11,174,199,107,513,86,308,316,22,357,300,106,214,5,127,117,430,32,275,339,108,271,192,144,126,120,73,162,25,63,83,139,73,144,171,164,82,45,161,21,79,135,63,17,128,237,59,22,513,201,321,217,289,385,53,359,397,194,204,243,49,353,6,297,268,102,372,306,136,332,211,139,375,111,230,146,122,20,96,77,37,19,99,198,2,153,154,66,164,154,121,164,211,232,100,229,146,589,146,647,533,377,239,109,169,335,453,54,464,321,272,718,99,209,234,177,13,340,2,330,129,338,327,272,127,231,157,20,103,158,30,96,133,219,187,187,29,171,29,43,207,23,32,146,70,6,246,184,118,452,413,313,464,34,276,337,245,27,472,13,10,177,180,265,163,96,248,118,494,36,304,303,170,340,419,96,262,351,140,250,228,16,25,128,272,46,201,168,9,75,106,61,5,249,165,73,57,174,70,118,6,461,91,128,412,230,121,252,40,87,515,622,549,348,370,327,329,187,449,245,308,216,469,157,430,348,178,275,242,72,175,102,141,138,87,158,131,150,63,138,124,115,68,27,74,2,38,92,47,40,77,401,210,45,359,56,152,513,170,274,35,155,92,83,139,224,71,105,186,135,342,10,352,254,57,346,301,96,371,344,35,196,99,85,87,185,167,50,148,259,70,176,185,52,76,93,84,42,233,173,15,109,144,424,54,570,375,81,126,452,396,336,386,95,403,304,415,659,149,132,309,230,320,358,399,157,148,356,296,267,180,37,179,84,12,170,46,98,131,146,55,171,25,93,6,13,113,16,2,104,49,30,75,59,67,118,207,86,361,84,279,160,192,5,312,117,6,65,93,23,50,8,253,47,390,79,67,233,173,80,368,140,49,263,112,33,214,29,8,68,267,178,172,137,111,27,118,61,27,47,159,54,67,152,61,119,42,577,49,163,401,337,47,301,340,344,522,553,598,337,175,6,354,116,17,238,209,133,403,300,109,272,88,187,168,23,117,7,87,10,46,78,138,83,52,125,30,129,49,51,111,81,16,114,119,17,128,349,142,56,45,177,118,281,222,189,43,196,106,267,12,186,90,134,115,204,243,50,347,221,8,45,222,67,56,285,19,69,95,82,90,162,149,64,161,217,119,197,145,104,69,86,161,6,98,243,16,124,560,437,55,170,229,152,197,52,117,86,643,192,593,27,742,195,14,56,172,435,474,210,64,420,489,384,480,207,334,415,137,456,377,147,344,295,397,485,425,161,315,428,89,614,365,36,517,441,109,611,565,143,693,450,69,536,416,168,480,483,250,515,464,418,568,613,353,506,481,301,349,452,286,294,412,395,261,389,395,192,383,387,169,249,308,7,198,364,58,163,306,60,100,221,130,20,143,208,119,105,281,106,65,232,143,53,273,209,105,297,250,163,299,260,170,208,237,172,159,215,245,118,244,249,102,193,229,48,150,201,37,64,172,105,30,143,136,28,71,180,90,11,207,138,39,224,174,86,214,196,137,167,197,174,130,192,192,83,155,179,23,103,146,36,42,119,90,0,74,108,42,22,127,91,33,139,113,67,125,125,89,100,114,101,63,98,113,28,75,96,3,47,82,30,13,49,56,20,25,71,36,3,75,52,21,69,62,40,65,68,54,59,68,58,34,47,52,19,46,58,3,28,46,16,12,35,24,1,17,35,19,0,37,24,8,31,25,16,24,23,18,13,17,17,8,12,12,0,4,6,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        phase: [ 14.059, 27.438, 34.325, 48.039, 54.853, 61.762, 83.102 ]
    }
};

ELEMENTS.WaterMusic = {
    0: {			// WASSER PAUL
        srcPath: 'audio/water/w_00',
        startTime: 0,   // sec
        speed: 4.2,   //6

        delayBridge: [ 43, 64 ],
            
        animationSets:{//End
            blink : 100,
            minColor: 0.53,
            maxColor: 0.58,
            colorPerFrame: 50,
            
            dropsTime: 0.05,
            emitterRotSpeed: 0.05,
            
            emitter: [1000,1000,500],
            ePos:[0,0,2000,1000,  0,200,1700,1200,  -200,0,2500,1500,  200,0,2000,1500] 
            
        },
        
        delays: {//Start
            animateDrops:[10.6, 21, 41, 51, 51.2, 63, 63.2, /*72, 72.2, 72.4*/ ],
            emitter0: [ 11, 14, 16, 18, 20 ],
            emitter1: [ ],
            emitter2: [ ],
            
            blink: [11.6,12.1, 12.6, 13.3, 14, 14.8, 15.3, 15.6, 16, 17, 17.5, 18, 18.6, 19.3, 20.1, 20.6, 41.3, 41.8, 42.3, 42.6, 44, 44.5, 45, 45.3, 46.6, 47.1, 47.6, 48, 49, 49.6, 50, 50.3, 63.3, 63.6, 64, 65, 65.5, 66, 66.6, 67.3, 68.1, 68.6, 69, 69.3, 70.3, 70.8, 71.3, 72, 72.6, 73.5, 74, 74.3, 74.6, 75.6, 76.1, 76.6, 77.3, 78, 78.8, 79.3, 79.6, 80, 81, 81.5, 82, 82.6, 83.3 ],
            color: [9.5, 30.8, 41.6, 84.3],
            helix:[0,32, 84]
        },
        endDelays:{
            color: [10.6 , 32, 42.6, 85.3],
            animateDrops: [20.8,  32, /*72, 72.2, 72.4,*/ 84, 84.2, 84.6],
            helix: [9,41,98]
        },
        
        phase: [ 9, 21, 31, 41, 51, 63, 72, 84, 98 ]
    },
    
    1: {		// WASSER PIERRE
        srcPath: 'audio/water/w_01',
        startTime: 0,   // sec
        speed: 6.3,

        delayBridge: [ 39, 64 ],
         animationSets:{ //End
            blink : 70,
            minColor: 0.53,
            maxColor: 0.58,
            colorPerFrame: 180,
            
            dropsTime: 0.1,
            emitterRotSpeed: 0.5,
            
            emitter: [ 1000, 2000, 800 ],
            ePos:[ -200, 0, 1800, 1200,    0, 200, 2000, 1200,  -200, 0, 1500, 1200,    200, 0, 1200, 1200 ] 
            
        },
        
        delays: {//Start
            animateDrops:[ 0.1, 8, 31.8, 47.7, 55.7, 63.5, 71.5, 79.4, 95.3 ],
            
            emitter0: [ 56.027, 57.515, 59.003, 60.491, 61.979],
            emitter1: [8.692, 11.667, 13.884 ],
            emitter2: [ 16.625, 17.851, 19.601, 20.592, 21.818, 22.576, 47.111, 48.103, 49.095, 50.087,  51.079,  52.071,  53.063,  54.043,  55.035 ],  
            
            blink: [ //anfang
                     0, 0.758, 1.342, 1.749, 1.983, 2.334, 2.741, 2.975, 3.322, 3.733, 3.967, 4.314, 4.725, 4.958, 5.305, 5.716, 5.950, 6.297, 6.708, 6.942, 7.289, 7.7, 7.934,
                     8.281, 8.925, 9.272, 9.683, 9.917, 10.264, 10.675, 10.909, 11.256, 11.901, 12.248, 12.658, 12.892, 13.239, 13.65, 14.231, 14.642, 14.876, 15.227, 15.634, 
                     15.879, 16.219, 16.859, 17.21, 17.617, 18.202, 18.609, 18.842, 19.194, 19.834, 20.182, 20.826, 21.173, 21.584, 22.165, 22.809, 23.157, 23.568, 
                     23.801, 24.148, 24.559, 24.793, 25.140, 25.551, 25.785, 26.132, 26.543, 26.776, 27.123, 27.535, 27.768, 28.115, 28.526, 28.760, 29.107, 29.518, 29.751, 30.098, 30.510, 30.743, 31.091, 31.501,
                     57.019, 58.507, 59.995, 61.483, 62.971, 79.34, 79.690, 80.097, 80.330, 80.681, 81.088, 81.322, 81.673, 82.080, 82.314, 82.664, 83.072, 83.305, 83.653, 84.063, 84.297, 84.644, 85.055, 85.289, 85.636, 86.047, 86.281, 86.628, 87.039, 87.272, 87.620, 88.030, 88.264, 88.611, 89.022, 89.256, 89.603, 90.014, 90.248, 90.595, 91.006, 91.239, 91.586, 91.997, 92.231, 92.578, 92.989, 93.223, 93.574, 93.981, 94.215, 94.566, 94.973
            ],
                
            color: [ 31.737, 31.9, 63.471 ],
            helix:[]
        },

        endDelays:{
            color: [ 47.604],
            animateDrops: [ 47.6, 55.538, 71.4, 79.339, 95.257 ],
            helix: []
        },
        
        phase: [ 7.934, 15.868, 23.8, 31.736, 39.67, 47.604, 55.538, 63.471, 71.406, 79.339, 95.207 ]
    },
    
    2: {        // WASSER DAVE
        srcPath: 'audio/water/w_02',
        startTime: 0,   // sec
        speed: 6.3,

        delayBridge: [  45, 59 ],
        
        animationSets:{
           blink : 100,
            minColor: 0.53,
            maxColor: 0.58,
            colorPerFrame: 50,

            dropsTime: 0.08 ,
            emitterRotSpeed: 0.6,
            
            emitter: [1000,3200,600],
            //0x,1y,2z,3d:Hierarchy | 4x,5y,6z,7d:Helix | 8x,9y,10z,11d:Container E1 | 12x,13y,14z,15d: Container E0
            ePos:[0,-200,1800,1000,  -250,-200,2000,1200,  -200,0,1500,1400,  200,0,1200,1400] 

        },

        delays: {
            animateDrops:[0, 4, 4.2, 15.05, 21.01, 29.1, 37.05,44, 53, 62.2, 70.3, 77.6, 85.2 ],
            emitter0: [0, 1.615, 3.692, 57.115],
            emitter1: [53.307 ],
            emitter2: [5.423, 8.192, 9.115,10.038,11.884,12.692, 45, 45.923, 46.846, 48, 48.807, 49.846, 51.115],
            
            blink: [4.846, 5.307, 5.538, 6.230, 6.807, 7.384, 8.076, 8.538, 9.000, 9.230, 9.923, 10.500, 11.076, 11.769, 12.230, 12.807, 13.615, 47.423, 53.307, 54.346, 54.807, 55.384, 56.076, 56.538, 57 ],
            color: [7.703, 15.046, 22.390, 26.009, 29.759, 37.209, 81.428, 85.081 ],
            helix:[59.1, 66.1, 73.1, 81.1]
        },
        endDelays:{
            color: [10.906, 18.389, 25.009, 28.759, 33.112, 40.615, 84.081, 88.653],
            animateDrops: [4, 14.8, 15, 29, 52, 59, 66, 73, 81, 91 ],
            helix: [62.809, 70.173, 77.573, 84.945] 
        },
        
        phase: [ 4, 15, 21, 29, 37, 44, 52, 59, 66, 73, 81, 91 ]
    }
};


ELEMENTS.EarthMusic = {
    0: {			// ERDE PAUL
        srcPath: 'audio/earth/e_00',
        startTime: 0,   // sec
        speed: 7,//8

        delayBridge: [ 45, 62 ],
        
        animationSets:{
            raisePerFrame: 4,
            raiseMaxHeight: 20,

            tilePerFrame: 8,
            tileMaxHeight: 40,

            stackMaxScale: 5.7,        // Stack max Scale
            stackDuration: 48000,

            hillMaxHeight: 130,
            hillHeightPerFrame: 1.3
        },
        
        delays: {
            up: [ 0.5, 2, 3, 4.5, 6, 7, 9, 10, 11.5, 13 ] ,
            stack: [ 4, 8, 12, 14 ],  
            hill: [ 3, 19, 25 ],
            tile: [ /*10.6,*/ 20.3, 20.9, 21.1, 21.3, 22.6, 24, 25.3, 26.6, 28, 29.3, 30.6, 32, 33.3, 34.6, 35.9, 37.3, 38.6, 40, 41.3,/* 42.3, 42.5, 42.6, 45.3, 48, 50.6, 53.3, 56, 58.6, */61.3, 64, 65, 65.3, 66.6, 68, 69.3, 70.3, 70.5, 70.6, 72, 73.3, 74.6, 75.6, 76, 77.3, 78.3, 78.5, 78.6, 78.8, 80, 81.3, 82.6, 84, 85.3 ]

        },
        e_flaechenchordsVolume: [0,4,3,7,9,9,12,19,8,1,15,3,3,8,2,22,43,17,15,7,13,16,33,30,2,19,15,7,14,11,2,16,25,3,11,0,7,26,36,14,8,0,11,34,31,9,22,12,5,6,11,6,9,10,5,4,10,3,19,24,15,3,15,19,27,26,25,23,31,5,14,15,12,14,35,35,0,9,5,2,16,19,0,10,9,1,14,8,7,20,17,9,3,11,8,20,24,1,11,9,1,8,26,3,2,13,0,7,5,0,8,12,11,4,5,6,2,13,18,21,8,2,2,9,11,8,21,1,7,4,7,4,15,3,6,13,11,3,11,3,1,5,21,2,8,19,4,8,1,3,13,31,9,5,7,18,1,1,2,27,20,12,9,7,17,27,43,28,9,15,12,17,12,12,12,1,20,10,25,20,35,26,30,32,30,13,7,0,2,19,1,4,3,11,1,13,3,2,17,14,32,30,38,26,5,14,1,3,2,3,13,22,1,1,6,12,1,26,38,27,53,47,14,28,25,6,10,5,32,24,28,12,2,1,6,11,32,18,37,33,9,12,29,6,13,5,17,5,0,7,13,16,7,7,28,8,33,27,11,11,25,12,19,7,20,10,4,33,6,1,19,13,24,23,32,45,16,29,35,24,21,12,17,0,10,15,7,0,11,7,12,19,5,0,4,6,1,5,10,2,5,6,3,27,6,12,39,17,10,0,13,0,10,12,18,14,30,21,1,18,19,29,33,5,11,0,19,29,41,10,6,1,0,1,11,3,13,6,14,18,31,7,18,2,10,1,9,19,18,33,9,23,5,10,0,8,11,7,21,7,7,0,6,7,6,2,4,4,9,4,15,0,15,1,11,18,7,31,22,40,32,36,30,22,9,12,16,4,15,12,2,15,6,5,3,6,20,2,18,3,23,14,17,17,6,9,14,22,28,39,40,35,34,17,14,7,7,18,8,9,14,2,5,17,2,17,5,21,4,15,10,26,7,26,1,0,7,5,30,7,31,25,21,16,2,7,0,20,7,21,4,15,4,10,8,16,13,15,17,34,17,27,4,15,3,12,0,20,19,28,18,6,16,4,9,0,3,8,11,1,5,24,53,62,53,36,39,44,56,57,20,24,48,52,23,14,18,19,14,32,2,3,9,19,13,23,21,48,45,67,50,34,40,41,25,7,7,22,3,0,40,38,15,33,31,25,6,31,18,2,1,1,2,7,18,8,9,16,9,2,13,25,26,17,40,33,16,23,37,42,25,26,34,27,20,12,29,29,21,1,15,9,8,4,11,17,15,5,25,30,49,47,54,53,27,8,8,11,14,28,13,7,33,35,46,45,21,27,10,18,13,2,5,0,5,5,23,8,15,21,30,35,26,23,43,6,6,4,8,5,48,22,9,9,8,3,3,15,9,19,4,4,7,1,13,15,3,17,0,16,18,50,54,39,26,13,6,8,31,32,29,7,58,20,33,68,38,13,63,68,27,24,75,22,30,42,13,41,32,5,46,15,14,32,22,5,37,34,9,18,44,19,17,52,7,30,28,5,56,17,13,44,14,10,14,18,3,6,10,11,5,33,10,20,36,9,48,22,21,54,7,21,37,2,0,22,15,0,2,22,3,7,14,1,23,6,0,31,0,10,41,7,15,27,19,5,31,50,13,30,53,8,43,45,14,55,15,22,52,13,16,34,16,0,19,32,13,0,31,8,5,19,1,31,3,28,49,4,20,43,27,14,33,38,13,11,40,17,18,31,3,20,20,13,39,0,19,37,18,11,32,19,11,26,34,15,13,42,1,21,22,8,58,8,21,57,5,18,45,31,2,3,8,14,31,16,39,38,48,34,15,22,9,3,3,8,0,14,7,6,2,1,1,2,1,1,1,6,6,7,10,11,11,21,12,26,30,30,35,28,24,19,21,3,7,11,24,24,25,38,17,38,3,30,13,6,17,3,3,6,9,6,2,5,13,5,4,1,0,7,17,13,17,5,0,13,19,21,19,25,17,28,29,20,27,33,24,33,13,13,8,12,0,16,25,25,27,31,18,24,18,16,7,3,8,4,11,2,8,1,2,16,2,22,4,5,12,0,11,1,9,11,0,6,7,17,5,21,5,14,13,8,9,8,1,3,14,6,27,1,25,10,5,12,2,7,0,7,7,2,6,6,2,6,1,1,4,7,7,2,10,26,6,20,37,12,40,0,27,4,13,2,1,30,11,18,68,54,63,50,32,39,1,7,31,5,15,12,14,0,7,11,4,7,27,11,9,12,12,19,36,31,27,12,29,26,17,32,36,31,16,7,30,7,17,16,12,9,10,25,27,0,17,10,7,7,0,1,9,7,7,4,6,15,5,12,10,15,0,23,35,28,13,15,20,24,3,6,14,27,19,37,37,29,18,14,30,12,6,34,32,27,8,20,15,22,25,32,42,18,20,17,33,28,10,2,2,4,16,24,23,8,2,5,6,4,3,25,19,6,0,7,3,1,1,7,2,12,29,47,61,62,32,21,13,23,16,32,17,12,21,25,20,19,22,46,38,19,20,36,31,23,20,12,7,4,16,35,29,20,16,21,28,5,10,5,2,9,17,9,9,12,0,19,3,7,4,8,16,12,9,22,12,10,1,16,11,25,27,28,9,19,26,17,6,15,24,19,6,19,14,9,0,14,10,1,10,7,11,9,1,0,6,13,18,9,21,13,30,18,19,17,3,6,3,10,12,23,5,9,6,3,15,9,0,3,4,10,14,7,18,7,5,8,9,14,24,19,21,35,18,24,20,12,6,12,8,11,24,13,14,0,10,14,12,7,0,0,12,20,12,7,6,7,8,12,1,16,17,36,32,29,34,7,14,4,15,12,20,27,32,35,16,30,35,29,35,19,25,30,20,12,8,0,1,4,4,2,15,6,18,8,10,28,4,19,17,7,17,4,11,0,3,0,20,6,5,5,28,13,11,24,2,19,16,29,16,1,0,36,45,32,7,1,10,35,40,36,15,25,14,27,23,15,13,37,29,4,1,7,9,21,35,31,22,3,11,23,16,1,2,12,1,9,21,3,13,6,9,5,4,1,14,32,3,3,13,4,10,20,4,8,7,13,24,18,22,1,36,6,7,8,15,5,23,18,9,9,10,4,14,13,11,2,6,0,3,15,1,15,6,1,4,35,12,20,5,6,0,3,11,4,20,5,12,6,2,0,14,9,3,4,3,5,10,4,10,15,7,8,10,0,8,16,23,12,1,0,0,26,11,6,0,22,14,14,12,11,22,15,16,5,4,18,35,6,11,28,50,33,54,39,42,17,15,1,5,0,27,1,0,33,29,17,11,31,46,3,55,43,4,31,42,14,30,4,27,3,1,35,6,4,12,6,33,7,39,43,20,43,47,0,43,24,16,10,6,36,9,1,17,7,4,7,5,5,14,5,10,5,17,4,10,16,11,4,15,2,1,5,11,10,19,27,10,46,50,9,59,37,0,20,31,13,21,6,12,3,0,17,16,2,3,29,29,16,49,31,13,14,24,16,6,9,33,11,8,32,18,29,10,45,54,19,58,49,16,23,34,5,16,9,3,1,1,16,13,9,2,11,22,14,17,23,21,3,11,5,8,6,14,0,5,27,14,6,0,8,39,3,44,33,14,12,17,48,35,38,15,16,2,29,5,21,0,1,2,5,16,3,26,10,18,13,20,26,24,28,15,20,1,12,15,2,3,16,13,19,36,11,29,8,17,1,3,4,1,5,4,14,3,26,1,16,4,22,27,23,18,24,11,17,2,2,21,20,33,23,23,27,20,1,2,10,9,24,6,6,7,7,3,4,11,18,24,34,24,4,4,6,19,14,35,41,20,35,23,18,34,31,20,18,10,13,5,10,6,6,7,4,14,10,7,3,6,2,10,2,11,13,14,11,2,6,3,23,7,32,17,39,24,1,13,6,7,7,8,18,4,13,5,5,13,13,13,23,24,30,24,3,16,7,0,8,0,26,7,23,8,15,0,0,9,23,5,41,44,30,33,36,20,4,28,33,7,3,10,57,31,21,9,20,8,18,21,9,8,21,1,9,2,14,23,23,40,21,4,19,6,11,21,3,6,2,26,23,2,22,18,21,28,25,27,22,21,27,0,2,19,4,17,36,1,4,6,54,23,13,9,1,3,34,44,61,18,5,8,8,9,18,7,8,13,10,2,9,1,25,26,9,5,19,38,44,35,19,12,23,7,24,32,9,23,25,67,48,40,37,25,35,4,8,9,13,23,0,21,8,18,38,43,47,15,29,16,31,32,3,16,0,2,22,46,36,10,28,15,7,7,15,32,11,2,2,17,8,4,0,1,12,6,4,19,26,20,6,11,6,3,6,7,3,5,24,6,30,27,29,40,39,18,42,30,15,3,10,11,8,36,12,7,5,14,14,21,14,38,33,9,39,29,9,7,10,10,11,6,11,2,7,10,20,15,11,26,25,3,33,28,7,31,19,3,34,19,2,43,16,0,32,30,16,37,12,4,44,27,23,34,12,5,24,2,5,4,2,20,18,37,7,27,10,7,37,13,21,28,12,0,34,16,2,16,32,26,9,5,10,6,15,1,23,26,19,34,16,5,30,24,1,1,10,19,13,4,10,13,11,4,47,35,15,57,22,8,50,42,9,34,16,15,23,12,4,17,7,4,27,23,14,20,18,11,21,16,0,22,3,3,5,1,0,6,6,6,2,12,7,16,5,8,21,40,52,13,37,26,10,28,1,16,3,13,6,1,0,4,8,0,13,26,29,35,37,30,40,23,26,10,12,9,8,7,20,19,27,29,16,20,1,10,12,4,15,16,13,4,4,15,3,15,11,4,17,9,31,23,20,15,4,5,4,31,2,32,17,29,20,24,15,5,13,10,16,6,6,4,4,5,5,1,6,10,6,21,10,3,5,2,3,2,9,9,24,9,6,14,3,9,7,2,13,3,8,12,2,7,19,3,17,12,10,23,15,32,28,31,27,12,16,1,10,32,22,35,50,32,42,15,29,2,7,5,7,5,5,15,24,5,19,9,2,17,14,21,20,25,13,11,10,2,12,5,14,8,21,20,19,21,4,7,18,19,42,10,60,74,28,2,24,5,4,13,5,8,19,21,37,28,5,13,13,16,18,9,0,36,27,14,9,9,1,35,43,54,13,20,28,15,19,16,0,7,45,51,44,38,3,16,6,28,18,39,18,21,20,6,1,4,5,15,22,3,7,7,40,23,37,47,38,41,12,21,15,21,2,24,16,14,10,4,13,16,28,4,6,7,8,9,26,29,23,23,39,25,10,27,33,11,8,16,32,0,40,42,38,19,32,25,30,7,17,9,21,14,8,6,35,2,16,3,24,11,6,15,10,14,1,18,26,16,27,21,4,15,31,42,21,18,2,34,12,6,1,4,24,0,15,21,12,7,4,34,22,34,38,33,44,7,11,2,0,4,11,23,21,22,33,36,23,14,3,7,3,2,12,30,19,15,11,29,26,27,46,44,27,19,20,44,34,18,0,9,19,48,44,52,7,10,10,4,25,22,2,31,22,0,7,14,11,6,8,1,14,4,21,30,29,1,2,3,6,9,22,12,12,8,13,10,4,4,2,18,3,3,3,13,16,11,12,7,9,17,21,31,6,23,26,34,32,3,1,10,26,36,45,32,18,12,10,3,0,3,41,19,28,3,17,2,16,23,21,11,10,26,32,27,38,26,29,18,18,13,26,12,12,24,1,4,2,2,10,3,0,2,7,11,8,8,17,11,17,3,18,21,37,23,24,27,0,6,1,17,16,31,23,22,31,26,28,0,6,7,13,3,20,41,24,2,0,1,11,40,26,21,18,14,7,32,8,8,8,4,5,3,13,8,16,14,5,2,2,2,12,8,6,6,23,12,11,10,5,40,39,27,9,2,2,25,38,29,21,14,3,19,17,7,9,16,21,3,5,2,13,19,18,2,6,15,27,9,13,8,2,20,17,19,19,12,10,24,18,15,2,1,20,35,9,0,6,1,12,16,8,7,16,4,12,12,4,15,35,9,1,1,6,10,31,24,5,1,1,21,23,16,8,21,4,5,1,26,5,22,3,8,4,22,5,8,13,3,1,11,9,4,11,3,9,7,5,11,0,11,0,8,5,3,13,1,4,18,17,3,16,9,13,32,14,4,0,3,31,8,20,47,3,44,17,1,8,7,21,13,11,19,11,19,19,24,15,2,19,29,4,36,24,4,16,19,31,14,5,30,10,15,29,13,23,4,15,23,17,21,14,12,4,11,12,2,16,16,14,6,20,3,13,2,17,18,9,25,15,15,21,23,2,10,2,14,2,8,13,9,1,0,20,24,18,25,36,11,28,23,9,12,3,34,17,3,30,4,4,4,4,10,4,31,17,19,28,23,13,5,13,12,29,25,24,13,16,14,8,12,5,31,29,3,24,35,10,18,13,16,3,5,25,8,16,28,1,5,1,31,46,22,46,44,15,33,13,2,6,6,24,9,18,21,5,7,22,20,20,12,30,49,23,32,32,15,6,1,11,3,10,7,4,10,7,2,3,6,4,11,7,8,8,12,8,32,22,20,8,11,8,11,12,4,10,10,16,19,7,14,7,6,2,1,3,5,5,0,1,12,4,14,15,4,18,23,14,19,24,1,25,8,9,14,3,12,2,9,2,12,6,6,15,14,12,14,11,24,10,15,2,10,21,8,25,23,28,26,27,17,8,1,9,18,9,21,13,27,16,8,1,3,6,10,11,13,10,5,9,16,5,0,3,21,0,15,8,14,32,19,4,3,15,15,25,17,25,18,26,8,4,2,6,8,19,12,16,12,11,10,9,17,15,28,25,30,33,41,14,39,3,6,7,11,20,17,25,6,11,4,5,7,1,9,9,6,11,15,13,9,31,30,20,52,36,24,11,12,9,4,8,5,33,26,18,10,12,9,11,21,37,13,19,20,59,46,26,24,9,11,21,34,26,31,33,37,15,5,5,17,22,19,10,8,2,5,2,7,2,2,6,42,52,40,28,35,20,0,19,26,15,7,5,12,12,19,0,10,0,10,23,3,4,5,9,16,30,13,8,6,40,52,50,53,40,38,15,1,3,13,15,11,17,14,20,22,7,1,19,33,22,8,7,18,30,8,14,7,17,1,22,30,29,21,36,31,36,18,19,22,12,16,33,8,13,3,16,15,0,24,1,4,3,6,11,30,19,13,9,19,18,25,43,45,14,9,12,28,7,6,9,8,3,45,46,44,4,12,7,3,4,16,24,23,6,31,1,0,15,18,8,25,18,18,1,7,29,5,22,16,2,10,3,27,13,19,28,28,11,36,3,15,8,12,35,14,25,28,18,5,1,15,9,3,5,14,15,25,10,24,10,12,25,23,17,25,4,4,34,32,6,42,34,12,40,61,1,45,41,6,30,38,0,29,9,0,19,20,8,11,14,7,7,28,5,5,29,16,19,28,16,49,13,17,42,27,6,25,22,23,11,41,11,2,18,19,2,13,23,4,24,7,22,12,15,1,1,18,18,30,21,19,31,18,14,20,22,51,11,5,47,36,13,34,22,13,13,39,10,8,21,19,14,31,9,18,6,10,18,5,11,12,1,8,2,16,3,7,14,4,13,29,2,12,3,0,0,11,1,10,1,16,11,15,11,1,9,4,6,1,2,7,6,13,26,14,13,3,8,5,12,11,12,22,1,5,3,7,5,16,15,14,20,9,16,20,12,7,0,9,5,29,13,33,28,28,12,5,3,2,20,18,22,8,18,10,2,5,2,0,2,6,35,22,37,12,29,6,14,24,26,24,41,30,26,30,12,15,0,0,3,11,11,8,1,7,15,10,11,3,14,8,3,20,4,8,4,1,3,6,18,19,28,22,22,19,26,4,20,5,24,15,20,6,7,12,5,19,0,3,1,9,17,24,12,11,10,15,6,9,14,6,15,9,10,8,6,1,6,2,8,9,8,12,2,1,0,9,15,38,57,37,28,43,22,29,6,0,18,16,7,3,6,9,9,11,24,35,17,24,11,22,27,14,6,0,7,9,14,1,20,37,22,1,14,10,8,20,10,7,14,29,2,10,7,10,3,4,8,6,5,15,17,5,0,12,17,13,22,34,19,34,23,15,31,3,13,4,3,7,2,7,1,12,3,4,0,6,17,2,19,28,16,29,8,4,1,10,9,15,24,21,17,15,18,20,4,7,22,11,10,7,2,4,4,4,19,8,16,30,26,19,22,20,28,6,3,19,27,22,34,23,24,15,12,7,14,9,12,22,1,4,7,0,30,21,16,9,36,35,33,26,40,27,15,35,40,18,0,7,14,9,9,26,19,12,14,20,8,7,15,8,19,22,15,13,14,22,20,22,32,8,10,3,12,18,2,17,9,11,34,50,47,7,14,1,23,9,7,7,13,19,7,18,6,23,42,48,46,32,37,53,35,35,14,5,4,26,26,53,22,10,15,45,33,19,7,7,4,26,14,23,31,21,12,5,15,1,37,55,48,1,0,7,30,3,9,6,24,20,70,56,42,31,8,13,1,16,12,25,30,18,20,3,2,7,3,26,7,2,3,38,44,14,14,5,8,27,48,46,26,41,16,28,14,5,15,16,21,19,18,1,8,1,9,0,14,16,33,31,45,5,25,29,0,10,44,7,10,32,52,45,34,25,41,25,4,3,14,22,4,2,3,11,6,4,21,11,17,33,28,0,23,14,2,21,12,12,14,25,16,8,1,7,7,17,1,5,38,26,9,14,6,0,13,14,8,6,11,5,15,7,4,11,17,12,7,15,17,18,26,12,13,7,1,8,13,2,9,14,2,0,2,1,3,14,8,8,21,21,0,24,13,22,20,12,17,1,5,13,24,12,0,0,7,4,24,28,7,13,17,6,11,6,11,25,27,27,11,5,1,26,31,7,19,4,0,29,25,15,11,20,22,1,13,21,8,16,0,4,2,2,19,31,28,3,3,19,10,21,15,7,5,4,4,5,1,6,8,17,7,0,1,0,0,10,0,13,14,4,16,14,11,11,31,0,13,6,2,13,34,14,0,14,7,13,19,7,13,39,38,23,12,46,43,4,29,14,3,13,3,53,7,14,52,35,9,33,59,52,2,73,60,17,41,22,3,14,1,32,21,1,30,32,9,25,18,16,2,22,17,4,12,6,2,19,1,30,8,1,46,20,0,2,22,19,4,22,10,1,21,5,10,17,0,31,14,1,10,21,1,21,8,13,16,19,4,20,19,6,15,35,4,16,10,5,18,5,4,17,22,8,1,2,1,4,18,15,29,30,19,9,8,10,5,3,8,24,2,3,21,16,21,22,40,35,4,51,38,8,37,16,9,15,2,28,1,6,5,9,2,17,31,26,13,39,34,18,11,10,4,9,14,2,2,15,36,12,10,22,19,23,6,34,27,5,13,9,3,7,20,29,20,45,21,26,14,2,3,14,19,21,20,29,5,1,5,0,6,7,13,5,7,0,9,7,2,2,9,1,13,23,23,22,26,8,11,11,2,8,28,26,25,33,22,23,25,18,5,0,11,6,0,5,3,1,10,0,26,10,23,21,26,10,14,4,6,0,0,15,20,28,31,33,30,13,2,6,6,13,13,0,10,3,4,5,1,0,0,9,26,5,18,6,13,1,1,7,6,18,6,20,21,23,24,20,3,2,4,11,5,6,16,1,11,4,3,0,5,7,3,6,0,15,14,16,6,4,1,5,30,9,38,8,30,25,0,6,1,15,5,16,4,6,12,0,16,2,13,8,11,18,13,32,9,28,2,10,1,28,26,4,9,25,26,53,46,6,6,20,49,18,23,38,10,13,29,34,0,20,24,50,37,21,12,19,0,9,31,18,13,0,10,2,6,2,0,24,24,0,7,12,15,10,27,16,38,7,18,9,15,5,61,40,42,4,29,8,3,10,10,3,14,16,29,27,34,15,24,26,11,19,3,22,26,7,8,14,26,28,50,38,10,12,9,6,10,18,5,12,3,11,11,11,5,1,4,13,7,18,21,21,20,6,7,6,8,29,25,24,36,27,37,26,12,6,0,10,14,17,14,4,0,11,9,1,21,5,11,19,18,8,12,16,13,6,5,4,20,47,39,40,30,16,21,16,10,8,13,8,8,15,6,3,1,0,6,4,19,62,67,30,61,21,12,38,25,3,19,21,1,16,39,10,37,40,4,36,44,13,44,1,7,6,11,1,40,27,4,29,47,8,29,46,12,27,28,7,10,18,2,18,16,5,22,0,1,6,16,1,3,6,21,0,14,2,9,1,7,22,16,11,42,24,2,41,46,2,27,29,12,5,31,2,7,1,3,16,11,8,17,9,6,9,12,6,4,1,19,0,8,10,14,8,15,16,19,14,17,9,0,34,22,8,25,22,13,12,29,0,24,17,1,12,22,3,34,17,4,23,10,8,10,12,1,9,16,13,27,12,3,10,22,7,17,6,10,17,12,0,9,4,10,20,25,23,4,31,11,2,29,6,36,3,1,41,2,12,10,18,12,29,18,46,36,25,30,10,30,3,4,20,29,40,33,36,28,22,6,24,8,23,2,16,8,0,0,5,4,0,11,0,25,14,31,26,22,23,8,5,9,8,2,24,5,23,11,12,3,2,3,6,17,0,10,13,1,9,6,7,9,7,0,6,26,11,13,6,16,4,0,2,18,6,32,20,8,17,2,2,0,18,7,11,3,4,10,5,9,22,21,16,24,35,19,46,6,8,2,3,0,10,31,26,35,23,37,17,32,13,16,4,6,6,0,11,2,14,1,22,9,26,26,41,25,37,25,21,17,10,18,1,30,16,24,28,24,27,19,4,8,6,11,5,4,5,1,5,2,13,10,9,4,16,7,12,8,2,10,34,17,12,9,21,25,18,8,17,12,7,28,12,35,30,11,25,10,0,13,15,16,44,46,36,32,50,45,29,27,8,8,7,2,18,39,34,26,4,14,12,14,23,25,15,15,6,32,7,25,40,49,56,79,68,54,2,16,4,10,10,0,0,20,10,13,6,15,22,4,13,4,26,17,57,60,36,10,10,12,13,43,34,13,2,22,22,12,12,12,2,19,27,35,31,32,33,17,5,8,4,30,46,48,1,3,3,11,6,14,15,16,18,28,41,31,0,14,11,9,17,20,8,1,18,14,2,12,5,9,19,12,12,9,23,19,11,7,2,3,15,28,24,10,15,8,14,1,11,5,5,4,19,4,3,15,10,1,4,17,18,39,48,42,36,25,19,7,16,24,11,5,8,47,40,33,32,22,24,23,26,17,8,18,7,1,11,2,21,29,28,5,17,10,13,15,2,19,14,7,26,40,34,24,37,23,16,6,5,13,6,5,2,0,3,5,10,5,14,13,31,44,40,49,25,32,27,7,4,31,25,36,52,57,40,29,29,18,20,0,2,1,8,1,9,5,15,5,27,26,20,27,21,31,26,7,18,17,1,9,22,30,36,47,27,27,7,5,4,3,5,10,0,12,0,8,10,11,4,8,9,14,29,19,39,23,14,13,14,2,22,45,31,19,6,4,11,14,16,19,21,8,27,11,5,23,30,16,11,3,13,33,52,48,21,20,8,6,11,1,9,6,11,27,29,14,11,13,39,6,10,22,16,40,32,4,5,0,7,26,27,9,4,17,22,19,25,8,14,14,10,13,5,0,11,34,19,23,8,9,17,32,10,9,14,9,20,27,19,0,20,4,3,3,2,3,16,8,1,13,16,7,18,7,7,0,7,1,3,13,5,13,1,5,3,20,10,2,9,7,0,18,0,8,21,10,4,16,0,8,9,20,8,9,3,9,22,18,2,1,9,15,11,11,3,10,4,9,4,6,4,32,30,7,0,3,8,16,26,13,15,18,15,24,2,7,9,21,26,13,6,4,20,23,24,16,17,12,10,26,24,8,13,4,4,12,5,2,7,12,16,9,5,5,24,34,12,4,14,7,9,19,7,18,24,12,2,0,1,14,30,20,19,11,6,1,9,2,27,22,24,3,3,2,5,13,3,4,11,5,10,1,9,12,1,10,7,4,0,3,4,6,7,0,12,2,1,7,2,0,15,7,0,1,1,0,6,2,0,3,2,3,2,3,1,5,3,1,0,1,1,7,4,2,1,4,3,4,2,0,0,1,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        
        e_percussionVolume: [0,54,139,114,119,24,88,67,234,44,89,3,92,52,95,5,68,55,19,17,71,33,25,70,16,1,1,16,5,16,36,25,36,0,15,12,1,1,21,17,2,17,30,1,1,38,26,68,24,10,35,2,8,21,19,7,39,63,13,13,9,6,32,13,14,22,12,19,59,13,27,28,14,22,4,19,19,19,30,36,15,3,18,29,19,9,7,11,28,25,9,1,17,26,17,7,7,25,3,3,20,3,17,9,14,8,29,3,4,3,13,10,3,15,4,15,9,11,13,16,5,19,12,11,7,2,19,10,1,8,10,16,15,8,21,18,10,9,11,15,17,14,3,10,12,0,5,1,2,6,5,16,0,13,6,2,0,17,11,8,8,8,4,6,3,3,6,0,5,5,1,5,0,7,5,7,7,8,0,3,8,1,6,4,2,7,1,1,10,1,2,15,7,7,15,1,5,9,2,14,12,1,11,4,8,7,2,9,8,2,12,4,5,10,5,1,8,2,0,3,0,3,3,1,4,3,6,3,0,3,8,2,6,0,0,5,4,3,1,0,0,3,4,3,7,2,7,5,5,2,9,5,7,3,3,6,3,6,3,6,4,3,5,2,3,6,1,7,4,2,6,5,2,8,0,5,3,2,3,3,1,4,2,2,4,0,3,3,1,2,3,0,0,3,1,0,0,1,1,1,2,3,1,1,4,2,2,5,4,0,2,4,2,3,4,2,1,2,3,0,1,1,2,1,1,1,1,2,3,1,2,2,3,4,0,1,2,1,1,2,0,0,0,2,0,2,0,1,1,1,0,1,0,3,4,0,3,1,0,3,2,2,3,0,0,2,0,2,3,1,2,2,0,3,3,1,1,1,2,2,1,2,2,0,2,1,0,2,2,0,1,2,0,1,2,0,0,2,0,2,0,0,1,1,0,1,0,0,1,1,0,1,1,1,1,0,2,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,2,0,1,1,0,1,1,0,1,0,0,1,1,0,2,1,0,1,0,0,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,12,115,12,3,33,44,93,42,50,76,32,75,38,12,4,20,75,39,22,21,23,28,48,0,8,49,7,3,14,39,9,21,23,19,42,71,2,10,49,12,33,28,37,21,21,39,20,22,13,7,28,43,60,25,0,15,20,19,18,36,11,22,32,2,30,30,3,21,21,6,31,28,19,16,21,2,15,5,26,29,6,29,33,11,20,30,13,20,16,1,45,18,1,33,0,11,14,6,7,15,14,25,28,2,4,14,2,10,5,19,23,3,2,11,27,7,12,7,11,15,1,7,1,20,16,3,19,1,5,19,5,10,27,19,15,26,5,7,17,7,5,13,17,1,5,8,2,2,13,4,9,6,4,6,7,1,15,1,2,12,7,3,2,14,4,13,4,9,17,5,5,7,2,9,5,5,10,10,2,3,2,1,5,2,7,6,4,6,4,4,6,7,1,7,2,5,11,4,7,8,0,12,3,0,11,5,1,14,0,0,7,3,1,3,3,3,2,3,7,3,1,12,5,0,11,6,0,6,3,3,1,0,2,0,1,5,2,0,7,6,0,6,3,3,4,3,3,5,1,7,4,0,8,3,2,6,3,0,7,3,0,3,4,0,5,1,3,4,1,3,2,1,5,2,0,5,0,2,4,1,0,7,2,2,4,0,3,4,2,4,4,0,5,2,1,2,1,2,1,2,3,1,2,2,1,1,1,2,1,1,3,1,3,1,1,3,3,0,2,4,1,5,6,0,4,5,2,5,4,1,3,0,6,7,4,4,1,4,0,6,0,6,10,3,8,2,0,2,4,11,1,3,0,7,3,1,8,2,0,9,1,7,3,1,5,13,9,5,4,2,10,4,0,10,0,0,7,8,4,6,4,5,2,3,2,4,7,5,5,1,2,8,4,2,2,4,4,5,3,1,2,6,0,8,0,7,0,0,7,1,6,9,3,0,3,1,4,3,0,5,1,2,3,2,0,5,4,5,3,3,1,4,1,2,2,4,2,0,3,0,0,3,1,2,2,3,0,2,3,1,6,4,1,3,1,0,2,0,0,3,0,1,3,1,2,1,0,0,1,1,3,1,0,0,3,0,0,0,1,1,1,0,1,0,3,4,1,9,8,0,4,2,7,2,2,2,2,3,2,0,4,8,4,2,3,2,3,1,2,7,1,5,3,5,5,11,0,3,3,3,1,0,2,0,0,0,2,0,1,1,1,4,1,5,11,5,2,1,3,4,1,10,3,2,2,9,2,0,2,0,6,3,1,1,2,3,6,1,8,0,6,13,2,3,2,10,10,0,2,5,3,5,8,1,1,1,5,7,4,8,120,222,112,122,30,44,38,62,11,20,118,437,284,76,102,88,13,40,24,52,265,210,477,78,25,190,67,18,30,9,27,7,15,0,15,9,33,0,2,28,245,37,62,230,114,5,12,26,36,66,51,143,251,218,179,17,16,55,18,25,54,164,308,299,100,117,126,138,115,151,19,244,101,147,202,19,134,3,96,189,261,296,167,22,50,73,79,100,71,199,30,123,76,158,110,135,73,137,39,17,176,236,195,243,396,247,229,145,187,87,10,312,61,173,74,152,0,19,49,95,12,13,196,140,114,127,41,47,15,181,138,47,47,73,45,45,261,59,49,89,59,85,1,125,117,79,47,29,149,67,44,78,44,79,51,57,48,122,4,46,10,39,94,42,127,71,66,19,68,111,74,126,0,119,56,59,94,18,131,20,74,47,74,132,4,96,28,98,69,37,135,15,127,68,65,108,5,75,22,69,62,21,109,7,79,68,60,111,7,93,53,69,43,22,92,0,59,48,99,193,64,27,61,19,59,33,63,15,57,39,58,123,30,82,75,40,78,24,65,17,13,55,4,72,44,85,76,24,82,27,62,48,8,82,0,44,58,30,81,1,77,49,27,87,33,85,23,28,62,29,81,12,68,72,23,85,32,52,61,2,64,6,42,47,25,52,21,69,55,14,50,34,51,20,2,62,1,34,60,6,46,148,128,75,13,36,10,46,19,8,56,25,23,24,2,32,18,70,0,10,13,15,5,30,29,25,20,13,10,5,13,6,33,45,10,24,38,0,12,36,6,15,11,36,5,20,16,7,32,6,13,26,6,11,10,19,17,9,31,31,97,76,3,14,107,21,105,33,96,26,27,29,95,2,84,21,4,39,66,133,281,224,2,43,62,29,72,52,120,82,61,60,113,67,72,12,99,46,49,145,31,13,109,93,31,33,66,23,39,10,32,24,47,12,15,4,28,20,10,292,236,226,255,194,320,12,39,55,169,131,22,104,215,243,86,5,137,92,35,114,30,13,82,78,52,18,50,3,104,51,32,29,41,96,36,111,143,28,27,117,40,19,2,3,3,45,26,11,27,36,27,17,2,12,5,32,121,46,12,66,71,48,0,15,18,34,35,7,21,6,3,31,6,28,16,42,12,30,44,20,24,15,26,0,7,4,19,4,20,2,11,10,21,7,29,4,7,14,21,8,8,29,13,12,10,48,17,2,16,12,17,3,4,11,1,4,7,9,9,6,1,3,5,30,12,1,8,2,1,4,2,1,3,4,5,0,7,0,0,3,0,3,0,6,3,2,9,1,0,1,4,11,32,4,68,52,43,6,2,33,13,5,1,0,1,6,7,6,2,12,1,12,8,2,1,3,8,3,6,14,2,1,2,4,1,1,5,3,7,3,9,3,3,7,11,7,1,5,3,61,97,63,7,54,27,3,15,17,19,8,16,17,5,2,2,12,30,12,9,16,19,3,6,13,6,19,2,5,1,4,18,11,11,11,8,18,3,2,9,38,23,12,14,8,13,1,14,5,1,15,12,3,2,2,0,5,10,0,10,6,6,6,10,12,5,4,1,7,14,29,20,12,7,1,2,1,0,4,32,31,178,26,132,101,22,311,206,161,172,123,171,142,12,134,166,5,117,103,21,179,84,102,61,50,206,10,71,16,124,36,97,96,113,79,139,128,36,94,6,73,512,345,103,82,142,97,98,164,83,138,104,50,281,200,263,41,105,29,80,41,140,75,132,70,229,37,8,33,104,131,30,66,33,50,70,83,56,71,151,24,193,116,152,62,96,50,4,114,6,111,70,7,25,26,38,25,148,19,50,50,24,101,39,76,83,34,115,23,120,18,37,55,100,127,68,130,58,118,85,65,85,45,113,34,113,85,38,68,0,103,47,94,104,77,97,24,67,46,67,93,5,130,1,52,83,43,98,51,103,84,44,69,25,95,9,45,71,55,97,28,128,69,3,5,28,75,36,11,26,26,45,21,31,127,16,67,14,56,61,21,101,42,57,39,81,93,28,88,67,55,80,6,71,30,33,57,11,78,24,48,90,12,78,40,71,35,22,63,10,63,46,23,99,10,82,58,52,55,20,65,28,38,65,27,60,25,20,52,5,75,30,52,36,7,61,5,33,36,56,147,69,40,24,109,93,8,28,22,39,48,25,24,36,37,38,27,0,24,16,21,54,6,22,11,22,2,13,29,4,32,38,20,36,10,17,32,1,5,13,8,31,6,29,15,3,10,19,8,13,0,21,5,11,1,22,15,3,33,24,19,32,11,2,17,0,14,8,13,13,21,19,26,154,132,63,194,44,101,18,24,123,283,378,126,46,9,105,205,66,53,64,98,21,126,47,33,13,42,18,244,134,156,22,6,21,30,210,10,48,145,43,32,49,73,148,32,0,66,47,24,43,757,263,241,364,200,112,183,182,47,47,137,193,64,20,251,29,34,163,20,27,29,62,17,35,2,13,13,30,6,49,87,6,76,42,24,72,36,121,2,146,151,64,113,33,4,39,5,68,26,16,23,48,1,33,26,67,12,20,3,50,17,34,19,15,1,31,0,35,33,1,14,1,9,15,9,38,40,23,18,3,6,2,12,6,2,2,9,7,1,8,20,22,14,18,4,11,16,13,18,11,3,11,4,3,18,28,11,23,9,8,7,3,0,21,1,4,18,35,132,147,64,4,16,26,10,26,0,3,17,8,0,24,15,0,8,1,10,5,6,2,13,9,10,14,2,5,0,5,11,2,1,13,12,4,4,3,5,3,28,9,11,11,4,1,2,0,10,7,7,13,4,8,8,8,5,0,8,13,13,4,12,0,0,9,2,3,3,1,6,13,7,1,3,9,2,2,0,27,49,160,179,19,34,12,6,16,2,20,15,17,32,26,15,9,34,22,23,27,6,24,13,28,23,16,5,5,17,9,45,25,3,22,1,15,20,18,10,42,34,157,17,120,79,504,459,80,96,98,16,192,184,1,18,73,77,16,8,9,82,3,276,298,349,195,292,68,191,178,6,63,0,120,74,529,466,83,129,116,270,431,592,50,24,26,84,72,215,7,137,56,30,159,44,35,19,76,43,25,59,14,60,66,7,10,98,10,57,32,41,3,9,80,3,16,14,19,21,36,64,67,16,8,83,21,70,3,13,19,20,25,1,13,26,1,10,3,8,15,47,17,49,14,13,22,3,4,9,17,17,26,36,8,27,10,0,14,27,18,46,19,13,11,46,12,37,62,7,6,4,1,33,12,22,5,18,28,23,23,2,14,40,22,54,36,19,32,37,3,25,15,21,2,28,7,8,15,8,14,74,9,3,6,91,47,20,12,4,18,9,11,35,24,19,3,12,2,3,9,3,0,2,15,29,9,17,16,14,7,12,21,15,5,2,15,8,12,1,6,100,316,148,290,148,56,64,55,142,15,208,91,69,130,44,70,42,13,26,66,2,18,5,38,25,21,12,45,61,22,11,22,35,38,2,4,1,21,1,7,29,17,31,10,1,1,30,0,7,3,20,17,8,0,24,10,22,9,4,10,15,7,4,51,13,36,11,12,5,17,15,22,6,20,16,8,19,5,8,2,87,1,2,4,4,9,15,1,14,14,17,6,2,29,6,7,19,5,10,0,29,15,4,4,6,19,1,12,0,6,8,17,12,10,12,6,0,0,13,13,67,24,2,38,30,30,5,15,9,13,10,0,2,8,7,1,18,2,4,7,10,14,0,6,8,10,12,14,19,5,1,1,15,13,20,20,21,28,17,4,41,303,123,112,143,4,24,172,125,113,32,83,52,13,68,164,67,46,84,8,73,23,73,23,15,13,90,1,6,14,46,6,14,11,44,8,23,26,41,21,93,26,37,34,14,38,36,17,0,0,17,1,2,1,2,18,22,12,16,2,26,32,7,44,7,19,10,2,16,2,23,33,0,8,12,10,13,1,6,2,49,21,13,1,2,9,13,26,2,1,6,22,15,4,6,9,4,6,0,8,6,6,7,11,5,3,10,19,7,9,3,9,4,11,0,6,4,3,10,5,1,7,59,49,16,52,47,21,13,36,10,2,0,14,14,0,4,4,24,6,0,3,7,4,13,5,4,8,1,0,3,21,7,0,19,10,0,8,28,23,299,236,494,9,62,10,94,19,172,4,127,62,25,111,84,65,5,97,35,47,8,46,2,14,47,24,4,13,72,6,19,27,11,42,52,18,13,25,25,10,23,51,18,49,9,5,16,4,0,24,17,23,14,11,18,18,10,7,25,11,32,9,31,53,2,9,32,31,21,4,18,6,10,9,16,0,7,4,3,1,10,18,35,13,4,48,6,4,0,10,14,10,1,19,4,0,1,8,2,4,20,10,32,26,7,35,0,5,4,6,17,8,15,12,36,3,12,3,11,5,88,18,12,13,79,21,36,32,47,13,0,13,4,11,6,5,0,12,2,0,4,3,2,6,27,1,4,17,37,19,46,10,1,10,15,2,5,16,20,1,99,318,169,309,165,19,48,86,91,21,181,86,64,84,17,62,53,14,45,70,6,49,15,12,61,54,9,31,133,12,12,17,10,20,50,40,2,23,40,22,20,42,8,21,5,9,29,30,33,9,24,34,3,35,6,33,13,6,14,18,50,12,11,53,23,12,14,7,39,16,2,1,27,13,1,12,3,3,24,26,24,22,8,41,18,26,38,4,7,13,3,38,17,32,1,30,26,21,4,8,1,22,3,1,36,16,19,25,4,4,20,32,12,19,7,0,17,33,3,80,94,12,19,14,16,1,6,8,2,9,6,0,5,16,1,15,3,4,24,10,0,1,9,12,6,170,614,39,35,11,130,88,42,120,30,133,67,124,47,55,15,32,11,127,163,20,65,154,93,110,55,125,54,10,91,110,32,96,52,24,82,19,67,9,21,44,95,23,20,2,9,63,33,2,15,11,33,17,27,18,55,16,69,3,10,33,45,16,37,26,6,41,12,4,24,25,28,29,15,11,1,0,13,54,5,27,41,0,18,1,5,11,5,16,6,15,1,1,7,11,25,15,10,8,3,8,10,1,5,6,25,19,18,0,12,12,8,4,4,13,35,12,6,12,3,10,5,1,11,1,7,7,2,6,10,0,1,2,4,0,0,12,64,55,21,62,54,10,6,9,2,32,9,14,2,19,4,22,2,20,14,2,21,4,18,5,10,0,17,3,16,13,3,3,24,10,7,10,14,6,302,255,491,13,12,21,84,3,175,6,173,30,66,90,71,35,33,116,35,22,42,11,19,44,13,56,31,4,42,87,3,56,40,53,58,4,39,29,10,31,5,7,1,48,34,1,4,10,13,30,0,9,13,17,24,17,8,3,8,12,1,12,4,4,28,21,1,17,4,6,10,1,21,15,1,1,10,17,7,10,27,2,6,6,31,7,1,13,6,19,7,6,13,1,1,7,9,7,1,9,1,9,4,13,10,12,4,5,5,15,0,7,5,3,0,0,7,3,0,2,66,8,9,4,53,45,24,1,25,2,8,6,20,15,10,1,0,16,5,14,9,1,3,15,8,17,0,22,13,12,17,13,1,19,9,4,10,3,7,30,125,305,159,318,158,38,74,27,106,66,175,48,77,63,23,58,96,30,12,98,22,10,10,43,72,17,60,9,59,29,18,3,18,21,39,15,16,7,43,8,0,12,7,11,27,36,2,2,0,18,33,25,2,15,8,18,1,25,18,12,1,12,53,13,2,36,1,1,5,24,12,3,1,6,9,14,3,11,0,7,56,12,30,42,2,16,20,3,32,7,21,5,8,17,18,0,16,3,1,16,25,7,3,9,37,42,12,22,2,2,9,7,1,33,19,16,2,7,5,10,51,21,8,45,24,36,14,17,1,1,13,14,6,9,25,5,12,2,23,2,12,6,24,15,21,5,12,14,12,1,34,12,27,8,9,17,2,25,16,1,71,120,242,142,94,210,273,176,144,145,124,147,121,11,155,61,46,10,67,8,31,250,11,203,154,243,32,140,184,105,166,178,87,177,179,52,113,164,16,53,100,465,258,111,2,113,112,6,226,6,129,137,36,292,148,227,74,108,2,21,36,48,119,74,94,200,43,102,61,114,132,69,67,58,84,42,74,44,84,129,47,169,161,186,26,50,40,69,126,12,43,99,28,62,40,29,7,101,17,89,81,21,84,53,90,66,43,65,21,98,93,115,96,115,102,55,124,61,114,54,41,82,48,101,23,49,102,56,89,0,126,36,69,77,70,100,39,108,62,76,98,22,122,8,55,77,50,89,42,100,76,38,80,25,96,47,22,73,39,104,13,145,74,3,12,24,88,6,15,58,31,65,65,71,113,25,64,49,58,47,17,81,22,50,51,9,89,28,93,55,63,66,2,74,24,41,64,23,92,23,44,90,10,66,33,58,49,1,55,17,51,46,31,77,8,30,53,31,44,0,60,21,40,53,21,49,29,62,45,2,53,35,57,30,0,64,2,30,40,39,134,69,36,22,99,90,3,23,31,27,62,1,16,29,0,34,24,48,25,21,27,27,28,17,16,28,21,0,23,3,25,22,9,36,7,0,28,2,25,21,14,34,5,18,0,14,12,19,15,20,5,27,4,21,7,4,10,7,22,17,17,169,106,84,240,45,85,11,38,20,147,50,8,31,27,51,3,27,24,37,101,114,164,302,111,40,33,16,151,25,79,48,107,1,168,17,92,16,57,15,89,52,9,2,54,64,15,0,75,31,11,12,18,32,68,20,31,48,17,3,43,90,364,281,219,202,190,126,113,148,48,77,231,2,101,35,255,81,60,131,119,62,60,34,0,24,24,4,51,53,21,98,130,7,96,60,26,50,75,73,25,186,104,47,103,39,4,38,18,30,34,21,50,25,7,58,24,48,13,3,29,53,11,28,33,17,28,32,4,2,29,5,14,3,21,2,7,5,0,16,16,6,6,2,4,11,8,15,1,0,20,19,10,14,20,23,12,21,32,10,12,10,1,18,4,4,16,11,4,14,3,17,9,8,2,18,0,4,9,36,124,131,34,7,20,38,14,0,8,2,3,3,31,2,20,8,6,36,33,39,14,18,14,25,4,1,1,12,4,9,13,15,11,12,13,2,14,6,9,18,42,29,9,8,8,5,4,11,7,0,12,7,10,4,2,2,13,3,1,1,8,1,8,5,1,4,1,4,0,0,0,2,2,2,2,2,0,0,0,15,41,91,124,1,6,5,11,2,17,7,18,3,38,24,19,6,9,10,50,15,1,5,7,14,0,4,5,5,2,14,16,3,2,5,4,8,11,2,9,5,38,9,9,5,10,11,0,9,1,3,7,5,4,6,9,5,12,11,3,4,1,1,1,8,4,9,0,0,2,4,34,12,1,1,4,7,2,1,0,0,135,149,157,172,94,157,43,253,155,39,193,66,66,91,82,107,80,130,188,196,185,108,50,39,212,48,56,40,134,90,159,68,3,174,3,164,21,143,18,49,55,176,270,320,159,245,87,83,101,148,113,54,183,284,159,138,47,99,27,62,59,64,85,142,229,72,87,23,54,46,5,60,20,13,5,136,68,119,89,7,60,98,29,149,34,62,3,71,27,9,55,76,89,8,93,15,71,20,65,86,10,50,9,114,82,77,71,17,85,20,63,102,49,98,9,61,59,80,97,28,132,10,96,51,109,157,33,106,35,118,117,63,115,59,110,66,82,120,36,90,21,109,35,56,132,29,84,38,101,110,39,71,39,93,31,12,83,3,93,52,32,28,59,3,75,7,10,0,81,29,46,58,73,97,24,79,64,38,58,7,88,3,22,35,46,83,10,82,62,34,83,27,57,17,18,68,35,61,32,66,55,28,79,42,44,88,0,72,15,33,67,54,68,7,82,56,38,66,28,48,64,27,76,2,78,117,43,79,10,53,28,31,24,1,16,8,12,49,3,30,20,152,163,46,20,8,43,15,25,51,45,10,136,35,21,62,37,80,27,54,29,27,38,7,47,25,8,34,9,7,8,11,14,4,22,33,3,41,25,12,14,2,52,1,6,15,14,17,6,8,4,0,18,28,2,1,6,16,9,3,26,14,18,16,1,23,6,30,13,1,0,0,53,26,182,6,24,71,36,73,49,195,78,147,33,22,114,173,48,234,57,152,74,80,59,43,45,4,12,114,16,209,112,323,229,87,95,129,178,21,106,54,38,40,3,41,19,23,91,26,214,450,388,43,147,181,111,85,258,6,55,5,223,204,188,336,9,46,19,6,53,74,9,63,9,89,53,55,14,38,23,49,91,20,154,126,90,28,101,71,8,28,0,55,15,28,6,2,31,3,1,54,64,67,2,21,36,50,92,12,32,15,3,20,24,24,39,24,32,1,42,14,55,10,38,6,45,18,24,0,1,5,11,13,7,4,19,4,10,15,3,4,13,47,1,11,21,8,8,8,3,15,16,17,3,2,7,5,8,10,16,14,3,1,24,16,2,1,12,35,45,127,149,85,27,9,9,18,0,17,19,0,26,3,1,13,4,24,1,2,16,5,3,5,10,0,1,13,5,33,9,18,37,14,8,22,9,2,3,3,29,13,10,8,1,0,8,2,4,2,4,4,4,2,1,4,0,8,0,7,10,6,6,0,6,7,1,3,5,4,9,8,6,3,3,0,5,3,0,66,136,154,111,73,76,2,29,58,4,16,28,8,17,16,12,8,5,16,19,32,21,21,18,4,0,9,5,21,16,28,29,52,13,21,24,1,1,18,21,10,15,61,129,238,334,332,65,118,181,61,58,116,83,16,43,67,35,31,19,19,61,129,19,141,130,506,489,71,91,142,67,150,36,266,370,349,98,81,152,53,170,367,761,135,394,252,60,47,267,10,107,57,1,69,32,4,40,65,26,53,24,5,25,41,34,59,76,47,134,48,7,49,45,25,38,59,4,4,81,0,6,1,7,40,4,27,11,25,3,14,32,7,49,0,30,34,23,72,24,6,5,32,21,6,26,37,1,19,30,38,14,31,15,5,31,30,14,18,3,17,5,2,12,40,10,3,5,13,47,6,4,20,16,33,4,18,11,21,30,18,1,14,27,15,18,13,4,27,4,25,5,1,3,9,2,24,0,5,18,0,7,5,3,16,13,11,6,17,7,13,6,8,16,6,7,6,6,22,6,11,15,12,6,17,15,18,16,2,0,3,5,20,10,0,10,3,12,8,19,4,2,6,13,2,6,0,13,4,4,2,3,7,6,15,10,6,7,7,8,5,11,3,7,9,5,10,5,0,10,2,1,7,5,1,9,1,3,7,2,10,10,0,10,3,1,5,0,5,12,5,3,9,0,11,4,2,5,4,0,4,2,2,3,2,8,2,3,8,4,4,6,7,2,4,7,2,4,5,4,2,0,4,5,1,5,8,1,1,3,3,3,3,4,3,1,5,5,4,5,4,0,7,5,1,5,7,0,4,6,0,4,5,1,2,4,1,3,3,3,4,1,4,1,2,4,2,0,3,0,0,3,2,1,4,2,2,2,2,6,4,2,4,1,1,4,3,0,4,2,3,1,2,3,1,3,3,0,2,2,1,0,0,1,1,1,2,2,2,3,1,2,3,0,2,3,0,3,2,0,3,0,3,3,0,2,2,0,4,2,0,3,1,0,3,2,0,2,1,0,2,1,1,2,0,1,0,1,1,1,1,1,1,1,1,2,0,2,1,1,2,1,0,3,0,2,1,0,2,2,0,2,2,0,2,2,0,2,1,0,2,1,0,2,0,1,1,1,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,1,2,0,0,1,0,1,1,0,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        
        
        e_bassVolume
        
        phase: [ 1, 6, 11, 20, 31, 42, 52, 64, 75, 85, 91 ]
    //PHASEN
    //0:hill, 1: stack, 2: stack, 3:ups,stack,tile 4:ups,tile, 5: ups, hills, tile, 6: ups, stack, 7:ups, hills, tiles, 8: ups, tiles, 9: stack, tiles, 10: hills
    },
    
    1: {        //  ERDE PIERRE
        srcPath: 'audio/earth/e_01',
        speed: 8.5,

        startTime: 0,   // sec

        delayBridge: [ 44, 66 ],
        
        animationSets:{
            raisePerFrame: 4.5,
            raiseMaxHeight: 20,

            tilePerFrame: 5,
            tileMaxHeight: 30,

            stackMaxScale: 4.4,        // Stack max Scale
            stackDuration: 30000,

            hillMaxHeight: 150,
            hillHeightPerFrame: 1.4
        },
        
        delays: {
            stack: [ 14.6, 14.65, 14.7, 14.75, 14.8, 17.9, 18, 18.1, 18.2, 18.4, 18.5, 18.6, 18.7, 18.8, 21.5, 21.6, 21.7, 21.8, 21.9, 22.8, 23.7, 24.6, 25.6, 27.3, /*58.6,*/ 59, 59.1, 59.2, 59.4, 59.5, 59.7, 59.8, 60.3, 60.4, 60.7, 60.8, 60.9, 61.7, 61.8, 61.9, 62.3, 62.4, 63.6, 64, 64.5, 64.9, 65.3, 65.8, 65.9, 66.6, 66.7, 67.8, 67.9, 68.4, 68.5, 68.9, 69, 69.4, 69.5, 69.6, 73, 73.1, 73.2, 73.5, 73.6, 73.7, 73.9, 74, 74.1, 74.4, 74.5, 74.8, 74.9,75, 75.3, 75.4, 75.5, 76.2, 76.3, 76.4, 76.5, 76.9, 77, 78.1, 78.2, 78.6, 78.7, 79, 79.1, 79.5, 79.6, 79.9, 80, 80.5, 80.6, 81.3, 81.4, 81.7, 81.8, 82.1, 82.2, 83, 83.1, 83.2, 83.5, 83.6, 84.1, 84.2, 85.9, 86, 86.1, 86.4, 86.5, 86.9, 87, 87.5,/* 88 */],
            hill: [0, 3.6,  7.3, 10.9, /*14.6, 18.3, 21.9, 25.6, 29.6, 32.9, 36.6, 40.3, */43.9, 47.6, 51.2, 54.9/*, 58.6, 62.2, 65.9, 69.6*/, 73.2, 76.9, 80.6, 84.2, 87.9, 90 ]
        },
        
        e_bassVolume: [ 0,136,458,257,277,256,130,95,66,7,314,178,120,205,37,18,43,127,84,271,104,153,84,88,122,158,81,29,37,12,28,129,8,63,157,91,163,137,154,259,18,54,17,33,52,160,43,146,280,52,26,94,152,228,208,114,7,108,49,99,89,132,270,303,68,225,211,131,77,155,3,106,227,58,86,93,205,218,161,289,272,148,82,52,81,80,252,113,235,185,104,73,59,8,284,165,133,18,11,24,211,125,55,268,72,147,64,135,117,138,88,37,85,18,98,97,10,92,142,145,137,119,173,54,16,8,26,5,135,178,70,159,268,77,41,85,146,207,52,2,8,168,94,125,87,172,245,312,72,198,203,165,97,5,39,242,226,29,73,92,196,202,143,254,277,46,67,6,188,239,284,110,215,259,129,9,29,20,268,77,6,8,10,5,176,159,82,311,148,141,152,113,159,66,73,138,157,40,95,50,54,115,152,106,100,151,26,0,90,54,12,229,193,213,218,129,36,109,270,74,155,147,163,183,56,72,161,97,105,153,95,244,156,50,239,103,235,98,215,88,37,161,234,258,199,151,207,169,278,31,175,66,85,219,218,65,121,162,197,138,164,222,69,2,194,176,160,139,264,224,116,48,127,197,123,162,219,189,32,179,161,177,165,315,266,180,30,95,188,154,34,244,165,34,144,166,157,184,300,261,178,4,46,257,104,198,274,122,33,73,128,139,144,263,290,219,17,201,201,249,168,116,186,88,6,52,123,155,260,277,207,137,72,260,203,192,152,220,177,81,29,97,150,243,306,128,119,160,220,218,227,197,265,175,87,41,102,103,285,208,165,27,142,221,183,203,174,230,189,147,2,50,126,193,286,216,8,90,142,90,152,184,247,223,168,23,121,242,290,342,240,58,8,60,8,113,193,259,292,118,44,96,186,318,345,308,130,55,20,74,25,102,212,202,190,39,75,135,234,313,307,118,92,34,137,24,86,238,264,185,3,78,128,212,260,296,141,68,25,137,16,199,299,44,152,1,251,187,281,68,239,38,296,130,369,287,44,247,153,317,215,255,71,200,170,274,245,226,32,307,88,310,1,303,159,303,60,250,63,290,123,274,0,69,223,164,304,240,279,129,198,208,86,278,205,34,115,63,293,42,303,124,272,9,295,95,284,209,274,169,157,210,187,282,267,241,144,146,250,240,293,162,315,245,18,340,80,314,104,291,17,294,122,288,24,256,89,269,77,261,303,312,211,180,94,238,240,271,153,224,48,271,208,169,311,58,254,76,302,141,279,10,272,109,134,41,288,11,291,160,199,62,254,214,311,140,231,15,82,320,215,297,240,249,67,303,167,292,62,240,160,371,122,294,267,312,146,312,23,271,199,283,94,281,20,339,306,235,280,36,268,99,189,199,269,45,232,125,305,130,358,188,304,115,238,44,285,228,319,137,227,37,275,207,257,302,10,217,109,291,183,267,58,247,124,305,227,356,195,340,94,239,31,280,129,286,32,248,82,293,308,120,226,155,320,212,109,87,154,224,171,173,164,248,7,51,169,201,148,305,238,182,1,109,151,80,130,152,184,152,104,145,162,157,308,285,201,30,29,126,60,115,4,227,112,32,82,144,163,303,308,282,87,11,98,57,102,194,268,143,7,80,152,146,256,310,260,56,5,260,114,239,154,231,129,56,39,113,134,217,247,240,74,113,105,229,191,160,249,201,106,13,42,108,187,236,260,44,31,172,148,194,183,265,240,184,30,42,82,135,293,173,169,47,138,122,199,231,295,265,179,66,31,45,239,204,281,81,32,128,97,157,189,242,232,194,100,21,145,177,299,266,66,9,79,8,75,126,214,231,225,114,64,196,260,312,296,100,44,11,90,13,104,206,237,155,48,67,137,248,326,305,129,105,25,146,43,69,185,229,264,134,31,100,133,234,310,174,141,83,254,191,31,216,234,287,78,52,31,44,139,214,145,162,121,270,116,57,169,306,240,96,41,20,0,115,206,154,154,76,166,186,217,185,69,188,84,55,29,147,136,200,98,102,3,51,53,57,60,1,208,35,148,255,111,80,11,148,45,100,70,1,164,137,178,151,148,278,298,27,141,54,76,81,242,84,255,241,81,25,11,233,255,140,224,100,123,181,214,120,176,2,189,180,146,98,126,106,68,98,101,107,78,21,159,130,147,122,273,89,139,15,14,3,37,61,51,131,88,108,169,42,17,160,135,186,55,10,17,112,71,76,102,158,10,69,84,241,104,91,101,7,40,239,21,30,178,142,104,138,258,261,289,9,51,46,43,162,261,134,243,296,61,7,170,247,253,95,3,93,82,144,142,129,251,313,159,161,121,191,149,113,61,141,231,70,28,21,72,255,140,109,241,133,0,101,84,16,238,68,123,174,121,183,76,17,145,171,131,27,42,32,29,123,73,35,109,159,120,172,257,29,22,211,163,118,73,21,131,102,227,115,153,63,321,240,116,35,111,2,93,187,250,138,233,285,73,47,15,214,102,245,154,207,359,282,335,230,40,0,96,6,69,140,269,256,68,66,115,143,111,304,18,83,39,40,50,89,90,269,229,100,10,69,130,239,292,298,135,80,2,30,94,208,298,244,145,10,70,102,212,264,90,146,61,186,98,231,226,297,241,129,9,23,21,138,205,159,265,12,146,135,97,100,270,224,198,56,5,33,92,169,301,56,137,57,36,129,179,241,258,253,123,69,108,15,171,175,206,58,37,28,92,179,182,285,260,152,47,92,151,269,279,127,75,39,35,53,153,228,233,234,125,92,3,76,303,124,131,75,24,119,25,41,151,219,213,128,49,110,158,249,322,170,114,51,165,105,22,152,190,225,24,53,48,94,246,302,187,113,98,234,133,14,130,289,266,174,22,32,48,167,227,180,162,118,254,263,94,189,208,298,144,72,29,77,16,110,131,126,133,281,253,5,55,249,232,177,136,89,163,80,29,103,133,173,277,83,96,170,234,267,206,179,80,162,52,71,117,115,154,274,240,74,126,185,261,261,237,153,132,256,237,265,218,155,139,29,26,106,307,90,257,54,310,144,292,263,367,264,152,152,213,247,292,181,179,185,255,231,300,279,58,287,32,298,155,298,35,269,65,283,156,277,1,217,157,217,89,267,240,310,180,200,53,263,224,288,93,147,18,56,310,152,293,7,270,86,298,227,269,40,258,80,224,46,242,273,251,137,233,19,284,180,309,80,88,274,113,316,186,281,6,239,135,289,223,246,101,186,87,279,9,305,222,323,113,239,9,297,155,284,302,135,58,142,292,239,284,74,205,176,299,221,231,134,172,77,283,21,300,161,292,66,258,72,291,117,295,6,278,111,230,332,247,261,101,153,196,279,256,228,156,123,248,391,103,348,147,309,37,268,45,304,91,301,11,277,105,438,292,303,277,90,195,172,274,234,244,98,187,195,265,245,301,98,286,15,290,69,304,110,273,22,297,92,165,269,269,233,144,106,222,278,262,203,199,88,283,313,115,218,184,44,76,131,183,245,303,139,92,48,163,10,82,223,307,190,49,6,74,104,199,296,171,147,64,126,95,263,116,274,253,80,19,55,75,182,266,166,130,73,33,144,227,298,292,224,102,11,17,1,134,187,121,19,148,43,96,177,238,241,236,139,61,19,61,27,283,103,177,22,110,55,92,179,238,258,179,121,51,85,172,160,227,142,71,145,45,68,180,250,278,204,152,80,33,98,284,199,161,62,182,68,34,175,222,236,158,135,16,85,171,302,178,133,86,242,138,51,102,154,213,150,19,1,18,153,233,152,160,110,270,206,124,79,131,268,48,99,15,54,83,197,157,189,170,290,244,143,23,248,240,228,95,55,87,52,150,119,168,150,279,221,107,199,149,306,199,117,50,136,56,52,105,108,152,285,282,60,12,192,237,197,177,147,236,188,110,28,44,103,238,129,99,35,146,197,178,192,176,254,219,153,6,33,82,131,214,132,47,118,186,183,216,187,260,200,98,27,8,330,113,89,278,57,10,86,160,222,203,133,246,40,43,60,58,98,265,296,96,213,226,138,75,66,293,95,128,34,91,55,185,196,147,256,302,131,88,87,45,126,100,120,210,196,118,63,57,20,310,168,137,208,47,15,88,130,90,300,138,123,73,66,149,145,68,48,41,12,63,111,27,69,131,100,143,137,165,245,10,38,15,14,25,187,49,130,294,44,46,120,152,203,227,131,15,99,58,112,58,132,242,302,67,231,178,133,73,100,23,135,214,32,48,76,203,210,148,266,286,142,73,50,60,78,247,126,203,255,93,65,60,5,288,166,108,25,19,14,179,114,21,250,146,148,92,72,137,131,88,73,92,11,71,107,2,73,175,139,148,100,168,52,2,9,51,35,86,155,34,146,275,61,3,122,167,198,99,18,9,145,86,95,19,123,226,250,120,273,277,48,8,14,21,175,262,11,142,118,197,160,110,272,277,56,14,36,24,194,236,99,197,224,133,49,88,0,280,46,341,266,215,229,54,69,13,28,71,177,142,141,145,239,7,188,259,273,211,185,91,40,69,31,148,151,132,0,157,1,155,229,292,232,186,103,31,104,11,102,109,85,203,181,53,78,198,223,177,156,144,77,137,57,219,128,233,94,196,121,2,127,204,182,181,165,145,194,59,96,205,4,134,153,178,56,115,168,133,193,203,146,71,27,208,207,162,135,288,198,86,65,126,78,143,146,5,191,12,215,185,172,130,261,244,159,49,92,21,139,53,101,150,5,126,145,141,175,297,270,211,8,72,48,118,208,109,152,67,47,94,151,175,323,304,241,36,201,89,231,173,137,203,91,15,107,132,171,267,268,215,118,97,223,223,198,135,193,129,59,53,97,112,195,265,138,121,132,135,175,191,195,247,224,151,21,27,89,242,159,192,50,45,12,107,195,241,277,306,255,94,21,78,93,284,252,53,7,62,58,174,207,266,246,208,77,50,194,282,314,253,35,30,88,28,123,163,222,220,120,157,246,10,289,84,268,166,284,211,244,116,281,197,169,205,324,167,205,50,274,244,302,114,287,27,276,237,96,271,25,251,112,319,173,291,60,240,171,157,249,325,217,305,157,250,35,273,205,278,99,271,19,310,140,416,280,55,240,153,291,198,264,83,225,164,267,267,242,307,340,83,282,4,299,185,282,82,290,31,318,99,258,8,320,209,158,275,260,269,124,200,199,285,277,223,34,103,35,336,28,275,122,298,1,274,112,290,87,278,187,165,200,198,98,252,222,137,152,223,257,300,185,230,298,31,348,77,289,203,306,12,288,134,288,43,237,106,404,103,276,290,304,235,298,92,263,255,288,146,234,54,259,336,148,311,36,270,70,227,159,289,18,260,117,117,41,272,248,303,157,195,65,252,42,290,168,195,49,87,333,190,292,56,250,44,286,135,288,234,266,51,393,55,317,257,303,195,170,120,244,217,293,145,310,25,324,337,198,280,9,266,97,286,212,281,41,208,159,113,194,67,49,226,266,278,217,141,65,169,88,37,90,124,298,146,104,12,146,190,239,165,183,115,207,128,10,71,124,179,264,194,65,83,134,222,178,199,161,240,176,110,117,222,192,293,205,130,82,141,214,170,205,187,230,42,27,153,199,182,319,246,151,45,72,173,116,137,137,170,158,72,140,163,176,288,274,205,1,43,139,63,134,38,259,134,42,87,126,164,299,294,239,26,0,77,54,78,143,247,146,14,52,140,181,282,280,278,65,11,223,83,247,152,250,166,31,74,86,147,246,267,251,77,141,72,208,212,173,235,172,116,21,58,89,154,243,279,13,36,171,142,185,170,246,223,173,55,41,107,139,277,139,148,24,147,106,187,210,281,272,212,76,23,76,239,165,265,81,12,120,62,157,207,270,247,229,92,59,105,106,328,301,95,35,14,67,13,129,199,243,273,174,31,145,215,277,294,134,104,48,182,68,30,158,228,185,14,9,98,197,296,313,169,71,47,141,33,68,199,207,337,177,232,251,74,25,14,258,246,148,243,222,43,82,34,155,222,310,116,183,157,137,123,110,39,283,63,24,33,73,37,230,115,103,276,146,183,21,34,115,69,14,49,79,79,127,133,40,50,148,146,179,83,155,6,21,73,85,69,113,264,50,104,244,112,91,12,155,42,106,42,9,150,101,176,189,195,265,293,11,125,30,67,66,239,53,254,271,80,26,8,262,258,148,230,4,68,79,148,128,273,258,141,167,150,108,141,85,34,47,131,25,3,27,12,275,140,92,257,137,184,37,0,25,82,12,90,131,93,161,118,26,8,175,155,176,84,1,47,129,80,66,122,158,228,35,91,249,87,109,92,1,66,208,44,31,147,154,182,152,151,292,277,14,49,17,20,160,253,103,273,302,21,62,48,215,227,89,43,17,82,142,89,97,241,270,127,202,243,125,29,38,101,48,201,39,30,12,96,184,130,59,287,141,184,11,98,74,222,73,92,145,112,111,126,36,32,154,144,179,292,216,159,122,95,218,181,239,201,266,198,119,20,184,245,317,267,178,8,112,189,139,160,177,223,197,13,88,222,194,311,262,224,30,58,103,41,147,162,231,121,85,103,147,141,280,310,257,82,20,61,15,76,125,249,238,82,41,97,178,304,329,299,108,13,34,38,106,59,266,246,58,32,127,134,237,304,281,109,16,35,22,110,230,290,206,95,10,75,118,174,229,284,127,66,182,95,238,192,257,235,161,30,15,62,97,194,277,155,59,7,129,194,213,265,270,233,92,19,74,90,169,283,47,163,53,50,178,232,284,279,222,90,9,21,5,259,217,223,36,65,15,84,168,226,242,212,124,56,2,150,164,306,165,60,25,73,14,101,209,239,244,152,105,110,80,268,360,145,121,55,189,65,40,156,244,276,178,1,21,80,237,327,170,175,109,248,146,111,70,128,218,18,84,19,50,167,264,185,155,117,251,209,108,74,251,263,168,41,0,17,134,226,162,131,128,245,194,14,214,236,118,322,69,224,28,272,137,276,28,262,97,374,336,274,282,74,217,175,265,244,238,89,155,183,267,246,332,155,302,47,275,67,312,139,295,15,285,120,299,36,310,291,134,199,198,268,296,241,130,104,248,268,276,248,130,336,40,266,106,315,98,256,48,278,181,288,242,375,269,143,167,233,270,268,195,164,86,263,214,305,283,52,285,27,323,125,291,72,266,46,307,155,296,43,222,161,216,84,284,251,315,186,205,48,284,215,283,100,137,223,85,305,192,301,5,251,115,325,189,272,54,272,82,257,88,291,255,268,117,251,16,272,173,294,77,62,225,143,301,197,278,24,243,129,278,217,249,81,189,69,287,4,325,210,298,120,260,5,305,143,309,21,251,55,161,282,255,292,65,225,149,276,244,267,66,184,32,298,38,280,168,294,103,232,34,284,218,304,85,253,177,200,330,184,265,46,202,160,278,244,240,95,182,182,376,92,349,195,291,41,278,66,281,97,261,17,285,130,93,223,314,310,243,45,10,86,4,74,171,251,236,94,69,140,171,273,290,289,95,54,1,78,16,100,212,193,233,30,64,116,227,321,331,161,84,10,109,4,123,260,258,199,16,61,141,212,254,307,146,86,6,110,12,113,264,281,180,11,34,98,124,210,250,124,115,45,110,96,242,281,248,211,67,6,34,35,127,227,141,133,82,17,168,202,262,270,256,145,67,14,8,126,190,120,21,140,54,93,213,269,299,268,146,69,112,191,48,282,115,220,7,67,21,117,230,240,224,133,102,34,86,177,173,212,150,33,127,34,55,159,228,252,163,140,92,38,107,284,189,129,82,221,110,4,142,205,240,161,142,55,80,175,311,208,162,93,238,145,23,113,153,232,157,10,14,25,180,249,180,164,115,255,232,140,53,100,259,86,170,37,82,33,125,126,148,147,293,318,284,82,172,150,206,142,95,191,87,29,92,155,186,315,316,217,123,120,269,204,183,108,171,57,65,126,135,165,278,245,216,346,217,115,102,64,10,276,158,111,201,114,163,83,75,78,238,71,98,57,75,137,157,78,33,145,164,65,81,49,60,110,94,162,157,158,234,5,64,199,148,57,84,10,111,257,59,1,107,172,227,220,138,260,33,41,42,55,58,210,304,93,223,218,150,64,56,256,104,109,58,63,62,185,226,143,259,322,156,99,91,91,101,121,99,208,182,83,75,40,1,280,158,146,209,44,17,64,165,44,237,106,165,114,75,116,165,74,45,47,12,33,126,15,61,150,147,141,129,154,223,21,50,47,25,19,128,41,110,277,64,11,77,170,222,204,108,1,111,66,125,89,178,258,288,59,247,220,133,70,99,16,98,218,69,97,75,212,200,156,274,300,137,72,49,93,88,266,65,159,218,94,37,22,24,269,154,93,11,12,49,168,141,42,253,115,142,147,132,126,114,21,45,73,3,64,101,0,98,120,80,113,141,182,229,16,25,101,4,99,166,60,152,263,79,37,107,167,223,174,44,87,94,290,242,330,173,93,56,162,87,19,178,272,252,103,6,69,109,197,259,135,133,94,211,106,37,280,258,267,97,55,42,38,150,269,179,129,111,249,101,88,176,282,291,152,40,32,13,90,172,147,160,105,216,32,194,258,288,255,130,56,14,45,34,137,114,117,24,106,24,118,205,229,259,182,112,66,113,20,105,113,71,184,154,64,43,160,228,257,199,157,118,154,58,210,110,224,113,221,101,15,154,232,261,191,169,217,193,45,110,223,175,108,238,126,61,79,182,209,153,142,212,83,21,237,199,151,121,266,210,113,51,143,204,140,135,186,157,49,172,139,160,145,304,273,180,16,86,155,121,48,280,165,2,137,148,193,191,309,286,202,12,94,276,92,212,286,153,38,78,106,158,165,278,273,280,81,147,154,252,167,253,207,156,60,37,51,127,198,285,292,26,18,196,154,192,263,229,204,126,0,22,99,167,262,113,117,91,178,163,193,253,254,220,157,9,84,104,301,182,220,272,199,121,139,223,20,276,186,185,77,265,320,149,343,108,290,26,298,131,297,203,246,93,306,186,440,272,363,241,180,112,246,258,276,148,288,41,284,240,398,302,34,294,70,322,168,281,10,244,97,163,210,210,230,334,166,209,34,261,219,287,146,257,36,296,105,158,264,15,256,100,290,183,276,31,220,135,294,251,331,116,316,165,232,46,255,199,303,116,251,41,309,139,376,304,322,245,119,290,236,251,27,191,200,295,248,201,67,344,72,319,20,313,156,292,68,270,74,277,108,260,6,91,207,156,83,247,278,120,202,214,260,287,189,9,109,71,270,47,294,172,299,13,287,120,313,70,247,192,168,203,163,299,277,241,285,138,243,257,280,184,201,268,20,348,85,341,129,276,14,254,86,291,62,281,28,374,96,261,308,275,223,133,176,182,46,267,247,141,139,152,324,80,268,95,256,7,289,80,290,210,304,36,114,12,272,237,269,201,191,86,243,219,303,150,298,21,60,237,76,1,31,3,80,167,163,178,135,289,220,7,218,191,311,171,108,58,102,15,117,149,174,126,245,199,99,79,254,312,243,133,71,115,2,74,91,142,143,280,90,81,158,227,276,201,134,66,160,62,28,78,123,57,144,116,41,147,192,229,176,189,123,185,128,13,51,135,196,246,197,4,86,129,233,185,197,160,241,140,114,132,225,191,312,212,34,70,143,219,182,192,179,230,36,17,156,204,172,321,246,52,44,89,171,92,134,146,176,162,75,142,170,158,285,276,94,6,38,140,61,142,34,263,139,52,94,124,145,269,310,128,79,6,75,60,88,147,247,139,17,59,138,181,295,308,141,93,16,248,129,266,165,248,153,33,77,100,150,239,264,116,87,127,81,211,206,174,243,192,143,1,48,67,121,246,157,0,83,118,97,186,198,269,268,246,107,45,40,28,214,74,188,45,50,17,151,223,276,302,259,118,37,44,164,131,223,106,3,94,49,145,194,265,234,209,59,31,23,242,136,115,200,32,9,143,141,155,87,146,251,55,40,57,27,93,6,78,131,249,116,73,41,166,246,112,10,14,148,39,169,110,153,254,319,37,167,138,191,129,108,41,208,225,79,27,144,262,259,168,245,241,47,81,19,160,218,315,120,202,148,202,137,70,34,293,67,46,15,66,36,233,184,112,284,146,24,38,21,95,84,1,48,88,57,113,135,23,39,150,144,146,90,151,5,21,80,90,90,122,186,8,107,255,99,92,144,137,36,129,33,18,183,96,173,99,137,262,298,19,134,135,72,72,233,63,253,262,90,22,18,233,274,162,222,7,57,86,126,107,217,342,174,196,162,120,125,94,43,45,124,36,4,19,26,277,152,93,269,140,171,29,16,19,114,47,107,138,81,161,102,14,23,173,122,136,98,21,1,135,79,211,94,144,179,64,125,269,30,4,33,6,27,154,64,19,153,103,129,69,158,267,269,65,0,24,20,127,199,89,267,86,46,41,20,237,260,85,40,324,267,322,120,113,175,78,48,83,133,142,258,278,96,57,199,267,211,165,111,191,144,3,52,79,110,295,138,90,58,166,211,169,175,156,232,176,48,6,83,90,186,243,156,20,107,180,163,193,212,268,222,86,3,122,222,313,303,187,12,102,172,131,196,175,234,217,92,61,192,192,321,283,204,2,41,128,50,107,136,216,142,14,90,156,157,278,272,232,53,10,60,24,97,128,221,222,40,55,111,141,261,331,272,67,28,33,50,82,56,263,233,32,16,102,169,260,276,295,113,58,28,2,83,226,306,202,56,41,71,122,196,239,251,119,93,161,91,224,187,251,241,105,13,11,97,144,226,252,125,71,2,133,167,203,275,248,142,79,27,60,78,174,289,8,143,79,33,154,227,275,302,216,133,59,27,17,192,185,270,88,15,55,36,120,224,269,222,167,161,81,27,96,294,143,101,14,127,65,38,158,205,166,180,130,39,0,248,293,159,109,52,196,80,33,176,212,178,150,123,243,171,272,28,263,110,280,184,267,46,208,144,123,131,306,244,296,130,251,2,286,180,292,70,260,34,86,99,234,287,43,247,159,290,204,243,96,203,190,381,101,302,140,317,105,272,9,291,146,303,45,261,98,374,336,246,301,282,234,177,256,254,230,97,158,189,268,237,382,146,312,59,281,50,322,112,309,5,300,117,293,29,301,271,123,197,196,263,274,223,122,131,250,242,288,244,135,320,40,280,90,323,76,303,57,278,179,278,239,372,263,127,156,225,266,295,222,181,85,277,229,293,301,44,291,33,287,133,311,70,264,48,317,152,272,19,223,157,208,110,259,258,316,182,201,55,281,220,286,79,133,236,84,284,187,297,19,251,105,321,194,273,50,271,87,225,52,275,249,278,128,224,40,272,213,314,129,83,303,121,326,144,273,13,278,60,267,196,290,0,258,18,241,11,274,243,300,177,194,58,272,195,300,96,211,11,110,269,217,274,36,227,144,306,208,259,120,184,150,144,49,133,166,166,213,200,281,256,182,28,45,107,276,168,187,20,68,160,140,204,212,268,232,161,25,7,130,191,326,241,26,56,103,52,131,161,219,37,130,97,103,245,317,304,230,72,8,63,12,59,162,233,238,101,47,86,175,282,295,315,123,16,20,79,30,120,228,218,203,35,95,149,252,318,289,130,69,3,92,18,127,271,288,188,4,87,122,196,271,280,129,84,39,141,14,115,262,287,201,45,36,66,122,193,281,162,107,75,123,98,256,301,254,231,85,39,48,46,159,227,169,116,70,48,137,207,286,289,259,110,51,32,23,114,168,111,32,136,34,99,219,279,277,246,115,47,10,52,66,271,75,221,25,93,11,135,206,220,262,171,95,60,89,174,206,264,129,36,144,84,29,147,233,247,197,202,129,20,24,280,194,179,100,228,179,58,93,181,216,184,188,11,123,107,251,170,174,153,277,199,130,37,132,167,125,59,76,67,132,236,174,159,106,274,190,137,54,141,195,99,73,26,59,10,9,10,4,0,10,6,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        e_drumsVolume: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,48,25,2,159,131,217,239,89,88,190,240,210,13,192,154,354,113,133,168,90,138,8,3,2,3,0,3,0,2,2,1,2,0,2,1,1,6,7,83,51,81,12,14,18,22,12,19,2,22,0,4,6,2,2,6,2,3,3,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,88,97,343,334,93,193,18,129,113,286,303,100,10,173,14,92,17,186,219,79,299,209,146,11,154,21,85,1,5,1,3,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,68,86,116,98,305,100,185,35,233,49,155,210,132,53,373,194,160,247,38,58,82,45,10,3,16,0,0,6,2,3,1,2,2,1,0,1,0,12,51,149,82,13,5,39,19,9,7,6,25,11,1,5,2,2,4,0,4,6,3,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,27,41,209,296,240,146,35,103,2,145,227,172,131,30,41,200,52,107,127,171,33,71,42,37,232,88,58,21,18,6,0,1,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,67,185,32,282,394,34,243,171,77,60,255,199,80,159,396,45,265,219,87,185,34,126,11,7,7,2,2,0,0,3,0,0,2,0,0,1,2,67,20,67,92,0,34,0,17,8,13,16,8,18,5,3,8,1,3,6,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,46,160,109,114,109,56,126,49,12,98,133,4,14,17,264,121,64,121,2,72,5,0,79,264,166,112,70,59,18,4,7,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,86,14,328,363,320,17,192,265,115,33,223,240,5,138,384,250,325,110,24,200,89,58,3,15,11,2,3,0,2,5,1,2,0,1,1,2,0,37,21,191,18,2,18,27,2,2,17,31,11,1,0,10,1,4,1,0,1,5,0,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,83,91,175,55,24,85,178,96,135,72,141,106,91,226,174,55,6,29,73,173,185,29,153,205,62,83,31,112,23,2,8,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,126,199,284,82,257,98,215,7,168,120,164,281,84,121,291,337,26,187,58,81,122,4,15,9,12,6,1,1,1,4,1,1,0,1,0,1,3,60,31,147,117,26,1,36,21,8,12,2,33,6,7,1,7,1,1,4,0,2,1,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,19,38,126,244,72,165,27,10,28,12,317,117,25,210,69,152,2,89,209,49,286,288,121,85,204,44,33,9,1,2,5,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,80,23,84,38,201,142,51,149,88,4,247,219,92,102,167,132,195,137,3,122,118,30,5,1,7,3,2,2,0,2,2,2,0,1,1,1,0,12,85,84,77,4,27,7,23,10,17,7,2,1,2,12,0,1,0,0,2,5,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,32,94,169,330,70,54,57,77,11,247,337,228,35,113,237,91,60,166,160,93,234,219,72,234,142,47,93,33,6,0,5,1,1,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,67,91,27,224,235,121,204,101,247,56,157,171,164,19,286,27,253,294,75,77,77,141,8,4,14,3,3,0,0,1,2,2,2,1,0,0,3,13,70,67,109,13,44,26,18,1,17,5,23,15,4,7,0,3,0,0,4,3,3,2,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,74,142,327,294,158,81,157,39,146,300,291,159,38,276,185,61,94,71,120,34,168,12,257,212,73,18,3,40,6,1,3,1,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,154,183,221,362,1,264,207,122,67,255,145,143,125,320,75,313,12,102,195,28,142,2,11,2,4,0,0,0,3,0,0,0,0,1,1,2,49,12,81,78,79,29,3,29,18,21,24,2,23,5,3,7,2,3,6,3,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,49,102,114,225,223,83,153,102,67,99,236,119,41,113,250,90,69,71,75,284,37,126,166,243,126,136,32,80,60,6,6,1,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,81,147,296,408,322,36,220,88,168,42,104,238,49,111,432,239,22,164,37,9,94,48,6,9,9,1,1,2,2,4,0,2,1,0,2,1,1,46,3,195,32,7,11,41,7,3,7,20,13,3,3,8,2,4,2,1,2,5,4,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,6,48,223,109,82,46,43,36,94,65,4,19,44,153,146,181,26,10,201,197,90,139,113,168,150,95,4,48,11,4,0,0,1,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,2,217,206,292,336,46,140,69,189,44,207,274,29,151,358,6,122,208,34,134,96,72,14,8,2,2,0,3,0,4,1,0,1,0,0,0,2,74,70,23,116,16,37,8,21,1,18,3,13,11,5,1,7,2,4,5,2,3,2,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,2,97,89,122,97,4,49,25,53,53,225,189,9,132,221,155,30,181,152,188,97,227,60,245,207,51,110,21,4,0,6,1,2,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,95,26,293,94,266,7,106,217,1,17,250,197,84,1,171,189,255,14,11,155,81,43,5,9,10,1,4,0,0,3,2,2,1,0,1,2,0,26,85,125,68,8,27,11,16,6,12,51,1,3,1,11,5,4,0,0,1,6,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,40,119,45,277,179,76,129,145,83,81,315,220,55,264,226,81,36,127,84,93,253,149,191,240,106,51,86,71,35,1,7,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,118,113,299,141,49,200,152,141,95,159,69,212,157,12,129,302,151,122,80,35,149,17,14,9,3,3,0,5,0,3,2,1,0,1,1,2,15,17,32,130,103,39,23,61,4,13,8,14,17,10,7,0,6,0,0,2,1,4,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,31,97,305,364,139,119,142,13,137,130,349,154,8,277,83,121,64,12,292,9,244,342,225,181,162,7,7,63,6,6,1,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,28,96,153,237,66,260,66,35,78,21,192,188,38,278,104,16,50,169,4,62,150,9,4,0,3,1,0,3,2,1,1,1,3,2,1,2,0,2,85,22,86,22,26,25,13,17,27,34,20,0,2,10,0,3,0,2,2,2,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,119,110,288,300,223,10,70,111,116,289,232,162,62,219,182,86,21,207,264,41,106,190,192,196,153,5,96,34,5,2,1,1,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,58,98,207,28,324,58,244,22,259,8,143,231,19,77,421,134,82,216,4,40,88,92,7,7,8,0,1,1,1,4,0,2,1,1,1,1,3,28,29,96,55,12,42,38,14,8,5,7,35,5,4,5,2,2,0,0,3,3,5,2,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,9,140,232,172,127,2,41,102,118,237,88,97,85,224,201,42,135,162,194,13,19,80,245,224,44,57,31,3,5,0,0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,207,298,339,367,56,219,138,125,60,225,55,32,56,284,23,204,156,56,168,17,101,18,12,1,4,3,4,2,4,1,0,0,0,0,0,2,78,41,58,109,48,36,14,40,4,6,28,8,16,1,1,7,2,3,5,4,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,29,1,107,3,10,19,96,117,31,95,11,104,19,189,234,148,26,152,78,239,54,93,110,275,193,78,88,41,94,3,7,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,95,143,303,227,155,6,153,186,60,28,19,234,54,130,295,230,197,39,22,58,83,52,11,12,9,7,4,0,2,5,2,1,0,0,3,2,0,43,45,173,5,5,23,43,12,6,9,37,2,7,0,10,4,3,1,4,0,6,4,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,32,128,84,140,99,81,131,134,115,42,239,169,46,249,212,129,12,85,250,153,220,309,162,233,157,69,60,70,28,2,0,1,1,1,0,0,0,0,0,0,0,0,1,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        phase: [ 14, 28, 44, 58, 71, 87, 94 ]//Endzeiten
        
    //PHASEN
    //0: up, hill, 1: up, stack, 2: up, tiles, 3: up, tiles, hill, 4: up, tiles, stack, 5: stack, hill, up, 6: hill
         
    },
    
    2: {                // DAVE ERDE
        srcPath: 'audio/earth/e_02' ,
        speed: 5 , //5.25 ,

        startTime: 0,   // sec

        delayBridge: [ 38, 59 ],
        
        animationSets:{
            raisePerFrame: 4,
            raiseMaxHeight: 40,

            tilePerFrame: 8,
            tileMaxHeight: 45,

            stackMaxScale: 6,        // Stack max Scale
            stackDuration: 50000,

            hillMaxHeight: 150,
            hillHeightPerFrame: 1.25
        },

        delays: {
            up: [ ] , //--> nach perc
            stack: [], // --> nach geigen_hi
            
            // sec
            hill: [ 1, 3, 5, 7 , 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33,   44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72 ],
            
            // sec 
            tile: [ 22.4, 24.8, 25.2, 27.6, 28, 30.4, 30.7, 33.2, 33.5, 36, 36.3, 38.7, 39.1, 41.5, 41.9, 44.5, 44.7, 47.1, 47.5, 50, 50.3, 52.7, 53.1, 55.5, 55.9, 58.3, 58.6, 61.1, 61.4, 63.9, 64.2, 66.7, 67 /*, 69.4, 69.8, 72.2, 72.6, 75, 75.4, 77.8, 78.2, 80.6, 81, 83.4, 83.8, 86.2, 86.6, 89, 89.4 */ ]
        },
        
        e_geigenHiVolume: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,7,10,1,13,15,8,0,4,11,1,3,13,13,6,8,17,15,2,11,18,10,0,0,0,17,19,1,12,18,3,11,18,16,9,4,11,9,18,4,22,26,18,4,2,4,1,0,1,21,17,4,20,29,29,10,2,7,23,18,2,16,22,15,8,18,14,8,2,1,3,10,10,15,22,16,10,0,6,1,0,2,12,20,4,2,2,19,17,13,5,0,2,15,4,1,13,30,27,14,7,10,6,14,9,13,22,22,11,5,10,17,14,7,3,9,16,14,0,13,13,11,3,12,13,10,10,2,5,21,0,2,15,27,24,14,1,4,8,12,5,3,11,8,4,16,18,5,5,2,5,1,4,12,0,7,6,9,12,9,0,6,6,16,11,1,12,17,11,2,5,9,1,1,8,7,13,7,1,1,2,15,18,9,4,4,0,17,17,0,8,17,14,0,7,9,3,4,12,0,10,19,22,19,2,17,19,16,4,4,5,0,3,9,16,12,9,24,22,14,6,4,0,11,17,15,2,8,14,22,24,14,2,6,8,13,12,7,5,15,26,14,4,11,14,13,13,13,10,7,11,13,7,10,19,24,13,7,2,6,6,7,2,14,32,24,18,0,4,6,6,4,5,14,18,16,5,11,12,11,5,10,9,0,6,7,15,24,28,9,0,4,7,6,0,14,15,2,0,4,12,16,17,6,10,14,3,2,1,0,1,0,4,8,6,0,11,6,0,4,5,5,4,1,2,2,0,4,8,8,7,4,1,0,0,1,1,3,1,5,0,0,1,0,1,5,6,5,6,0,0,0,9,2,9,2,1,0,11,7,13,0,1,5,8,11,4,4,2,1,12,15,18,1,5,1,0,1,4,6,8,4,3,7,3,8,0,6,3,1,8,11,9,2,7,4,10,1,1,0,3,5,3,10,0,3,10,6,14,5,2,1,8,9,6,1,1,1,8,9,1,4,7,1,8,5,11,2,0,7,0,12,0,0,3,6,0,6,0,0,4,7,12,9,3,2,4,5,7,6,4,3,6,8,3,0,2,8,1,7,0,0,4,6,2,4,3,5,1,4,1,3,4,11,9,4,4,6,4,6,2,0,4,4,4,2,1,4,3,0,2,1,0,1,1,3,6,3,2,4,0,3,1,0,0,13,1,10,0,3,6,4,3,2,3,3,11,11,7,1,5,8,1,6,4,1,10,10,7,0,2,3,0,1,4,3,0,10,0,14,2,0,0,6,6,9,0,3,5,3,9,0,1,3,1,3,3,2,0,5,4,7,1,0,4,1,3,4,2,1,5,1,4,1,4,2,7,0,8,2,2,0,3,4,5,7,1,0,1,6,5,3,5,0,5,1,8,1,0,6,4,4,6,4,5,3,13,7,10,0,0,1,1,3,6,2,2,10,0,9,1,1,1,1,4,8,3,0,0,12,1,1,2,2,2,3,0,6,0,2,8,8,7,1,1,1,3,5,9,3,0,0,0,0,5,1,1,9,6,3,6,0,9,7,7,4,5,3,5,2,8,10,2,2,0,0,0,1,7,9,7,0,4,3,4,5,2,9,12,9,1,10,12,16,12,8,4,0,4,6,3,0,6,4,7,0,3,5,10,4,1,8,7,1,9,13,12,9,0,3,3,2,8,9,8,8,1,4,8,7,0,1,2,4,0,4,7,2,4,3,4,1,0,1,5,3,6,4,2,3,8,5,0,0,2,6,9,9,11,14,6,1,4,0,5,7,9,11,8,3,0,2,2,0,3,3,0,0,4,7,8,6,1,0,0,1,2,5,5,1,0,0,1,0,3,4,2,1,2,5,6,4,3,0,1,3,8,2,4,5,5,3,1,2,3,3,0,1,3,3,6,9,10,5,2,0,1,2,3,1,3,5,6,0,5,4,0,1,3,0,2,5,7,9,5,3,0,1,0,3,8,10,13,13,15,8,1,1,5,3,0,3,0,1,4,11,10,11,2,2,3,1,2,0,1,2,4,5,6,3,0,0,1,1,1,0,2,2,2,0,0,2,4,4,3,0,1,5,1,3,8,0,3,5,1,1,7,8,7,4,2,4,0,4,3,3,1,1,1,3,0,3,2,7,1,6,1,9,5,10,1,6,3,5,0,8,5,1,2,0,1,6,9,3,10,4,11,6,9,9,6,4,0,1,2,10,11,0,10,4,11,3,8,0,2,3,0,1,1,1,5,3,6,8,5,0,1,2,6,7,3,0,2,7,11,10,9,1,4,2,2,3,5,6,7,4,0,1,8,9,2,1,3,3,0,2,5,8,1,2,5,5,0,7,2,7,0,7,8,9,3,4,1,2,3,5,2,10,7,4,0,8,9,14,12,4,0,1,1,5,6,7,11,0,6,0,7,7,8,0,4,3,9,7,12,8,15,13,13,13,6,6,1,7,3,10,6,12,1,19,12,13,14,1,7,4,11,4,11,3,14,1,2,7,2,4,4,5,11,20,2,16,2,9,7,2,1,7,11,10,13,0,12,3,22,5,11,0,1,0,7,3,10,7,13,12,7,7,4,6,1,1,2,11,8,13,2,11,3,14,11,2,6,3,14,1,10,2,8,6,7,5,1,1,0,5,11,1,6,2,7,4,7,5,2,4,0,4,4,9,9,9,2,5,6,2,3,2,1,4,2,3,1,3,1,2,1,1,3,0,2,0,4,1,3,4,1,2,0,2,2,3,3,0,2,1,1,0,3,1,2,2,1,1,3,2,2,2,1,4,1,4,2,3,2,0,4,0,3,0,2,1,2,1,0,1,1,2,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,0,0,1,2,0,1,1,1,1,0,1,1,0,1,0,1,2,3,2,3,1,3,0,1,1,1,2,0,0,0,1,1,2,0,1,1,0,0,1,2,2,0,2,0,2,0,1,0,1,2,4,0,2,1,1,0,0,0,0,1,0,3,0,0,0,1,1,1,0,0,2,0,5,3,3,2,3,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,1,7,4,3,2,1,0,2,5,0,9,6,2,2,0,6,2,6,0,1,3,3,4,5,4,3,0,1,7,0,7,6,2,1,4,2,6,1,2,0,1,4,6,2,2,2,6,4,7,4,0,0,5,7,9,0,2,3,5,1,5,6,1,4,7,2,9,2,1,9,6,10,6,3,0,4,4,6,3,1,2,10,9,9,2,0,0,5,7,7,1,1,1,5,7,3,1,0,2,2,8,2,3,1,1,3,0,1,1,1,2,2,1,2,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,1,2,0,3,1,3,0,1,0,2,1,1,2,0,3,0,2,2,2,2,2,2,0,4,3,4,0,3,2,0,3,1,3,2,1,3,2,3,1,1,0,2,1,0,0,3,3,2,0,0,1,0,1,1,0,3,3,3,2,4,1,4,2,2,4,2,0,0,3,0,4,1,12,8,6,0,9,3,12,10,5,1,6,2,11,6,9,4,8,0,0,2,1,10,4,9,2,8,4,2,4,6,4,5,6,1,11,2,14,6,7,0,4,2,3,1,2,4,1,1,9,6,4,2,4,4,6,4,0,0,3,8,0,1,1,0,6,5,6,3,1,2,1,1,0,1,1,1,2,1,6,0,0,0,0,2,1,0,2,5,3,3,1,6,4,3,1,2,4,3,1,2,2,5,5,4,2,3,2,1,0,1,6,3,5,0,0,8,0,0,1,2,0,2,3,5,0,0,1,0,6,5,0,3,9,5,0,1,3,1,3,5,0,0,0,4,4,2,3,0,0,0,0,1,0,0,1,0,1,0,0,3,3,1,7,2,0,1,2,3,0,1,0,3,2,2,4,0,2,3,3,0,1,3,2,3,1,2,4,1,2,0,0,3,3,3,2,4,5,0,2,0,1,3,3,2,2,3,1,3,1,0,0,1,0,0,0,0,2,2,1,1,2,2,0,4,4,2,0,0,0,0,0,2,3,0,2,0,0,1,1,3,4,1,0,2,1,2,5,2,0,2,2,0,2,1,3,0,3,0,0,3,1,4,0,3,7,10,7,4,2,1,9,8,2,4,3,6,18,3,14,10,3,14,26,2,6,5,0,8,9,3,1,1,13,11,10,3,12,11,1,1,8,0,9,16,4,2,20,9,8,12,7,0,15,4,3,5,4,6,6,6,9,8,0,9,12,8,4,7,3,8,5,10,9,17,19,5,14,0,3,19,26,6,4,5,4,13,10,18,7,10,6,7,2,6,9,8,16,3,13,2,13,3,22,7,13,1,4,14,11,22,21,13,10,3,1,2,6,4,3,13,9,8,6,10,4,3,5,4,3,11,17,2,3,13,13,7,7,4,1,17,6,0,6,2,4,3,0,4,9,0,7,11,3,2,4,3,0,1,3,0,0,3,2,0,0,5,0,6,6,1,0,0,1,8,0,0,1,1,5,10,1,1,5,4,2,3,4,4,1,8,0,1,1,0,1,4,2,2,4,12,0,0,7,1,3,0,2,2,0,12,8,8,1,6,2,4,5,2,4,6,7,2,9,4,0,0,3,5,7,2,11,4,2,4,1,11,16,3,15,1,3,12,7,11,8,1,1,16,2,15,3,0,6,6,2,13,12,5,5,6,7,2,10,4,3,10,0,9,11,10,7,13,11,5,7,6,7,15,7,10,6,6,2,1,5,3,10,4,5,11,17,1,8,9,4,6,0,9,6,13,5,5,0,2,1,2,0,0,2,3,3,5,0,7,4,2,2,10,14,6,7,1,6,0,1,1,1,3,3,0,2,0,2,3,4,2,0,4,1,3,8,1,3,8,7,2,12,9,1,4,3,4,5,7,0,0,5,0,4,11,0,3,5,0,6,3,8,5,4,5,2,0,0,2,10,2,1,2,4,4,8,11,8,0,1,1,5,0,3,2,5,0,8,2,6,9,1,5,10,6,0,5,4,9,1,4,3,4,6,8,4,2,2,0,9,0,8,2,5,2,12,0,8,6,4,10,3,0,1,3,3,2,1,0,3,1,3,4,5,1,3,3,4,1,4,9,5,0,1,1,2,0,3,6,5,1,4,6,12,8,5,1,2,7,5,4,1,3,8,2,4,6,0,6,1,1,0,1,3,4,1,13,8,0,2,7,8,3,1,2,5,4,7,1,3,1,2,1,0,0,0,3,2,1,10,6,8,3,6,5,4,3,1,0,1,5,11,14,6,5,2,1,0,4,9,9,9,6,12,13,14,10,9,8,3,8,6,2,4,2,7,12,8,4,2,0,5,2,9,1,1,4,4,0,11,4,6,7,8,11,4,1,2,0,6,9,11,0,8,0,3,5,1,8,4,10,6,2,5,0,1,8,18,9,8,2,10,2,4,7,2,2,9,12,6,6,0,3,6,3,6,4,2,8,8,1,1,3,2,8,5,10,1,3,0,8,3,0,3,1,4,0,13,0,8,5,8,3,0,3,10,12,12,8,9,3,7,1,5,4,6,3,3,4,2,9,6,7,7,9,9,2,6,10,10,9,6,4,10,2,3,7,0,4,1,1,8,0,1,9,3,3,9,0,10,6,7,4,11,7,3,12,2,19,13,6,12,11,3,10,17,13,18,12,0,7,10,1,5,4,10,2,11,12,8,7,2,4,4,4,13,29,21,19,12,3,9,9,0,12,1,5,18,13,6,1,7,13,8,14,11,4,1,3,3,0,6,1,12,2,3,3,14,13,15,24,0,10,15,13,23,11,0,6,8,11,2,2,7,19,25,2,11,10,8,10,3,19,0,8,1,18,10,14,6,16,6,5,18,9,13,4,17,3,7,5,2,0,1,11,12,11,0,2,1,12,4,2,3,8,12,4,6,2,6,2,1,2,15,27,9,1,2,3,1,0,5,0,4,3,4,0,1,5,9,5,4,2,0,0,0,4,2,3,0,0,0,1,4,1,5,1,0,3,6,7,15,4,2,0,0,3,0,2,0,10,6,6,4,1,0,9,5,0,1,6,5,3,5,1,0,2,12,3,3,7,3,1,2,10,2,3,4,10,4,1,3,2,1,2,2,6,0,2,11,0,8,7,2,8,5,11,1,7,8,0,14,2,14,10,11,13,4,6,5,9,5,15,9,4,6,0,3,1,12,9,16,14,13,0,12,8,13,4,0,7,21,12,10,4,6,13,4,1,13,8,9,26,20,0,4,6,2,1,4,10,15,6,0,0,15,4,8,5,1,1,14,1,8,3,16,9,1,0,0,6,12,2,0,7,1,3,1,2,1,4,0,5,4,8,10,10,0,4,2,1,1,1,7,5,7,5,2,3,2,5,1,3,6,11,12,8,8,2,10,3,5,3,3,4,0,6,3,9,3,10,7,10,6,0,1,4,10,2,1,0,8,4,3,3,7,4,4,10,3,0,1,2,2,1,0,6,6,0,1,2,5,3,9,1,1,5,10,11,1,5,6,0,0,6,2,7,1,12,0,1,0,4,7,5,5,1,0,3,1,0,5,2,0,3,2,0,6,3,9,3,1,3,9,0,3,9,7,10,1,2,2,5,7,10,2,10,6,4,9,0,6,0,2,12,4,0,3,8,0,4,4,2,9,2,1,6,3,7,1,4,8,7,4,10,8,0,0,5,7,3,2,9,6,7,7,4,0,2,9,1,1,4,2,0,3,0,5,7,3,1,1,0,7,4,3,4,6,3,3,6,1,0,2,1,8,3,6,4,11,12,6,5,9,3,7,4,6,4,0,4,5,4,4,10,13,11,9,8,13,11,8,7,2,3,9,14,11,13,13,13,7,6,5,7,1,2,3,6,3,5,10,7,1,7,0,3,3,2,5,4,11,4,10,5,0,9,8,8,4,8,7,4,5,8,0,1,12,8,7,4,6,2,2,2,1,5,5,8,3,0,0,4,5,0,2,3,7,8,11,3,3,4,2,7,7,9,8,5,5,1,10,8,5,0,5,10,2,2,13,2,9,1,0,3,3,1,1,4,10,7,10,6,9,4,2,1,5,7,4,11,7,5,6,3,7,1,3,4,5,4,6,11,7,5,3,9,0,2,4,1,7,5,7,6,6,7,5,3,3,2,2,6,3,9,0,2,1,1,2,1,7,8,7,2,4,0,8,6,1,2,3,7,3,7,0,1,0,11,7,2,0,3,0,4,1,9,0,1,3,10,2,3,6,3,1,2,5,5,6,5,9,15,4,4,2,5,0,4,0,5,1,2,0,0,3,0,2,6,6,3,2,3,2,0,2,0,1,0,0,1,1,0,1,2,1,0,1,0,0,1,1,2,0,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ],
        
        e_percVolume: [ 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,28,8,10,3,0,2,2,1,1,103,99,78,10,20,32,40,25,11,18,14,1,7,10,7,11,5,4,6,10,6,144,107,49,94,89,64,28,11,10,20,44,11,8,3,0,5,4,13,15,13,2,1,1,0,4,2,0,3,2,2,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,17,38,15,12,7,0,29,12,23,19,10,5,16,0,2,2,0,0,3,4,52,81,196,68,6,23,43,30,18,10,10,40,66,17,7,5,4,6,6,7,6,0,105,162,21,71,73,56,22,13,16,77,45,93,22,23,11,8,1,9,16,9,5,0,1,4,6,3,0,0,3,3,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,8,5,3,28,16,5,8,4,4,0,27,37,17,41,11,91,113,30,2,5,1,35,19,3,1,0,4,0,2,3,1,65,57,153,97,44,11,14,9,1,3,1,14,43,12,5,5,5,1,0,0,2,107,198,105,2,35,63,49,19,12,19,71,5,5,5,18,21,6,6,7,13,6,136,117,21,81,80,68,34,8,12,20,24,3,30,4,1,0,4,9,8,7,14,82,33,107,102,61,34,4,4,5,11,7,6,35,19,1,7,8,5,2,1,15,36,24,149,106,49,16,10,2,4,6,15,17,17,11,0,12,11,4,2,1,21,78,208,135,51,13,34,35,10,2,11,102,139,13,9,4,11,13,2,8,9,38,103,155,52,22,45,53,36,10,9,17,28,67,12,9,7,2,8,6,4,6,13,49,69,99,111,63,37,10,7,14,12,7,61,19,9,6,9,12,8,3,0,59,4,180,124,79,13,5,20,12,5,10,32,6,7,1,0,3,5,2,0,3,67,65,182,81,8,43,42,34,9,7,73,9,62,17,14,2,3,5,0,4,3,39,67,98,46,9,41,37,27,7,6,24,14,5,12,3,0,8,3,3,8,8,54,86,61,65,79,54,38,8,8,13,18,9,8,1,2,0,2,8,4,7,13,109,28,133,108,64,17,6,8,3,9,58,30,21,5,4,2,8,4,1,0,15,65,71,130,89,14,25,26,21,0,1,124,141,77,24,3,2,14,1,0,10,26,28,99,106,65,12,39,40,23,4,4,74,57,20,9,1,6,2,2,2,3,21,113,135,36,58,76,50,43,12,14,20,12,6,3,5,5,2,4,5,6,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,52,1,7,6,4,3,1,0,3,16,116,136,35,54,73,47,41,11,11,20,73,85,7,3,7,5,2,8,7,3,34,122,25,125,115,73,19,11,4,13,13,87,109,35,24,11,2,5,11,8,0,67,27,128,114,105,19,20,30,19,0,3,43,29,42,13,4,6,10,3,2,4,106,68,172,45,21,30,49,13,16,10,14,43,58,9,5,4,11,7,5,5,7,5,137,142,34,70,76,55,41,10,17,22,35,1,25,11,2,4,1,4,9,8,54,138,82,69,90,83,44,26,5,9,20,34,11,19,43,7,6,5,15,15,9,97,62,63,116,99,55,13,2,3,8,8,19,32,9,5,4,8,14,4,1,1,25,110,206,70,19,34,41,41,12,8,16,24,33,1,4,1,6,4,4,6,8,90,115,127,21,61,75,61,35,13,19,22,29,20,10,10,5,6,9,9,9,6,3,60,40,89,103,71,32,13,7,18,15,0,1,21,30,8,15,17,11,8,0,99,37,59,80,84,42,16,4,3,9,3,26,32,11,1,1,0,5,4,6,0,7,44,155,85,26,25,33,29,6,7,10,33,37,4,4,5,0,2,3,2,5,105,99,70,7,41,60,45,26,11,17,12,6,65,13,9,8,2,7,7,7,4,127,93,41,83,79,59,43,11,10,18,103,9,5,24,7,8,9,12,15,15,10,66,69,80,100,85,48,12,2,8,16,65,8,12,6,1,5,9,5,4,1,3,46,53,137,66,26,14,27,20,0,1,68,33,7,5,2,11,7,0,3,6,24,73,80,115,72,0,30,33,21,1,11,58,21,1,7,0,1,0,0,2,3,30,89,160,26,86,82,58,30,15,15,21,65,72,31,2,0,14,1,5,13,5,19,40,56,101,112,83,29,19,1,13,8,50,52,15,7,6,7,3,8,1,0,56,51,77,109,60,32,11,22,12,2,9,23,18,9,9,2,7,0,0,0,1,61,79,194,69,9,26,47,34,18,9,15,46,75,16,9,5,5,6,5,7,7,40,102,192,28,1,51,53,30,16,13,58,56,106,42,3,8,5,5,5,7,7,24,93,105,41,75,74,46,15,7,13,68,14,24,18,16,2,5,7,3,5,6,117,7,145,115,59,40,1,16,4,7,50,5,25,8,17,0,9,10,1,3,4,52,93,210,78,0,23,36,25,12,4,32,27,32,7,1,1,9,7,2,8,8,69,169,148,0,61,71,52,23,13,18,23,27,55,11,21,14,0,8,8,11,10,71,126,91,18,50,59,40,13,6,12,61,10,11,1,12,7,0,8,6,2,3,96,3,125,100,61,32,4,4,3,10,14,14,19,3,7,1,4,6,3,0,2,8,128,167,81,13,17,31,28,6,5,33,34,34,8,5,5,1,2,1,2,4,88,90,101,9,43,55,46,15,10,16,67,11,16,14,23,28,1,4,5,1,1,112,164,51,29,58,64,41,12,13,17,4,0,21,10,0,3,0,7,7,8,16,76,34,110,107,78,36,5,0,6,11,20,0,32,21,3,9,10,4,1,1,12,41,93,132,91,45,17,8,2,4,7,21,31,3,7,5,9,14,4,2,2,31,121,207,96,2,45,47,42,25,7,19,15,130,16,11,3,9,9,0,11,9,33,105,164,4,73,82,60,33,11,14,23,26,50,14,12,4,8,7,7,9,5,10,42,53,79,95,57,33,7,5,12,10,63,73,14,14,6,7,12,8,2,0,58,4,182,125,79,45,5,20,1,4,1,32,53,6,1,3,2,1,1,1,0,69,27,184,109,51,13,23,29,5,1,65,8,70,23,24,2,2,4,2,1,3,44,78,109,49,15,53,43,31,17,9,23,0,8,13,4,1,8,3,4,9,9,62,90,53,81,92,61,40,8,10,16,12,4,6,3,2,0,3,4,5,8,15,121,28,149,118,69,17,5,10,4,10,57,4,20,7,3,2,9,3,1,1,18,68,82,138,94,12,12,31,23,1,2,126,112,65,21,3,1,13,0,0,10,7,29,79,95,60,6,30,32,20,2,2,77,51,17,9,1,0,2,2,1,1,18,114,134,35,54,74,48,42,12,14,19,81,49,1,1,3,6,6,8,7,4,26,111,29,100,104,69,19,10,2,12,12,34,39,22,9,5,0,4,7,5,0,64,36,110,103,92,23,19,25,15,0,3,16,16,52,30,7,6,7,3,1,0,59,10,149,91,64,0,32,38,18,4,6,45,56,12,11,3,11,9,1,2,5,10,125,129,29,60,68,51,37,11,16,20,30,12,22,2,1,9,0,8,8,7,40,121,78,56,78,72,40,23,5,14,17,3,14,13,19,2,7,9,3,3,5,111,9,165,116,89,30,10,22,6,5,0,4,51,10,28,5,21,19,6,3,1,21,113,211,70,20,34,43,41,13,9,16,27,31,1,4,1,7,6,3,6,8,69,97,117,10,50,65,47,32,11,16,19,26,20,6,10,4,6,8,8,8,6,138,60,41,89,102,71,32,13,8,20,9,7,14,2,13,3,3,10,7,3,0,135,43,101,109,107,51,16,1,5,15,11,3,26,31,11,0,3,14,10,5,0,52,13,156,98,64,0,20,21,2,0,28,20,38,11,4,7,5,1,0,1,3,119,105,71,11,48,70,47,30,14,20,4,17,17,9,8,8,1,8,8,8,5,137,100,49,91,89,65,28,11,11,20,21,4,30,0,3,4,1,9,8,9,12,66,42,140,114,77,26,4,7,5,9,5,52,9,17,6,16,2,8,9,6,11,21,10,115,79,49,9,11,11,2,3,19,49,1,7,5,6,6,3,1,1,29,109,125,72,5,30,44,37,22,7,17,3,23,2,8,1,2,1,4,6,6,28,84,145,21,75,74,52,27,14,13,19,88,58,18,0,4,7,6,8,7,4,16,40,55,93,101,74,26,4,0,12,14,102,175,40,17,13,13,2,15,5,4,43,16,1,112,87,62,10,9,8,7,4,27,72,5,12,2,1,3,0,5,2,51,66,172,64,3,24,42,31,17,8,15,14,13,7,3,4,2,1,2,5,5,3,2,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ], 
        
        phase: [ 10, 22, 33, 44, 60, 66, 86, 74, 88 ]
    }
};

ELEMENTS.Music = [];

//______________________________________________________________________________
// LIGHTS

ELEMENTS.Lights = function( parent, light, x, y, z ) {
    light = light || new THREE.PointLight( 0xFFFFFF, 1 );
    x = x || 0;
    y = y || 0;
    z = z || 0;
    light.position = new THREE.Vector3( x, y, z );
    light.name = "light";
    parent.add( light );
    return light;
};

//______________________________________________________________________________
// CUBE

ELEMENTS.Cube = function( director ) {
    ELEMENTS.Cube.instance = this,

    this.initialize( director );
};

ELEMENTS.Cube.prototype = {
    
    side: 100,
    groundSize: 7,		
    opacityDelay: 100,	
    
    initialize: function( director ) {
        this.director = director;

        this.opacityLineMax = ELEMENTS.Config.opacityLine;
        this.opacityFaceMax = ELEMENTS.Config.opacityFace;
        
        this.ground();
    },
    
    cubePoints: function( ) {
        var half = this.side / 2,

        points = [
        new THREE.Vector3( - half, - half, - half ),                             //1
        new THREE.Vector3( + half, - half, - half ),                             //2
        new THREE.Vector3( + half, - half, + half ),                             //3
        new THREE.Vector3( - half, - half, + half ),                             //4
        new THREE.Vector3( - half, + half, - half ),                             //5
        new THREE.Vector3( + half, + half, - half ),                             //6
        new THREE.Vector3( + half, + half, + half ),                             //7
        new THREE.Vector3( - half, + half, + half ),                             //8
        ];
        
        points.order = [
        [0, 1, 2, 3, 0],   //Rechteck unten
        [4, 5, 6, 7, 4],   //Rechteck oben
        [0, 4],         // 4 Verbindungen zwischen oben und unten
        [1, 5],
        [2, 6],
        [3, 7]
        ];
       
        return points;
    },
    
    generate: function(){
       
        var i, j, line, material, lineGeo, oneCube = new THREE.Object3D(),

        //OUTLINE
        points = this.cubePoints( ),
        cube_frame = new THREE.Object3D();
        oneCube.add( cube_frame );

        material = new ELEMENTS.Material();
        material = material.lineM;
        material.color = ELEMENTS.Color.yellow;
        
        j = points.order.length - 1;
        for (j; j >= 0; j-- ){
            lineGeo = new THREE.Geometry();
            
            i = points.order[j].length -1;
            for ( i; i >= 0; i -- ) {                    
                lineGeo.vertices.push( new THREE.Vertex( points[ points.order[j][i] ] )); 
            }
            
            line = new THREE.Line( lineGeo,  material );
            cube_frame.add( line);
        }   

        //FACES
        material = new ELEMENTS.Material();
        material = material.faceM;
        material.color = ELEMENTS.Color.yellow;
        
        var mesh = new THREE.Mesh( new THREE.CubeGeometry( this.side,  this.side,  this.side, 1, 1, 1, material), new THREE.MeshFaceMaterial());
        mesh.doubleSided = true;
        
        oneCube.fadeInObjFace = oneCube.fadeInObjLine = oneCube.up = oneCube.down = 
        oneCube.stackGrow =  oneCube.stackShrink = oneCube.tileUp = oneCube.tileDown =
        oneCube.hillCenter = oneCube.hillCenterBack = oneCube.hillNeighbour1 = oneCube.hillNeighbour1Back = oneCube.hillNeighbour2 = oneCube.hillNeighbour2Back = false;
        oneCube.neighbours1 = [];
        oneCube.neighbours2 = [];
                
        oneCube.add( mesh ); 
        return oneCube;
    },

      
    ground: function( ){
        var groundDimension = this.groundSize * this.groundSize,
        groundCountCubes = 2 * groundDimension,
        sideDouble = 2 * this.side;

        this.ground = new THREE.Object3D();
        this.ground.name = "groundCube";
        this.director.view.scene.add(this.ground);
        
        var x = 0, y = 0, z = 0, X = 0, Z = 0, i, j, len = groundCountCubes - 1;
        
        for( j = len; j >= 0; j-- ){            
            i = len - j;
            var groundCube = this.generate();
            groundCube.position.set( x, y, z );
            
            //neigbours für Hole berechnen
            var neighbourRU, neighbourLU, neighbourRO, neighbourLO;
            if( i >= groundDimension ){                              // > groundDimension --> Zwischenschritte
                neighbourRU = i - groundDimension ;
                neighbourLU = neighbourRU + 1;
                neighbourRO = neighbourRU + this.groundSize;
                neighbourLO = neighbourRO + 1;
                if( ( i + 1 ) % this.groundSize == 0) {                             //linke Seite
                    neighbourLU -= this.groundSize;
                    neighbourLO -= this.groundSize;
                }  
                if( i > groundCountCubes - this.groundSize ){              //obere Seite
                    neighbourRO -= groundDimension;
                    neighbourLO -= groundDimension;
                }       
            }else{                                                      // 0 - this.groundDimension
                neighbourLO = i + groundDimension;
                neighbourRO = neighbourLO - 1;
                neighbourLU = neighbourLO - this.groundSize;
                neighbourRU = neighbourLU - 1; 
                if( i % this.groundSize == 0 ){                                  //rechts Seite
                    neighbourRO += this.groundSize;
                    neighbourRU += this.groundSize;
                }   
                if( i < this.groundSize ){                                       //untere Seite
                    neighbourLU += groundDimension;
                    neighbourRU += groundDimension;
                }  
            }
            groundCube.neighbours1.push( neighbourRU, neighbourLU, neighbourRO, neighbourLO );
            
            var neighbourO, neighbourU, neighbourR, neighbourL;          // 2. Reihe Nachbarn berechen
            neighbourO = i + this.groundSize;
            neighbourU = i - this.groundSize;
            neighbourL = i + 1;
            neighbourR = i - 1;
            if( i < groundDimension ){                               // 0 - this.groundDimension   
                if( i % this.groundSize == 0){                                  //rechts Seite 1. Reihe
                    neighbourR += this.groundSize;
                }   
                if( i < this.groundSize){                                       //untere Seite 1. Reihe
                    neighbourU += groundDimension;
                }  
                if( (i+1) % this.groundSize == 0) {                             //linke Seite 2. Reihe
                    neighbourL -= this.groundSize;
                }  
                if( i >= groundDimension - this.groundSize ){              //obere Seite 2. Reihe
                    neighbourO -= ( groundDimension - this.groundSize );
                }       
            }else{                                                      // Zwischenschritte >=this.groundDimension
                if( ( i + 1 ) % this.groundSize == 0) {                              //linke Seite 1.Reihe
                    neighbourL -= this.groundSize;
                } 
                if( ( i + 1 )> groundCountCubes - this.groundSize ){              //obere Seite 1. Reihe
                    neighbourO -= groundDimension;
                } 
                if( i % this.groundSize == 0){                                  //rechts Seite 2. Reihe
                    neighbourR += this.groundSize;
                }   
                if (i < groundDimension + this.groundSize){                //untere Seite 2. Reihe
                    neighbourU += groundDimension;
                }  
            }

            groundCube.neighbours2.push( neighbourO, neighbourU, neighbourL, neighbourR );
            // ende Neighbours berechnen
            
            this.ground.add( groundCube );
            
            //Positions der Cubes berechnen
            x -= (sideDouble );
            if( i ===  groundDimension - 1 ){
                x = X - this.side;
                z = Z + this.side ;
            }
            
            if( ( i + 1 ) % this.groundSize === 0){
                if( i < groundDimension - 1 ){
                    x = X;
                    z -= ( sideDouble );
                }else{
                    x = X - this.side;
                    z -= ( sideDouble );
                }
            } // Ende Positions berechnen 
        }
        z = Z;
    }, 
    
    earthLights : function(){
        new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xFFFF33, 0.5), -100, 200, -400);
        new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xFFFF33, 0.5), 100, 200, -400);    
        new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xFFFF33, 1), 0, 200, -200);
        new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xFFFFFF, 1), 400, 300, 400);
    },
    
    startMove: function( ){
        var groundCountCubes = 2 * this.groundSize * this.groundSize,
        rand = this.director.randomNr( (groundCountCubes - 1), 0, true ),
        obj = this.ground.children[rand];
        if( obj.stackGrow === false &&  obj.stackShrink === false &&  obj.up === false && obj.down === false && obj.tileUp === false && obj.tileDown === false &&
            obj.hillCenter === false && obj.hillCenterBack === false && obj.hillNeighbour1 === false && obj.hillNeighbour1Back === false && obj.hillNeighbour2 === false && obj.hillNeighbour2Back === false ){
            obj.up = true; 
        }else{
            this.startMove();
        }
    },
    
    startTile: function(){
        var groundCountCubes = 2 * this.groundSize * this.groundSize,
        i, rand = this.director.randomNr( (groundCountCubes - 1), 0, true ),
        obj = this.ground.children[rand];
        if( obj.stackGrow === false &&  obj.stackShrink === false &&  obj.up === false && obj.down === false && obj.tileUp === false && obj.tileDown === false &&
            obj.hillCenter === false && obj.hillCenterBack === false && obj.hillNeighbour1 === false && obj.hillNeighbour1Back === false && obj.hillNeighbour2 === false && obj.hillNeighbour2Back === false ){
            obj.tileUp = true; 
            i = obj.neighbours1.length - 1;
            for( i; i >= 0; i-- ){
                this.resetAll( obj.parent.children[ obj.neighbours1[i] ] );
                obj.parent.children[ obj.neighbours1[i] ].tileUp = true;
            }
        }else{
            this.startTile();
        }
    },
    
    startStack: function(){
        var groundCountCubes = 2 * this.groundSize * this.groundSize,
        rand = this.director.randomNr( (groundCountCubes - 1), 0, true ),
        obj = this.ground.children[rand];
        if( obj.stackGrow === false &&  obj.stackShrink === false &&  obj.up === false && obj.down === false && obj.tileUp === false && obj.tileDown === false &&
            obj.hillCenter === false && obj.hillCenterBack === false && obj.hillNeighbour1 === false && obj.hillNeighbour1Back === false && obj.hillNeighbour2 === false && obj.hillNeighbour2Back === false ){
            obj.stackGrow = true; 
        }else{
            this.startStack();
        }
    },
	
    startHill: function(){
        var groundCountCubes = 2 * this.groundSize * this.groundSize,
        i, rand = this.director.randomNr( (groundCountCubes - 1), 0, true ),
        obj = this.ground.children[rand];
        if( obj.stackGrow === false &&  obj.stackShrink === false &&  obj.up === false && obj.down === false && obj.tileUp === false && obj.tileDown === false &&
            obj.hillCenter === false && obj.hillCenterBack === false && obj.hillNeighbour1 === false && obj.hillNeighbour1Back === false && obj.hillNeighbour2 === false && obj.hillNeighbour2Back === false ){
            obj.hillCenter = true; 
            i = obj.neighbours1.length - 1;
            for( i; i >= 0; i-- ){
                this.resetAll( obj.parent.children[ obj.neighbours1[i] ] );
                obj.parent.children[ obj.neighbours1[i] ].hillNeighbour1 = true;
            }
            i = obj.neighbours2.length - 1;
            for( i; i >= 0; i--  ){
                this.resetAll( obj.parent.children[ obj.neighbours2[i] ] );
                obj.parent.children[ obj.neighbours2[i] ].hillNeighbour2 = true;
            }
        }else{
            this.startHill();
        }
	
    },
    
    fadeOutObj: function( obj ){ 
        obj.children[1].geometry.materials[0].opacity = 0;
        obj.children[0].children[0].material.opacity = 0;
    },
    
    fadeInObj: function( obj ){
        obj.fadeInObjFace = true;
        obj.fadeInObjLine = true;
    },
    
    update: function(){
        var cameraTarget = this.director.view.cameraTarget,
        cameraTargetPos = cameraTarget.position,
		cameraPos = this.director.view.camera.position,
        distanceCamera = this.groundSize * this.side,
        groundWidth = 2 * this.groundSize * this.side,
        i = this.ground.children.length - 1, 
        material,  hillLimit , obj,
        heightStep = 1 + ( this.stackMaxScale * 100 / this.stackDuration );
        
        for( i; i >= 0; i-- ){
            obj = this.ground.children[i];
            
            //Up der Würfel
            if( obj.up === true ){
                obj.position.y += this.raisePerFrame * this.director.timeGone; 
                if( obj.position.y >= this.raiseMaxHeight ){
                    obj.up = false;
                    obj.down = true;
                }
            }
            //Down der Würfel    
            if( obj.down === true){
                obj.position.y -= this.raisePerFrame * this.director.timeGone; 
                if( obj.position.y <= 0 ){
                    obj.down = false;
                    obj.position.y = 0;
                }
            }

            hillLimit = this.hillMaxHeight;
            //Pyramide erzeugen
            if( obj.hillCenter === true ){
                obj.position.y += this.hillHeightPerFrame * this.director.timeGone; 
                if( obj.position.y >= hillLimit ){
                    obj.hillCenter = false;
                    obj.hillCenterBack = true;
                }
            }
            //Pyramide zurück
            if( obj.hillCenterBack === true ){
                obj.position.y -= this.hillHeightPerFrame * this.director.timeGone; 
                if( obj.position.y <= 0 ){
                    obj.hillCenterBack = false;
                    obj.position.y = 0;
                }
            }
            
            //Neighbour1 Pyramide
            hillLimit = 2 * this.hillMaxHeight / 3;
            if( obj.hillNeighbour1 === true ){
                obj.position.y += this.hillHeightPerFrame * 2/3 * this.director.timeGone; 
                if( obj.position.y >= hillLimit ){
                    obj.hillNeighbour1 = false;
                    obj.hillNeighbour1Back = true;
                }
            }   
            //Neighbour1 zurück
            if( obj.hillNeighbour1Back === true ){
                obj.position.y -= this.hillHeightPerFrame * 2/3 * this.director.timeGone; 
                if( obj.position.y <= 0 ){
                    obj.hillNeighbour1Back = false;
                    obj.position.y = 0;
                }
            }
            //Neighbour2 Pyrmide
            hillLimit = this.hillMaxHeight / 3;
            if( obj.hillNeighbour2 === true ){
                obj.position.y += this.hillHeightPerFrame / 3 * this.director.timeGone; 
                if( obj.position.y >= hillLimit ){
                    obj.hillNeighbour2 = false;
                    obj.hillNeighbour2Back = true;
                }
            } 
            //Neighbour2 zurück
            if( obj.hillNeighbour2Back === true ){
                obj.position.y -= this.hillHeightPerFrame / 3 * this.director.timeGone; 
                if( obj.position.y <= 0 ){
                    obj.hillNeighbour2Back = false;
                    obj.position.y = 0;
                }
            }

            //Stack erzeugen
            if( obj.stackGrow === true ){
                if( obj.scale.y * heightStep < this.stackMaxScale ){
                    obj.scale.y *= heightStep;
                }else{
                    obj.stackGrow = false;
                    obj.stackShrink = true;                  
                } 
            }
            //Verkleinern auf Originalgröße
            if( obj.stackShrink === true ){
                if( obj.scale.y / heightStep > 1 ){
                    obj.scale.y /= heightStep;
                }else{
                    obj.stackShrink = false; 
                    obj.scale.y = 1;
                } 
            }
            
            //Tile up
            if( obj.tileUp === true ){
                obj.position.y += this.tilePerFrame * this.director.timeGone; 
                if( obj.position.y >= this.tileMaxHeight ){
                    obj.tileUp = false;
                    obj.tileDown = true;
                }
            }
            //Tile Down
            if( obj.tileDown === true){
                obj.position.y -= this.tilePerFrame * this.director.timeGone; 
                if( obj.position.y <= 0 ){
                    obj.tileDown = false;
                    obj.position.y = 0;
                }
            }
            
            
            // Würfel neu positionieren in Abhängigkeit zur CameraTarget
            if( ELEMENTS.Config.bridge === false ){
                // X-Achse
                if( obj.position.x + distanceCamera <= cameraTargetPos.x ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.x += groundWidth;
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                }else if( obj.position.x - distanceCamera >= cameraTargetPos.x ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.x -= groundWidth;
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                }
				
                //Z-Achse
                if( obj.position.z + distanceCamera <= cameraTargetPos.z ){
                        this.fadeOutObj( obj );
                        this.reset( obj );
                        obj.position.z += groundWidth;
                        if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                                this.fadeInObj( obj );
                        }
                }else if( obj.position.z - distanceCamera >= cameraTargetPos.z ){ // obj.position.z - distanceCamera >= cameraTargetPos.z
                        this.fadeOutObj( obj );
                        this.reset( obj );
                        obj.position.z -= groundWidth;
                        if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                                this.fadeInObj( obj );
                        }
                }
            }
            
            //FadeInObj: Faces
            if( obj.fadeInObjFace === true ){
                material = obj.children[1].geometry.materials;
                if( material[0].opacity < this.opacityFaceMax ){
                    material[0].opacity += this.opacityFaceMax / this.opacityDelay;
                    if( material[0].opacity >= this.opacityFaceMax){
                        material[0].opacity = this.opacityFaceMax;
                        obj.fadeInObjFace = false;
                    }
                }
            }
            //FadeInObj: Lines
            if( obj.fadeInObjLine === true ){
                material = obj.children[0].children[0].material;
                if( material.opacity < this.opacityLineMax ){
                    material.opacity += this.opacityLineMax / this.opacityDelay;
                    if( material.opacity >= this.opacityLineMax){
                        material.opacity = this.opacityLineMax;
                        obj.fadeInObjLine = false;
                    }
                }    
            }
        }
    },
    
    resetAll: function( obj ){
        obj.up = obj.down = obj.tileUp = obj.tileDown =
        obj.hillCenter = obj.hillCenterBack = obj.hillNeighbour1 = obj.hillNeighbour1Back = obj.hillNeighbour2 = obj.hillNeighbour2Back = false;       
    },
    
    reset: function( obj ){
        if( obj.up === true || obj.down === true ){
            obj.position.y = 0;
            obj.up = obj.down = false;
        }
    }
}

//______________________________________________________________________________
// PYRAMID

ELEMENTS.Pyramid = function( director ) {
    ELEMENTS.Pyramid.instance = this,

    this.initialize( director );
};

ELEMENTS.Pyramid.prototype = {
    side: 100,
    groundSize: 6,

    pCount: 149,
    countComets: 9,
    opacityDelay: 10,
 
    initialize: function( director ) {
        
        this.director = director;
        
        this.opacityLineMax = ELEMENTS.Config.opacityLine;
        this.opacityFaceMax = ELEMENTS.Config.opacityFace;
        
        this.ground();
    },
    
   pyramidPoints: function( height ) {
        var nHeight = 3 * height / 4,
        quartHeight = height / 4,
        half = this.side / 2,
        points = [ 
            
        new THREE.Vector3( - half, - quartHeight, + half ),
        new THREE.Vector3( - half, - quartHeight, - half ),
        new THREE.Vector3( + half, - quartHeight, - half ),
        new THREE.Vector3( + half, - quartHeight, + half ),
        new THREE.Vector3( - half, - quartHeight, + half ),
        new THREE.Vector3(      0,     + nHeight,      0 ),
        new THREE.Vector3( - half, - quartHeight, - half ),
        new THREE.Vector3(      0,     + nHeight,      0 ),
        new THREE.Vector3( + half, - quartHeight, + half ),
        new THREE.Vector3(      0,     + nHeight,      0 ),
        new THREE.Vector3( + half, - quartHeight, - half )
        ];
        return points;
    },

    generate: function( newHeight ) {             //PYRAMID
        var height = this.side * newHeight || this.side;       
        var onePyramid = new THREE.Object3D(),
        material, line, i, 
        //OUTLINE
        pyramid_frame = new THREE.Geometry(),
        points = this.pyramidPoints( height );                 
	
        i = points.length - 1;
        for ( i; i > 0; i-- ) {
            pyramid_frame.vertices.push( new THREE.Vertex( points[ i ] ) );
        }
	
        material = new ELEMENTS.Material();
        material = material.lineM;
        material.color = ELEMENTS.Color.red;
	
        line = new THREE.Line( pyramid_frame,  material );
        onePyramid.add( line );
   
        //FACES
        material = new ELEMENTS.Material();
        material = material.faceM;
        material.color = ELEMENTS.Color.red;
        
        var cube = new THREE.CubeGeometry( this.side, 2 * height, this.side, 1, 1, 1, material );
        cube.vertices[ 0 ].position.multiplyScalar( 0 );
        cube.vertices[ 1 ].position.multiplyScalar( 0 );
        cube.vertices[ 4 ].position.multiplyScalar( 0 );
        cube.vertices[ 5 ].position.multiplyScalar( 0 );
                
        var mesh = new THREE.Mesh(cube, new THREE.MeshFaceMaterial());
        mesh.doubleSided = true;
        
        mesh.position.y += 3 * height / 4;
        onePyramid.add( mesh );
        
        onePyramid.zoomIn = onePyramid.zoomOut  = false;
        
        return onePyramid;
    }, 
    
    ground: function(){
        var groundDimension = this.groundSize * this.groundSize,
        particleCount = 150,
        x = 0, y = 0, z = 0, X = 0, Z = 0, i, particles, particle, groundPyramid, gap, materialP,
        doubl = this.side * 2, newHeight = 1;
        this.particleArray = [];
        
        this.ground = new THREE.Object3D();
        this.ground.name = "groundPyramid";
        this.director.view.scene.add( this.ground );
        
        particles = new THREE.Geometry();
        materialP = new ELEMENTS.Material();
        materialP = materialP.particleM;
        
        // create the individual particles
        i = particleCount - 1; 
        for(i; i >= 0; i--){
            particle = new THREE.Vertex( new THREE.Vector3( 0,0,0 ));            
            particle.velocity = new THREE.Vector3( 0, -Math.random(), 0 );
            particles.vertices.push( particle );
        }
        
        this.generateComet();
        
        i = (this.groundSize * this.groundSize * 2) - 1;
        for ( i; i >= 0; i-- ){
            gap = this.director.randomNr( this.side, ( this.side - 10 ), true);		// -20
            
            //different height
            newHeight = this.director.randomNr( 3.4, 1, false);
            if( i % 4 === 0){
                newHeight = 2.5;
            }
            groundPyramid = this.generate( newHeight );
            groundPyramid.position.set( x, y, z );
            groundPyramid.rotation.y = this.director.randomNr( 5, 0, true );
            this.ground.add( groundPyramid );
            
            groundPyramid.fadeInObjFace = false;
            groundPyramid.fadeInObjLine = false;
            
            x -= ( 2 * gap );
  
            if( i === ( groundDimension - 1 ) ){
                x = X - gap;
                z = Z + gap;
            }
            if( ( i + 1 ) % this.groundSize === 0){
                if( i < ( groundDimension - 1 ) ){
                    x = X;
                    z -= gap * 2;
                }else{
                    x = X - gap;
                    z -= gap * 2;
                } 
            }
            if( i % 4 === 0 ){
                // create the particle system
                this.particleSystem = new THREE.ParticleSystem( particles, materialP );
                this.particleSystem.visible = false;
           
                //Variables
                groundPyramid.particleFountain = false;
                groundPyramid.add( this.particleSystem );
                
                this.particleSystem.sortParticles = true;
                this.particleArray.push( groundPyramid );
                this.particleSystem.position.y = this.side * newHeight - ( this.side / 2 ) - 10;
            }
        }//for
        z = Z;
        this.particleSystem.position.x = x;
        this.particleSystem.position.z = z;
        
        return this.ground;
    },

    generateComet: function(){
        var oneComet,  material,
        cameraTargetPos = this.director.view.cameraTarget.position;
        this.comets = new THREE.Object3D();
        this.comets.name = 'comets';
        this.comets.cometFly = false;
        this.comets.position.set( cameraTargetPos.x, cameraTargetPos.y, cameraTargetPos.z - 800 );
        
        for( var i = this.countComets; i >= 0; i -- ){
            material = new ELEMENTS.Material();
            material  = material.cometM;
            
            oneComet = new THREE.Mesh( new THREE.PlaneGeometry( 20, 20, 1, 1 ), material );
            oneComet.doubleSided = true;
            oneComet.position.set( this.director.randomNr( i * 40, i * 10, true ), this.director.randomNr( i * 30, i, true), this.director.randomNr( i * 40, i * 10, true ) );
            oneComet.name = "comet" + i;
            oneComet.visible = false;
            this.comets.add( oneComet );
        }
        this.director.view.scene.add( this.comets );
    },
    
    startComet: function(){
        var i, obj = this.director.world.obj.comets;
        if( obj.cometFly === false ){
            obj.cometFly = true;
            for( i = this.countComets; i >= 0; i-- ){
                obj.children[i].visible = true;
            }
            obj.startTime = this.director.lastTime;
        }
    },
    
    startFountain: function( count ){
        count = count || 0;
        var i = 1, rand, obj;
        while( count > 0 ){     // --> ev. umbauen
            rand = this.director.randomNr( (this.particleArray.length - 1), 0, true );
            obj = this.ground.children[ rand ];
            if( obj.particleFountain === false ){
                obj.children[2].visible = true;
                obj.particleFountain = true;
                count --;
            }
        }
    },
    
    startBlink: function(){
        if( this.lightW.blinkAnimation === false ){
            this.lightW.blinkAnimation = true;
        }
        if( this.lightY.blinkAnimation === false ){
            this.lightY.blinkAnimation = true;
        }
    },
    
    startZoom: function( count ){
        count = count || 0;
        var rand, groundCountPyramids = 2 * this.groundSize * this.groundSize;
        while(count > 0){
            rand = this.director.randomNr( (groundCountPyramids - 1), 0, true );
            if( this.ground.children[rand].zoomIn === false){
                this.ground.children[rand].zoomIn = true;
                count--;
            }
        }
    },
    
    fadeInObj: function( obj ){
        obj.fadeInObjFace = true;
        obj.fadeInObjLine = true;
    },
    
    fadeOutObj: function( obj ){     
        obj.children[1].geometry.materials[0].opacity = 0;
        obj.children[0].material.opacity = 0;
    },
    
    update: function(){
        var cameraTarget = this.director.view.cameraTarget,
        cameraTargetPos = cameraTarget.position,
        material, particle, i, j, obj, objParticles,
        distanceCamera = this.groundSize * this.side,
        groundWidth = 2 * this.groundSize * ( this.side - 18 ),
        objComets = this.director.world.obj.comets;
        
        // BLINKLICHTER
        if( this.lightW.blinkAnimation === true ){
            this.lightW.intensity += this.lightWfading;
        
            if( this.lightW.intensity >= this.lightWmax ){
                this.lightW.blinkAnimation = false;
                this.lightW.intensity = 0;
            }
        }
        if( this.lightY.blinkAnimation === true ){
            this.lightY.intensity += this.lightYfading;
        
            if( this.lightY.intensity >= this.lightYmax ){
                this.lightY.blinkAnimation = false;
                this.lightY.intensity = 0;
            }
        }

        // KOMETEN FLIEGEN
        if( objComets.cometFly === true ){ 
            var timeGoneCometFly = this.director.lastTime - objComets.startTime;
            var angle = - timeGoneCometFly * 0.002;
            
            if( this.delayCometIndex % 2 === 0){
                objComets.position.x = cameraTargetPos.x + Math.cos( angle ) * 600;
            }else{
                objComets.position.x = cameraTargetPos.x - Math.cos( angle ) * 600;
            }
            objComets.position.y = cameraTargetPos.y + 50  - Math.sin( angle ) * 200;
            objComets.position.z = cameraTargetPos.z;
            
            for( i = this.countComets; i >= 0; i-- ){
                objComets.children[i].position.y -= i;
            }
            
            if( timeGoneCometFly >= this.delayCometFly ){
                objComets.cometFly = false;
                objComets.position.set( cameraTargetPos.x, cameraTargetPos.y, cameraTargetPos.z-800 );
                for( i = this.countComets; i >= 0; i-- ){
                    objComets.children[i].visible = false;
                    objComets.children[i].position.set( this.director.randomNr( i * 40, i * 10, true), this.director.randomNr( i * 30, i, true ), this.director.randomNr( i * 40, i * 10, true ) );
                }
            }
            objComets.lookAt( this.director.view.camera.position );
        }
        
        // FONTAIN ANIMATION
        i = (this.groundSize * this.groundSize * 2) - 1 ;
        for( i; i >= 0; i-- ){
            obj = this.ground.children[i];
            objParticles = obj.children[2];
             
            if( obj.particleFountain === true ){
                objParticles.rotation.y += 0.05;
                
                for(j = this.pCount; j >= 0; j-- ){
                    particle = objParticles.geometry.vertices[j];
                                
                    // reset
                    if( particle.position.y > this.particleMaxHeight ) { 
                        particle.position.set( 0,0,0 );
                        particle.velocity.set( 0,0,0 );
                        if( j === 0 ){
                            obj.particleFountain = false;
                            objParticles.visible = false;
                        }                   
                    }			
                    // update 
                    particle.velocity.x += Math.random() * 4-2 | 0;
                    particle.velocity.z += Math.random() * 4-2 | 0;
                    particle.velocity.y += Math.random() * this.particleUp | 0;
                    particle.position.addSelf( particle.velocity );
                }
                objParticles.geometry.__dirtyVertices = true;
            }
            
            //Pulsieren
            var x, y, z, zoomStep = 1 + ( this.zoomMaxScale * 100 / this.zoomDuration );
            if( obj.zoomIn === true ){

                if( obj.scale.x * zoomStep < this.zoomMaxScale ){
                    x = obj.scale.x * zoomStep;
                    y = obj.scale.y * zoomStep;
                    z = obj.scale.z * zoomStep;
                    
                    obj.scale.set( x, y, z );
                }else{
                    obj.zoomIn = false;
                    obj.zoomOut = true;                  
                } 
            }
            //Verkleinern auf Originalgröße
            if( obj.zoomOut === true ){
                if( obj.scale.x / zoomStep >= 1 ){
                    x = obj.scale.x / zoomStep;
                    y = obj.scale.y / zoomStep;
                    z = obj.scale.z / zoomStep;
                    
                    obj.scale.set( x, y, z );
                }else{
                    obj.zoomOut = false; 
                } 
            }
        
            // Würfel neu positionieren in Abhängigkeit zur CameraTarget
            // X-Achse
            if(ELEMENTS.Config.bridge === false){
                if( obj.position.x + distanceCamera <= cameraTargetPos.x ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.x += groundWidth;
                
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                } else if( obj.position.x - distanceCamera >= cameraTargetPos.x ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.x -= groundWidth;
                
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                }
            
                //Z-Achse
                if( obj.position.z + distanceCamera <= cameraTargetPos.z ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.z += groundWidth;
                
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                } else if( obj.position.z - distanceCamera >= cameraTargetPos.z ){
                    this.fadeOutObj( obj );
                    this.reset( obj );
                    obj.position.z -= groundWidth;
                
                    if( obj.fadeInObjFace === false && obj.fadeInObjLine === false ){
                        this.fadeInObj( obj );
                    }
                }
            }
            
            //FadeIn: Faces
            if( obj.fadeInObjFace === true ){
                material = obj.children[1].geometry.materials;
                if( material[0].opacity < this.opacityFaceMax ){
                    material[0].opacity += this.opacityFaceMax / this.opacityDelay;
                    if( material[0].opacity >= this.opacityFaceMax ){
                        material[0].opacity = this.opacityFaceMax;
                        obj.fadeInObjFace = false;
                    //console.log('top');
                    }
                }
            }
            
            //FadeIn: Lines
            if( obj.fadeInObjLine === true ){
                material = obj.children[0].material;
                if( material.opacity < this.opacityLineMax ){
                    material.opacity += this.opacityLineMax / this.opacityDelay;
                    if( material.opacity >= this.opacityLineMax ){
                        material.opacity = this.opacityLineMax;
                        obj.fadeInObjLine = false;
                    }
                }    
            }
        }
    },
    
    reset: function( obj ){

    },
    
    firelights: function( ){
        this.lightR = new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xFF0000, 3), 0, 300, 0);
        this.lightR.name = 'lightR';
        
        this.lightW = new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xffcc33, 0.1), 0, 500, 3000);
        this.lightW.name = 'lightW';
        this.lightW.blinkAnimation = false;
        
        this.lightY = new ELEMENTS.Lights( this.director.view.cameraTarget, new THREE.PointLight(0xff6600, 0.1), -300, 300, 800);
        this.lightY.name = 'lightY';
        this.lightY.blinkAnimation = false;
    }
};


//______________________________________________________________________________
// DROP

ELEMENTS.Drop = function( director ) {
    ELEMENTS.Drop.instance = this,

    this.initialize( director );
};

ELEMENTS.Drop.prototype = {
    height: 1,
    amount: 60,
    emitterLength : 59,
    side: 25,
    allEmitter: 4, //Children Container E
    countEmitter: 3,
    opacityDelay : 15,
        
    initialize: function( director ) {
        this.director = director,
        this.x = 0,
        this.y = 0,
        this.z = 0,
        //amountPart = Anzahl der Linien eines Emitters
        this.amountPart1 = this.amount / 4, 
        this.amountPart2 = this.amount / 4 * 2, 
        this.amountPart3 = this.amount / 4 * 3;
        
        this.ground();
    },
    
    dropPoints: function(){
    
        var points = [
        [0.000001,12.456326,0.00000], [6.067627,4.408389,0.000000], [6.495191,3.750000,0.000000], [6.851591,3.050525,0.000000], [7.132924,2.317627,0.000000], [7.336107,1.559337,0.000000], [7.458914,0.783963,0.000000], [7.500000,0.000000,0.000000], [7.458914,-0.783963,0.000000],
        [7.336107,-1.559337,0.000000], [7.132924,-2.317627,0.000000], [6.851591,-3.050525,0.000000], [6.495191,-3.750000,0.000000], [6.067627,-4.408389,0.000000], [5.573586,-5.018479,0.000000], [5.018480,-5.573586,0.000000], [4.408389,-6.067627,0.000000], [3.750000,-6.495191,0.000000],
        [3.050525,-6.851591,0.000000], [2.317627,-7.132924,0.000000], [1.559338,-7.336107,0.000000], [0.783964,-7.458914,0.000000], [-0.783964,-7.458914,0.000000],

        [0.783964,-7.458914,0.000000], [-0.783964,-7.458914,0.000000], [-1.559338,-7.336107,0.000000], [-2.317627,-7.132924,0.000000], [-3.050525,-6.851591,0.000000], [-3.750000,-6.495191,0.000000], [-4.408389,-6.067627,0.000000], [-5.018480,-5.573586,0.000000], [-5.573586,-5.018479,0.000000], 
        [-6.067627,-4.408389,0.000000], [-6.495191,-3.750000,0.000000], [-6.851591,-3.050525,0.000000], [-7.132924,-2.317627,0.000000], [-7.336107,-1.559337,0.000000], [-7.458914,-0.783963,0.000000], [-7.500000,0.000000,0.000000], [-7.458914,0.783963,0.000000], [-7.336107,1.559337,0.000000],
        [-7.132924,2.317627,0.000000], [-6.851591,3.050525,0.000000], [-6.495191,3.750000,0.000000], [-6.067627,4.408389,0.000000], [-0.000001,12.456326,0.00000], [-0.000001,12.456326,0.00000] 
        ],            

        vec_s = [];
        
        for(var i = 0; i < points.length; i++ ){
            vec_s.push( new THREE.Vector3( points[i][0], points[i][1], points[i][2]) ); 
        }
        return vec_s;
    },
        
    generate: function( ) {             //DROP
        
        var oneDrop = new THREE.Object3D();
        oneDrop.position.set( this.x, this.y, this.z );
        oneDrop.scale.set( this.height, this.height, this.height );
        oneDrop.doubleSided = true;
        var i;
        // LINES
        var points = ELEMENTS.Drop.prototype.dropPoints();           
        var drop_frame = new THREE.Geometry();
        
        for( i = 0; i < points.length; i++ ) {
            drop_frame.vertices[ i ] = new THREE.Vertex( points[i] );
        }
        var material  = new ELEMENTS.Material();
        material = material.lineM2;    
        material.color = ELEMENTS.Color.blue;
        
        for( i = 0; i < 5; i++ ){
            var dropLine = new THREE.Line( drop_frame,  material );
            dropLine.rotation.y = i * 72 * deg2rad;
            dropLine.name = 'line';
            oneDrop.add( dropLine );
        }
        
        return oneDrop;
    }, 
    
    ground: function(){
        console.log('ground');
            
        var cameraTargetPos = this.director.view.cameraTarget.position;
        this.ground = new THREE.Object3D();
        this.ground.name = 'groundDrop';
        this.director.view.scene.add( this.ground );
        for(var i = this.countEmitter; i >= 0; i-- ){
            
            this.emitter = new THREE.Object3D();
            this.emitter.name = 'emitter'+i;
            
            this.emitter.position.set( cameraTargetPos.x, cameraTargetPos.y, cameraTargetPos.z+1000);

            this.emitter.animate = false;
            this.emitter.blink = false;
            this.emitter.animateColor = false;
            this.emitter.fadeIn = false;
            this.emitter.fadeOut = false;
            this.ground.add( this.emitter );
        
            if(i===2){
                this.createDrops(1);
                this.emitter.helix = false;
                this.emitter.animateDrops = false;
                this.emitter.useQuaternion=true;
            }else{
                this.createDrops(0);
                this.emitter.animateDrops = false;
            }
        }
    },
    
    createDrops: function(nr){
        var object, object2, object3, parent = this.emitter;
        var half = this.side / 2;
        var doubl = this.side * 2;
        var gruppe;
        var sort = nr | 0;
        
        for ( var i = this.amount - 1; i >= 0; i-- ) {
            gruppe = new THREE.Object3D();
            object = this.generate();
            object.name = 'drop';
            object.doubleSided = true;
            gruppe.useQuaternion = true;
            object2 = THREE.SceneUtils.cloneObject( object );
            object3 = THREE.SceneUtils.cloneObject( object );
            if(sort === 0){
                if( i < this.amount && i >= this.amountPart3 ){
                    gruppe.position.x = this.side;
                    gruppe.position.z = doubl;
                
                    object2.position.y = this.side;
                    object3.position.y = half;
                    object3.position.z = doubl;
                
                }else if( i < this.amountPart3 && i >= this.amountPart2 ){
                    gruppe.position.x = - this.side;
                    gruppe.position.z = doubl;
                
                    object2.position.y = this.side;
                    object3.position.y = half;
                    object3.position.z = doubl;
                
                }else if( i < this.amountPart2 && i >= this.amountPart1 ){
                    gruppe.position.y = this.side;
                    gruppe.position.z = doubl;
                
                    object2.position.x = this.side;
                    object3.position.x = half;
                    object3.position.z = doubl;
                
                }else if( i < this.amountPart1 && i >= 0 ){
                    gruppe.position.y = - this.side;
                    gruppe.position.z = doubl;
                
                    object2.position.x = this.side;
                    object3.position.x = half;
                    object3.position.z = doubl;
                }
                gruppe.add( object );
                gruppe.add( object2 );
                gruppe.add( object3 );
                parent.add( gruppe );   
            
            
                if( i % this.amountPart1 === 0 ){
                    parent = this.emitter;
                }else{
                    parent = gruppe;
                }
            }else{
                gruppe.position.x = doubl;
                gruppe.position.z = this.side;
                
                object2.position.y = this.side;
                object3.position.y = half;
                object3.position.z = doubl;
                
                gruppe.add( object );
                gruppe.add( object2 );
                gruppe.add( object3 );
                parent.add( gruppe ); 
                parent = gruppe;
            }
        }     
    },
    
    animateEmitter: function( nr ){
        var num = nr || 0,
        i = 1;
        while( i > 0 ){
            var rand = this.director.randomNr( this.allEmitter, 0, true );
            if(this.eIndex[rand]===1){
                var obj = this.director.world.obj.ground.children[ rand ];
                if( obj.animate === false && obj.blink === false){
                    obj.animate = true;
                    obj.time = new Date().getTime();
                    obj.sort = num;
                    i = 0;
                }
            }
        }
    },
    
    emitterBlink: function(){
        var i=1;
        while( i > 0 ){
            var rand = this.director.randomNr( this.allEmitter, 0, true );
            if(this.eIndex[rand]===1){
                var obj = this.director.world.obj.ground.children[ rand ];
                if( obj.blink === false && obj.animate === false){
                    THREE.SceneUtils.showHierarchy( obj, false );
                    obj.blink = true;
                    obj.blinkTime = this.director.lastTime;
                    i = 0;
                }
            }
        }
    },
    
    fadeOutEmitter: function(){
        var i = this.director.world.obj.ground.children.length - 1;
        for( i; i >= 0; i-- ){
            var obj = this.director.world.obj.ground.children[i];
            THREE.SceneUtils.showHierarchy( obj, false );
        }
    },
    
    fadeInEmitter: function(){
        var i = this.director.world.obj.ground.children.length - 1;
        for( i; i >= 0; i-- ){
            var obj = this.director.world.obj.ground.children[i];
            THREE.SceneUtils.showHierarchy( obj, true );
        }
    },
    
    animateColor: function(){
        var obj = this.director.world.obj.ground.children[0];
        if( obj.animateColor === false ){
            obj.animateColor = true;
            obj.color = this.minColor;
        }
    },
    
    stopAnimateColor:function(){
        var obj = this.director.world.obj.ground.children[0];
        obj.animateColor = false;
        obj.children[0].getChildByName('drop').getChildByName('line').material.color.setHex('0x33b6f2');
    },
    
    animateDrops: function(){
        for( var i = this.countEmitter; i >= 0; i--){
            if(this.eIndex[i]===1){
                var obj = this.director.world.obj.ground.children[i];
                if( obj.animateDrops === false ){
                    obj.animateDrops = true;
                }
            }
        }
  
    },
    stopAnimateDrops: function(){
        for( var i = this.countEmitter; i >= 0; i--){
            var obj = this.director.world.obj.ground.children[i];
            if( obj.animateDrops === true ){
                obj.animateDrops = false;
            }
        }
    },
    

    helix: function(){
        var obj = this.director.world.obj.ground.children[1];
        if(obj.helix === false){
            obj.helix = true;
        }
    },
    
    stopHelix: function(){
        var obj = this.director.world.obj.ground.children[1];
        if(obj.helix === true){
            obj.helix = false;
        }
    },
    
    fadeInObj: function( obj ){
        obj.fadeInDrop = true;
    },
    
    fadeOutObj: function( obj ){     
        obj.fadeOutDrop = true;
    },
    
    newPosEmitter: function(  e, dx, dy, dz ){
        var distanceX=dx, distanceY = dy, distanceZ=dz, emitter = e;
            emitter.position.z = this.cameraTargetPos.z - distanceZ;
            emitter.position.x = this.cameraTargetPos.x + distanceX;
            emitter.position.y = this.cameraTargetPos.y + distanceY;
    },
    
    update: function(){
        this.cameraTarget = this.director.view.cameraTarget;
        this.cameraTargetPos = this.cameraTarget.position;
        
        var time = this.director.lastTime * 0.01,
        rotAngle = this.director.lastTime  * 0.0005,//helix drehen
        i,j, rz, objEmitter;
        
        //Position Emitter
        if(ELEMENTS.Config.bridge === false){
           
            //emitter 0 - Container
            if(this.eIndex[3] === 1){
                objEmitter = this.director.world.obj.ground.children[3];

                if( objEmitter.position.z >= this.cameraTargetPos.z + this.ePos[15] ){
                    this.newPosEmitter( objEmitter, this.ePos[12], this.ePos[13], this.ePos[14] );
                }
            }else if(this.eIndex[3] === 0){
                objEmitter = this.director.world.obj.ground.children[3];
            }
                
            //emitter 1 - Container
            if(this.eIndex[2]===1){
                objEmitter = this.director.world.obj.ground.children[2];
                    
                if(objEmitter.position.z >= this.cameraTargetPos.z + this.ePos[11] ){
                    this.newPosEmitter( objEmitter, this.ePos[8], this.ePos[9], this.ePos[10] );
                }
            }else if(this.eIndex[2] === 0){
                objEmitter = this.director.world.obj.ground.children[2];

            }
                
            //emitter 2 - Helix
            if(this.eIndex[1]===1){
                objEmitter = this.director.world.obj.ground.children[1]; 
                    
                if(objEmitter.position.z >= this.cameraTargetPos.z + this.ePos[7] ){
                    this.newPosEmitter( objEmitter, this.ePos[4], this.ePos[5], this.ePos[6] );
                }
            }
                
            //emitter 3 - Hierarchy - unten
            if(this.eIndex[0]===1){
                objEmitter = this.director.world.obj.ground.children[0];
                if(objEmitter.position.z >= this.cameraTargetPos.z + this.ePos[3] ){
                    this.newPosEmitter( objEmitter, this.ePos[0], this.ePos[1], this.ePos[2] );
                }
            }
            objEmitter.lookAt( this.cameraTargetPos );
        }
            
        for( i = this.countEmitter; i >= 0; i-- ){
            this.objEmitter = this.director.world.obj.ground.children[i];

            //Animate Color
            if( this.objEmitter.animateColor === true ){
                this.objEmitter.children[0].getChildByName('drop').getChildByName('line').material.color.setHSV( this.objEmitter.color, 1, 1 );
                if( this.objEmitter.color < this.maxColor ){
                    this.objEmitter.color += (this.maxColor-this.minColor) / this.colorPerFrame * this.director.framesBetween; 
                }else{
                    this.objEmitter.color = this.minColor;
                } 
            }
            
            //Blink Emitter
            if( this.objEmitter.blink === true ){
                var timeGone = this.director.lastTime - this.objEmitter.blinkTime;
                if( timeGone >= this.endBlink ){
                    this.objEmitter.blink = false;
                    THREE.SceneUtils.showHierarchy( this.objEmitter, true );
                }
            }
            
              if( this.objEmitter.animate === true ){
                var delayEmitter;
                var timeGoneEmitter = this.director.lastTime - this.objEmitter.time;
                if( this.objEmitter.sort === 1 ){
                    //Emitter rotieren
                    this.objEmitter.rotation.z = time * this.emitterRotSpeed;
                    delayEmitter = this.endEmitter1;
                }else if( this.objEmitter.sort === 2 ){
                    //Emitter vibrieren
                    var ang = Math.random() * this.emitterRotSpeed;
                    rz = Math.sin( ang );
                    this.objEmitter.rotation.z = rz;
                    delayEmitter = this.endEmitter2;
                }else{
                    //Emitter vor/zurück
                    rz = Math.sin( time * this.emitterRotSpeed ) * 1.5;
                    this.objEmitter.rotation.z = rz;
                    delayEmitter = this.endEmitter0;
                }
                
                if( timeGoneEmitter >= delayEmitter ){
                    this.objEmitter.animate = false;
                }
            }
            
            //Helix
            if( this.objEmitter.helix === true ){
                var emitter = this.objEmitter;
                THREE.SceneUtils.traverseHierarchy( emitter, function ( obj ) {
                    var q = new THREE.Quaternion();
                    q.setFromEuler( new THREE.Vector3( 1,1,15 ) );
                    obj.quaternion.copy( q );
                    obj.updateMatrix();
                });
            }
        
            //animate Drops - Tropfenbewegung
            if( this.objEmitter.animateDrops === true ){
                rz = Math.sin( time * this.dropsTime ) * 0.2;
                THREE.SceneUtils.traverseHierarchy( this.objEmitter, function ( object ) {
                    object.quaternion.x = rz;
                    object.quaternion.y = rz;
                    object.quaternion.z = rz;
                } );
            }
        }//for- Emitter
    }//update
};


//______________________________________________________________________________
//INIT

// Rechtsklick/ Kontextmenü sperren
//document.onselectstart = function() {  return false; }; // ie
//document.onmousedown = function() {  return false; }; // mozilla

function bind( scope, fn, arguments ) {

    return function() {

        fn.apply( scope, arguments );
    };
}

// _______________________________________________________________________________________ Constructor
// START 

window.onload = function() {
    this.elements = new ELEMENTS.Elements();
}


ELEMENTS.Elements = function() {
            
    ELEMENTS.Elements.instance = this,
    this.initialize();
};

ELEMENTS.Elements.prototype = {
    
    initialize: function() {
        document.getElementById('load').style.visibility = 'visible';

        var browserInfo = navigator.userAgent;
        if(browserInfo.indexOf("Chrome") < 0){      
            var text = ('Bitte verwenden Sie Google Chrome!');

            var click = document.getElementById('click');
            click.getElementsByTagName('p')[0].innerHTML = text;
            click.style.visibility = 'visible';
            document.getElementById('load').style.visibility = 'hidden';
        }else{
            if( Detector.webgl ) {
                this.musicManager = new ELEMENTS.MusicManager();
                this.renderManager = new ELEMENTS.RenderManager();
                this.input = new ELEMENTS.Input();
                this.view = new ELEMENTS.View( this.renderManager );

                this.director = new ELEMENTS.Director ( this.view, this.musicManager );

                this.animateElements();
            }
            else {
                Detector.addGetWebGLMessage();
            }
        }
    }, 
   
    animateElements: function(){
        requestAnimationFrame ( bind( this, this.animateElements ) );

        if( ELEMENTS.Config.thisWorld !== 0 && ELEMENTS.render === true){
            this.view.clear();
            this.director.update();
            this.view.update(); 
        }
    }
};

// _______________________________________________________________________________________ 
// MusicManger
ELEMENTS.MusicManager = function(  ){
    ELEMENTS.MusicManager.instance = this,
    this.initialize( );
};

// 
ELEMENTS.MusicManager.prototype = {
   
    initialize: function(){
        this.audio = new Audio();
        this.audio.volume = ELEMENTS.Config.volume;
        this.audio.setAttribute( 'preload', 'auto' );
        this.audio.setAttribute( 'autoplay', 'false');

        if( this.audio.canPlayType ) {     
            if( this.audio.canPlayType( 'audio/mpeg' != '') ){
                this.fileType = '.mp3';
            }else if( this.audio.canPlayType( 'audio/ogg; codecs="vorbis"')  != '' ){
                this.fileType = '.ogg';
            }            
        }
        this.canPlayThroughListener = bind( this, this.musicLoaded );
        this.audio.addEventListener('canplaythrough', this.canPlayThroughListener , true); 
    }, 
    
    loadMusic: function( callback ){
        this.callback = callback;

        //ELEMENTS.Music enthält richtige Welt und track
        var musicSrc = ELEMENTS.Music.srcPath + this.fileType;
        if( musicSrc !== null ){
            this.audio.setAttribute( 'src', musicSrc );
        } else{
            console.error( "Error: loadMusic" ); 
        }   
    },
    
    musicLoaded: function(){
        var active, soundLinks = document.getElementById('soundMenu').getElementsByTagName('li');
        for( var i = soundLinks.length - 1; i >= 0; i--){
            var soundID = soundLinks[i].id | 0;
            if( ELEMENTS.Config.thisWorld === 1 ){
                active = 'activeF';
            }else if( ELEMENTS.Config.thisWorld === 2 ){
                active = 'activeW';
            }else if( ELEMENTS.Config.thisWorld === 3 ){
                active = 'activeE';
            }
            if( soundID === ELEMENTS.Config.trackNr){
                soundLinks[i].setAttribute('class', active);
            }else{
                soundLinks[i].setAttribute('class', '');
            }
        }
        this.audio.removeEventListener('canplaythrough', this.canPlayThroughListener, false);
        this.callback();
    } 
}


// _______________________________________________________________________________________ Constructor
// Render Manager

ELEMENTS.RenderManager = function() {

    this.initialize();
};

ELEMENTS.RenderManager.prototype = {

    initialize: function() {
        //console.log('RenderManager: init');

        var container = document.createElement( 'div' );
        container.setAttribute('id', 'container');
        container.setAttribute('class', 'hide');
        document.body.appendChild( container );
		
        var bridgeMenu = document.body.removeChild( document.getElementById('bridgeMenu'));
        document.body.appendChild( bridgeMenu );

        var _canvas = document.createElement( 'canvas' );

        var error = '<p id="error">';
        var retrieveError = function(e) {
            error = e.statusMessage || "unknown error";
        };

        _canvas.addEventListener("webglcontextcreationerror", retrieveError, false);
        
        var contextNames = ["webgl","experimental-webgl","moz-webgl","webkit-3d"];
        for(var i = 0; i < contextNames.length; i++){
            try{
                var ctx = _canvas.getContext(contextNames[i]);
                if(ctx){
                    break;
                }
            }catch(e){
                error += ("<br />Unfortunately, there's a WebGL compatibility problem. </br> You may want to check your system settings.");
                return;
            }
            if(ctx === undefined) {
                error += ("<br />Unfortunately, there's a WebGL compatibility problem.  </br>You may want to check your system settings.");
                return;
            }
        }
        error += '</p>';
        
        _canvas.removeEventListener("webglcontextcreationerror", retrieveError, false);

        if( ctx ) {	
            var renderer = new THREE.WebGLRenderer( {
                canvas: _canvas, 
                clearColor: 0x000000, 
                clearAlpha: 1, 
                antialias: false
            } );
            renderer.setSize( window.innerWidth, window.innerHeight );
            renderer.autoClear = false;
            container.appendChild( renderer.domElement );
            this.renderer = renderer;
        } else {
            // !!!!!!
            // p zu DOM hinzufügen
            alert("WebGL error: " + error);
        }
    }
};


// _______________________________________________________________________________________ Constructor
// View

ELEMENTS.View = function( renderManager ) {
    this.initialize( renderManager );
};

ELEMENTS.View.prototype = {

    initialize: function( renderManager ) {
        console.log('View: init');

        this.renderManager = renderManager;
        this.renderer = renderManager.renderer;
        this.scene = new THREE.Scene();
                
        this.cameraTarget = new THREE.Object3D();
//        this.cameraTarget = new THREE.AxisHelper();
//        this.cameraTarget.scale.set( 0.2, 0.2, 0.2 );
        this.cameraTarget.position.set( 600, 150, -1400 );
        this.cameraTarget.name = "cameraTarget";
        this.scene.add(this.cameraTarget);

        this.camera = new THREE.PerspectiveCamera( 33, window.innerWidth / window.innerHeight, 1, 10000 ); 
        this.camera.position.set( 600, 200, -600 );
        this.camera.name = "camera";
        this.scene.add(this.camera);
        
        // Effekte
        var renderModel = new THREE.RenderPass( this.scene, this.camera );
        var effectBloom = new THREE.BloomPass( ELEMENTS.Config.bloom );

        var effectScreen = new THREE.ShaderPass( THREE.ShaderExtras[ "screen" ] );
        var effectFXAA = new THREE.ShaderPass( THREE.ShaderExtras[ "fxaa" ] );
        effectFXAA.uniforms[ 'resolution' ].value.set( 1 / window.innerWidth, 1 / window.innerHeight );
        effectScreen.renderToScreen = true;

        this.composer = new THREE.EffectComposer( this.renderer );
        this.composer.addPass( renderModel );
        this.composer.addPass( effectFXAA );
        this.composer.addPass( effectBloom );
        this.composer.addPass( effectScreen );
        //ende effekte
        
//        //STATS
//        var container = document.getElementById( 'container' );
//        this.stats = new Stats();
//        this.stats.domElement.style.position = 'absolute';
//        this.stats.domElement.style.top = '0px';
//        this.stats.domElement.style.right = '0px';
//        container.appendChild( this.stats.domElement );
    },
    
    clear: function(){
        this.renderer.clear();  
    },
    
    start: function() {
        window.addEventListener( 'resize', bind( this, this.onWindowResize ), false );
        this.onWindowResize();
    },

    stop: function() {
        window.removeEventListener( 'resize', bind( this, this.onWindowResize ), false );
    },

    update: function(){
        this.composer.render( this.scene, this.camera );
//        this.stats.update();
    },
    
    onWindowResize: function() {
        this.renderer.setSize( window.innerWidth, window.innerHeight );
        this.camera.aspect = window.innerWidth / window.innerHeight;
    }
};



// _______________________________________________________________________________________ Constructor
// Director
ELEMENTS.Director = function( view, musicManager ){
    this.initialize( view, musicManager );
};

ELEMENTS.Director.prototype = {

    
    initialize: function( view, musicManager ){
        this.domElement = document;
        this.view = view;
        this.musicManager = musicManager;
        this.musicManager.audio.addEventListener('ended',bind(this,this.audioEnded) , false);
	
        ELEMENTS.render = false;                   
        
        this.player = new ELEMENTS.Player( this );
        this.gate = new ELEMENTS.Gate( this );
        this.world = new ELEMENTS.WorldManager( this, bind(this,this.initialised) );
        
        //Noise Mouseover
        this.noise = new Audio();
        this.noise.volume = ELEMENTS.Config.volume;
        var musicSrc = ELEMENTS.Config.mouseHoverNoise + this.musicManager.fileType;
        this.noise.setAttribute( 'preload', 'auto' );
        this.noise.setAttribute( 'src', musicSrc );
        
        this.mouseEvent( 'bridgeMenu', 'div', this.startBridge, 0 );
        this.mouseEvent( 'bridgeMenu', 'div', this.playNoise, 1);
        this.mouseEvent( 'soundMenu', 'li', this.changeMusic, 0 );
        this.mouseEvent( 'soundMenu', 'li', this.playNoise, 1);
        this.mouseEvent( 'worldMenu', 'li', this.changeWorld, 0 );
        this.mouseEvent( 'worldMenu', 'div', this.playNoise, 1);
        
        var homeButton = this.domElement.getElementById('worldMenu').getElementsByTagName('li')[0];
        homeButton.addEventListener('mousedown', bind(this, this.goToHome ), false );
    }, 

    mouseEvent: function( id, child, func, sort ){
        var el = this.domElement.getElementById( id ).getElementsByTagName( child );
        var i = el.length - 1;
        for( i; i >= 0; i--){
            if(sort === 0){
                el[i].addEventListener( 'mouseup', bind( this, func ), false );
                el[i].style.cursor='pointer';
            }else{
                el[i].addEventListener( 'mouseover', bind( this, func ), false );    
            }
        }
    },
    
    initialised: function(){
        this.mouseEvent( 'enterMenu', 'img', this.changeWorld, 0 );
        this.domElement.getElementById('load').style.visibility = "hidden";
        if( !this.domElement.getElementById('oldie') ){
            this.domElement.getElementById('click').style.visibility = "visible";
        }
},
    
    playNoise: function (){
        this.noise.play();
    }, 
    
    randomNr: function( max, min, round ){
        max = max || 1;
        min = min || 0;
        round = round || false;
        
        var rand = Math.random() * ( max - min ) + min;
        if(round === true){
            rand = rand | 0;
        }
        return rand;
    },
    
    display: function(  ){
        var css, el, i = arguments.length - 1;
        for(i; i >= 0; i-- ){
            el = this.domElement.getElementById( arguments[i] );
            if(  el.getAttribute('class') === 'show' ){
                el.setAttribute('class', 'hide' ); 
            }else if( el.getAttribute('class') === 'hide' ){
                el.setAttribute('class', 'show' ); 
            }
        }  
    },
    
    setMusicData: function( world ){
        if( world === 1 ){
            ELEMENTS.Music = ELEMENTS.FireMusic[ ELEMENTS.Config.trackNr ];    
        }else if( world === 2 ){
            ELEMENTS.Music = ELEMENTS.WaterMusic[ ELEMENTS.Config.trackNr ];    
        }else if( world === 3 ){
            ELEMENTS.Music = ELEMENTS.EarthMusic[ ELEMENTS.Config.trackNr ];
        }
    },
    
    changeWorld: function( event ){
        if(ELEMENTS.Config.load === false){
            this.display('loading');
            ELEMENTS.Config.load = true;

            ELEMENTS.Config.useLoading = true;
            ELEMENTS.Config.nextWorld = event.currentTarget.getAttribute('class') | 0;

            // Random Song beginnt 
            if(ELEMENTS.Config.thisWorld === 0){
                var zufall = this.randomNr( 3, 0, true);
                ELEMENTS.Config.trackNr = zufall;
            }

            if( ELEMENTS.Config.thisWorld !== 0  && ELEMENTS.Config.nextWorld !== ELEMENTS.Config.thisWorld ){
                fadeEffect.init('bridgeMenu', 0);
                ELEMENTS.Config.showBridge = false;
                this.world.deleteWorld();
            }else{
                this.domElement.getElementsByTagName('body')[0].style.overflow = 'hidden';  
            }
            if( ELEMENTS.Config.nextWorld !== ELEMENTS.Config.thisWorld ){
                this.load();
            }else{
                // restart in selber Welt
                this.start();
            }
        }
    },
    
    changeMusic: function( event ){
        this.display('loading');
        if(this.domElement.getElementById('bridgeMenu').getAttribute('class') === 'show'){
            this.display('bridgeMenu');
        }
        ELEMENTS.Config.useLoading = true;
        ELEMENTS.Config.trackNr = event.currentTarget.id | 0;    //wird als Number behandelt
        this.setMusicData( ELEMENTS.Config.thisWorld );
        this.player.speed = ELEMENTS.Music.speed;
        this.world.setDelays();
        if(ELEMENTS.Config.nextWorld !== 2){
            var i = this.world.obj.ground.children.length - 1;
            for( i; i >= 0; i-- ){
                this.world.obj.fadeOutObj( this.world.obj.ground.children[i] );
            }
        }else{
           this.world.obj.fadeOutEmitter();
           var emitter = this.world.obj.ground.children;
           for(i = emitter.length-1; i >= 0; i--){
               this.world.obj.newPosEmitter( emitter[i], this.world.obj.ePos[ i*4 ], this.world.obj.ePos[ i*4 + 1 ], -this.world.obj.ePos[ i*4 + 2 ]);
           }
        }
        this.musicManager.loadMusic( bind( this, this.start) );
    }, 
    
    goToHome: function(){
        ELEMENTS.Config.useLoading = true;

        this.stop();
        this.world.deleteWorld( );
        this.view.clear();

        ELEMENTS.Config.nextWorld = this.world.worldNr =
        ELEMENTS.Config.thisWorld = 0;
        this.display( 'container', 'soundMenu', 'worldMenu', 'infoMenu', 'enterMenu' );
        ELEMENTS.Config.showBridge = false;
        fadeEffect.init('bridgeMenu', 0);
        this.domElement.getElementsByTagName('body')[0].style.overflow = 'auto'; 
    },
    
    launch: function(){
        this.musicManager.loadMusic( bind( this, this.start) );
        
        this.gate.delayBridge = ELEMENTS.Music.delayBridge;
        this.gate.delayBridgeIndex = 0;
        ELEMENTS.Config.bridge = false;
        
        this.world.setDelays();

        this.player.speed = ELEMENTS.Music.speed;
    },
    
    load: function(){
        if( ELEMENTS.Config.nextWorld !== 0 ){
            this.setMusicData( ELEMENTS.Config.nextWorld );

            if( ELEMENTS.Config.thisWorld === 0 ){
                this.display( 'infoMenu', 'enterMenu', 'container', 'soundMenu', 'worldMenu');
                this.view.start();   
            }

            // Welt wird nur geladen, wenn nötig (nicht bei Sond-Wechsel)
            if( ELEMENTS.Config.nextWorld !== ELEMENTS.Config.thisWorld){
                this.world.createWorld( bind( this, this.launch ) ); 
            }else{
                this.launch();
            }
        }
        ELEMENTS.Config.thisWorld = this.world.worldNr;
    },
    
    audioEnded:function( event ){
        this.display( 'soundMenu', 'worldMenu' );
        fadeEffect.init('bridgeMenu', 0);
        ELEMENTS.Config.showBridge = false;
        
        ELEMENTS.Config.nextWorld++;
        if(ELEMENTS.Config.nextWorld>3){
            ELEMENTS.Config.nextWorld=1;
        }
        this.gate.create();
    },
    
    startBridge: function( event ){
        this.display( 'soundMenu', 'worldMenu');
        ELEMENTS.Config.showBridge = false;
        fadeEffect.init('bridgeMenu', 0);
        ELEMENTS.Config.nextWorld = event.currentTarget.getAttribute('class') | 0;
        this.gate.create();
    },
        
    start: function(){
        if( ELEMENTS.Config.load === true){ ELEMENTS.Config.load = false; }
        
        if(ELEMENTS.Config.useLoading === true){
            this.display('loading');
            ELEMENTS.Config.useLoading = false;
        }
        this.music = this.musicManager.audio;
        this.music.volume = 1;
        this.frame = this.framesBetween = 0;
        
        if(ELEMENTS.Config.thisWorld === 2){
              this.player.angleNow = 270 * deg2rad;
        }
            
        this.lastTime = new Date().getTime();
        this.music.currentTime =  ELEMENTS.time = ELEMENTS.Music.startTime;
        ELEMENTS.render = true;
        ELEMENTS.deltaTime = 0;
        this.phase = 0;
        
        this.music.play();
        
        if(ELEMENTS.Config.nextWorld !== 2){
            var i = this.world.obj.ground.children.length - 1;
            for( i; i >= 0; i-- ){
                this.world.obj.fadeInObj( this.world.obj.ground.children[i] );
            }
        }else{
            this.world.obj.fadeInEmitter();
        }
    },
    
    stop: function(){
        this.view.stop();
        this.music.pause();
    },

    //Director
    update: function(){ 
        // Berechnen, wie viel Zeit zwischen 2x rendern vergangen ist
        var time = new Date().getTime();    // ms (wann wird aktuelle update aufgerufen)

        ELEMENTS.deltaTime = ( time - this.lastTime ) / 1000;
        ELEMENTS.time = this.music.currentTime;
        
        this.frame = ELEMENTS.time * 60 | 0;
        this.framesBetween  = this.frame - this.lastFrame;
        this.timeGone = ELEMENTS.deltaTime * 60;
        
        if( this.phase < ELEMENTS.Music.phase.length && (ELEMENTS.time + this.framesBetween / 120 ) > ELEMENTS.Music.phase[ this.phase ]  ){
            this.phase ++;
        }

        this.lastTime = time;
        this.lastFrame = this.frame;

        this.player.update();
        this.world.update();
        this.gate.update();
    }
}


// _______________________________________________________________________________________ Constructor
// Gate

ELEMENTS.Gate = function( director ){
    this.initialize( director );
};

ELEMENTS.Gate.prototype = {
    side: 800,
    distance: 6000,
        
    delayShowBridge: 10,      //ms --> neu in sekunden
    delayBridge: [],
    
    initialize: function( director ){
//        console.log('Gate: init');
		
        this.director = director;
        
        this.oneGate = new THREE.Object3D();
        this.oneGate.name = "gate";
        this.oneGate.animateGate = false;
        this.director.view.scene.add( this.oneGate );
        
        this.audioEffect = new Audio();
        this.audioEffect.volume = ELEMENTS.Config.volume;
        var musicSrc = ELEMENTS.Config.bridgeSoundEffect + this.director.musicManager.fileType;
        this.audioEffect.setAttribute( 'preload', 'auto' );
        this.audioEffect.setAttribute( 'src', musicSrc );
        
        this.delayBridgeIndex = 0;

    },
	
    create: function(){
        console.log('Gate: create');
        var cameraPos = this.director.view.camera.position,
        cameraTargetPos = this.director.view.cameraTarget.position,
        player = this.director.player;
        this.bridgeStartCameraPos = new THREE.Vector3 (cameraPos.x, cameraPos.y, cameraPos.z );
        this.bridgeStartCameraTargetPos = new THREE.Vector3 (cameraTargetPos.x, cameraTargetPos.y, cameraTargetPos.z );

        ELEMENTS.Config.bridge = true;
        ELEMENTS.Config.showBridge = false;
        
        var i, points, line, hsv, scale, halfHeight, farbe = 0, colors = [],
        geometry = new THREE.Geometry(),
        material = new ELEMENTS.Material();
        material = material.lineM2;
        material.vertexColors = true;
        
        if( ELEMENTS.Config.nextWorld === 1){
            // Feuer
            points = this.pgatePoints( new THREE.Vector3(0, 0, 0));  
            hsv = 0;
            this.oneGate.position.y = cameraTargetPos.y - ( this.side / Math.sqrt( 3 ) / 4);
            scale = 1;
        }else if(ELEMENTS.Config.nextWorld === 2){
            // Wasser
            points = ELEMENTS.Drop.prototype.dropPoints();  
            hsv = 0.55
            scale = 25;
            this.oneGate.position.y = cameraTargetPos.y - 100;
            
            
        }else if(ELEMENTS.Config.nextWorld === 3){
            // Erde
            points = this.cgatePoints( new THREE.Vector3(0, 0, 0));  
            hsv = 0.12;
            this.oneGate.position.y = cameraTargetPos.y - (this.side/4);
            scale = 1;
        }
        for ( i = points.length-1; i >= 0; i -- ) {
            geometry.vertices.push( new THREE.Vertex( points[ i ] ) );
            colors[ i ] = new THREE.Color( 0xffffff );
            colors[ i ].setHSV( hsv+farbe / points.length,1,1);
            farbe += 0.08;
        }
        geometry.colors = colors;
        this.oneGate.scale.set( scale,scale,1 );
        
        for( i = 9; i >= 0; i-- ){
            line = new THREE.Line( geometry,  material );		
            line.position.y = i;
            line.name = 'line'+i;
            this.oneGate.add(line);
        }
        this.oneGate.animateGate = true;
        this.oneGate.position.x = this.bridgeStartCameraPos.x + Math.cos( player.angleNow ) * this.distance;
        this.oneGate.position.z = this.bridgeStartCameraPos.z + Math.sin( player.angleNow ) * this.distance;
        
        this.audioEffect.play();      // Effektgeräusch
    },
    
    cgatePoints: function(center){
        var half = this.side/2,
        points = [
        new THREE.Vector3( center.x+half, center.y-half , center.z ),
        new THREE.Vector3( center.x+half, center.y+half , center.z ),
        new THREE.Vector3( center.x-half, center.y+half , center.z ),
        new THREE.Vector3( center.x-half, center.y-half , center.z ),
        new THREE.Vector3( center.x+half, center.y-half , center.z ),
        ];
        return points;
    },
    
    pgatePoints: function(center){
        var half = this.side / 2,
        points = [
        new THREE.Vector3( center.x+half, center.y-(Math.sqrt(3)/6 * this.side) , center.z ),
        new THREE.Vector3( center.x, center.y+(this.side/Math.sqrt(3)) , center.z ),
        new THREE.Vector3( center.x-half, center.y-(Math.sqrt(3)/6 * this.side) , center.z ),
        new THREE.Vector3( center.x+half, center.y-(Math.sqrt(3)/6 * this.side) , center.z ),
        ];
        return points;
    },
    
    changeBridgeElements: function( ){
        var nr = this.director.world.worldNr;
        
        if(nr === 1){                   // Feuer
            this.setAttributes( 'bridgeLeft', 'erdeBridge', '3');
            this.setAttributes( 'bridgeRight', 'wasserBridge', '2');
        }else if (nr === 2){            // Wasser
            this.setAttributes( 'bridgeLeft', 'feuerBridge', '1');
            this.setAttributes( 'bridgeRight', 'erdeBridge', '3');
        }else if( nr === 3 ){           // Erde
            this.setAttributes( 'bridgeLeft', 'wasserBridge', '2');
            this.setAttributes( 'bridgeRight', 'feuerBridge', '1');
        }
    },
    
    setAttributes: function( el, Id, Class ){
        el = this.director.domElement.getElementById( el ).children[0];
        el.setAttribute('id', Id );
        el.setAttribute('class', Class );
    },
    
    update: function(){
        var i, obj, distanceMax,
        player = this.director.player,
        time = this.director.lastTime * 0.001;
        
        // Übergang
        if( ELEMENTS.Config.bridge === true ){
            if( this.director.music && this.director.music.volume -0.01 >= 0 ){
                this.director.music.volume -= 0.01;
            }
            if( player.speed  < ELEMENTS.Config.speedFast){
                player.speed *= 1.05;
            }
                
            var cameraPos = this.director.view.camera.position;

            // Welt löschen wenn nicht mehr im Bild
            distanceMax = this.distance / 2; 
            if( cameraPos.distanceTo( this.bridgeStartCameraPos ) > distanceMax ){
                if( ELEMENTS.Config.worldExists === true ){
                    this.director.world.deleteWorld();
                    ELEMENTS.Config.worldExists = false;
                }
            }
            if( ELEMENTS.Config.worldExists === false ){
                // Welt generieren wenn Tor passiert wurde                
                distanceMax = this.distance + 180; 
                if( cameraPos.distanceTo( this.bridgeStartCameraPos ) > distanceMax ){
                    this.director.load();
                    this.director.display( 'soundMenu', 'worldMenu' );
                    ELEMENTS.Config.worldExists = true;
                    ELEMENTS.Config.bridge = false;
                    
                    this.oneGate.animateGate = false;
						
                    i = this.oneGate.children.length - 1;
                    for ( i; i >= 0; i--){
                        this.oneGate.remove( this.oneGate.children[i] );
                    }
                    this.director.player.speed = ELEMENTS.Music.speed;
                }
            }
        }else{
            i = this.delayBridge.length - 1;
            if( this.delayBridgeIndex <= i){
                // Bridge ein bzw ausblenden
                if( ELEMENTS.time >= this.delayBridge[ this.delayBridgeIndex ]){
                    // einblenden
                    if(ELEMENTS.Config.showBridge === false){
                        this.director.gate.changeBridgeElements( );
                        ELEMENTS.Config.showBridge = true;
                        this.director.display('bridgeMenu');
                        fadeEffect.init('bridgeMenu', 1);
                    }
                    // ausblenden
                    if(ELEMENTS.time > this.delayBridge[ this.delayBridgeIndex ] + this.delayShowBridge){
                        if(ELEMENTS.Config.showBridge === true){
                            this.delayBridgeIndex++;
                            ELEMENTS.Config.showBridge = false;
                            fadeEffect.init('bridgeMenu', 0);
                        }
                    }
                }    
            }

        }
        
        // Rotieren des Gates und Ausrichtung auf Camera
        if( this.oneGate.animateGate === true ){
            if( this.oneGate.position.z < this.distance - 500){
                this.oneGate.lookAt( this.bridgeStartCameraTargetPos );
            }
            i = this.oneGate.children.length - 1;
            for( i; i >= 0; i--){
                obj = this.oneGate.children[i];
                obj.rotation.z = time * ( i + 1 ) / 3;
            }
            
        }
    }
};

//__________________________________________________
// Player (Kamerasteuerung)

ELEMENTS.Player = function( director ){
    this.initialize( director );
};

ELEMENTS.Player.prototype = {
    
    initialize: function( director ){
        console.log('Player: init');
        this.director = director;
        this.camera = director.view.camera;
        this.cameraTarget = director.view.cameraTarget;
        this.speed = ELEMENTS.Music.speed;
        this.maxAngle = 0.5 * deg2rad;
        this.angleNow = 270 * deg2rad;
        this.rangeY = [ 0, 100 ];   //minY, maxY 
        this.rangeAngle = [ 250 * deg2rad, 290 * deg2rad];  // Einschrenkung bei Wasser
        this.distance = this.cameraTarget.position.z - this.camera.position.z;
    },
    
    update: function (){
        var cameraTargetPos = this.cameraTarget.position,
        cameraPos = this.camera.position,
        input = ELEMENTS.Input,
        vektor = new THREE.Vector2( cameraTargetPos.x - cameraPos.x, cameraTargetPos.z - cameraPos.z ).normalize();
        
        cameraPos.x += vektor.x * this.speed * this.director.timeGone ;
        cameraPos.z += vektor.y * this.speed * this.director.timeGone ;            

        if( ELEMENTS.Config.bridge === false ){
            // Kamera schwenken
            if( ELEMENTS.Config.thisWorld !== 2){
                this.angleNow += ( this.maxAngle * input.FaktorX );
            }else{
                // Wasser hat Range auf waagrechten Schwenk
                var value = this.maxAngle * input.FaktorX + this.angleNow;
                if( value > this.rangeAngle[0] && value < this.rangeAngle[1] ){
                        this.angleNow += ( this.maxAngle * input.FaktorX );
                }
            }
            // Auf / Ab Bewegung des Zielobjekts der Camera
            if( input.FaktorY > 0 && cameraTargetPos.y > this.rangeY[0] ){
                cameraTargetPos.y -= ( 1 + input.FaktorY );
            }else if( input.FaktorY < 0 && cameraTargetPos.y < this.rangeY[1] ){
                cameraTargetPos.y += ( 1 - input.FaktorY );
            }
        }

        cameraTargetPos.x = cameraPos.x - Math.cos( this.angleNow ) * this.distance;
        cameraTargetPos.z = cameraPos.z - Math.sin( this.angleNow ) * this.distance;
        this.camera.lookAt( cameraTargetPos );
    }
};


//__________________________________________________
//World Manager

ELEMENTS.WorldManager = function( director, call  ) {
    this.call = call;
    this.initialize( director );
};

ELEMENTS.WorldManager.prototype = {
    worldNr: 0,
    
    initialize: function( director) {
        ELEMENTS.WorldManager.prototype.instance = this;     
        
        this.director = director;
        this.call();
    },
    
    setDelays: function(){
        var i, len, v, 
        delays = ELEMENTS.Music.delays,
        animationSets = ELEMENTS.Music.animationSets,
        endDelays = [];
        
        if( this.worldNr === 1 ){
            this.obj.delayCometFly = animationSets.delayCometFly;
            this.obj.zoomMaxScale = animationSets.zoomMaxScale;
            this.obj.zoomDuration = animationSets.zoomDuration;
            this.obj.lightWfading = animationSets.lightWfading;
            this.obj.lightWmax = animationSets.lightWmax;
            this.obj.lightYfading = animationSets.lightYfading;
            this.obj.lightYmax = animationSets.lightYmax;
            this.obj.particleMaxHeight = animationSets.particleMaxHeight;
            this.obj.particleUp = animationSets.particleUp;
            this.obj.countPerZoom = animationSets.countPerZoom;

            this.obj.delayBlink = delays.blink;
            this.obj.delayFountain = delays.fountain;
            this.obj.delayComet = delays.comet;
            this.obj.delayZoom = delays.zoom;
            
            this.obj.delayBlinkIndex = this.obj.delayZoomIndex = this.obj.delayFountainIndex = this.obj.delayCometIndex = 0;
            
        }else if( this.worldNr === 2 ){
            endDelays = ELEMENTS.Music.endDelays;
            this.obj.ePos = animationSets.ePos;
            this.obj.endBlink = animationSets.blink;
            this.obj.minColor = animationSets.minColor;
            this.obj.maxColor = animationSets.maxColor;
            this.obj.colorPerFrame = animationSets.colorPerFrame;
            this.obj.endEmitter0 = animationSets.emitter[0];
            this.obj.endEmitter1 = animationSets.emitter[1];
            this.obj.endEmitter2 = animationSets.emitter[2];
            
            this.obj.dropsTime = animationSets.dropsTime;
            this.obj.emitterRotSpeed = animationSets.emitterRotSpeed;
            
            this.obj.delayAnimateD = delays.animateDrops;
            this.obj.delayBlink = delays.blink;
            this.obj.delayColor = delays.color;
            this.obj.delayEmitter0 = delays.emitter0;
            this.obj.delayEmitter1 = delays.emitter1;
            this.obj.delayEmitter2 = delays.emitter2;
            this.obj.delayHelix = delays.helix;
        
            this.obj.delayAnimateDIndex = this.obj.delayHelixIndex = this.obj.delayEmitter0Index = this.obj.delayEmitter1Index = this.obj.delayEmitter2Index =  this.obj.delayBlinkIndex = this.obj.delayColorIndex = 0;
            
            this.obj.endAnimateD = endDelays.animateDrops;
            this.obj.endColor = endDelays.color;
            this.obj.endHelix = endDelays.helix;
            this.obj.endAnimateDIndex = this.obj.endColorIndex = this.obj.endHelixIndex = 0;
            
        }else if( this.worldNr === 3 ){
            this.obj.raisePerFrame = animationSets.raisePerFrame;
            this.obj.raiseMaxHeight = animationSets.raiseMaxHeight;

            this.obj.tilePerFrame = animationSets.tilePerFrame ;
            this.obj.tileMaxHeight = animationSets.tileMaxHeight;

            this.obj.stackMaxScale = animationSets.stackMaxScale;
            this.obj.stackDuration = animationSets.stackDuration;

            this.obj.hillMaxHeight = animationSets.hillMaxHeight;
            this.obj.hillHeightPerFrame = animationSets.hillHeightPerFrame;
                
            this.obj.delayUp = delays.up;
            this.obj.delayStack = delays.stack;
            this.obj.delayHill = delays.hill;
            this.obj.delayTile = delays.tile;
        
            this.obj.delayUpIndex = this.obj.delayStackIndex = this.obj.delayHillIndex = this.obj.delayTileIndex = 0;
        }
    },
    
    createWorld: function( callback ){     
        this.callback = callback;

        this.worldNr = ELEMENTS.Config.nextWorld;
        
        if(ELEMENTS.Config.nextWorld === 2){
            this.director.player.angleNow = 270 * deg2rad;
            this.director.view.camera.position = new THREE.Vector3( 600, 200, -600 );
            this.director.view.cameraTarget.position = new THREE.Vector3 ( 600, 150, -1400 );      
        }

        if( this.worldNr === 1 ){
            this.obj = new ELEMENTS.Pyramid( this.director );
            this.obj.firelights();
        }else if( this.worldNr === 2 ){
            this.obj = new ELEMENTS.Drop( this.director );
        }else if( this.worldNr === 3 ){
            this.obj = new ELEMENTS.Cube( this.director );
            this.obj.earthLights();
        }
        ELEMENTS.Config.worldExists = true;
        this.callback();
    },
    
    deleteWorld: function(  ){
        var child, view = this.director.view,
        scene = view.scene, cameraTarget = view.cameraTarget,
        gate = scene.getChildByName('gate'), 
        i = scene.children.length - 1;

        for( i; i >= 0; i-- ){      // children von scene löschen  
            child = scene.children[i];
            if( child !== view.camera && child !== cameraTarget && child !== gate ){
                //Camera, Target & Gate bleiben in der Scene
                scene.remove( scene.children[i] );
            }
        } 

        //Lichter löschen
        i = cameraTarget.children.length - 1;
        for( i; i >= 0; i-- ){   
            child = cameraTarget.children[i];
            cameraTarget.remove( child );
        } 
    },
    
    update: function(){
        var i, len, frame =  this.director.frame + ( this.director.framesBetween / 2 | 0 ),
        phase = this.director.phase;

        if( this.director.music.currentTime > 0){

        //_________________________
        // FEUER
            if( this.worldNr === 1){         // Pyramid
                var blinks, comets, fountains, zooms = 10;

            // ______________
            // PAUL FEUER
                if( ELEMENTS.Config.trackNr === 0){     
                   zooms = 0, blinks = 10;
                    if( phase === 0 ){
                        this.obj.zoomMaxScale = 1.25
                        this.obj.zoomDuration = 3100;
                    }else if( phase === 1 ){
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 3300;
                    }else if( phase === 2 ){
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 3000;//                        blinks = 9999;
                    }else if( phase === 3 ){
                        zooms = 5;
                        this.obj.zoomMaxScale = 1.1;
                        this.obj.zoomDuration = 1500;
                    }else if( phase === 4 ){
                        blinks = 20;
                        zooms = 0;
                        this.obj.zoomMaxScale = 1.5;
                        this.obj.zoomDuration = 3800;
                    }else if( phase === 5 ){
                        zooms = 5;
                        this.obj.zoomMaxScale = 1.2;
                        this.obj.zoomDuration = 2500;
                        blinks = 9999;
                    }else if( phase === 6 ){
                          blinks = 20;
                    }else if( phase === 7 ){
                        zooms = 5;
                        this.obj.zoomMaxScale = 1.6;
                        this.obj.zoomDuration = 4000;
                        blinks = 30;
                    }else if( phase === 8 ){
                        zooms = 9999;
                        this.obj.zoomMaxScale = 1.7;
                        this.obj.zoomDuration = 5000;
                    }else if( phase === 9 ){
                        zooms = 0;
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 3300;
                    }else if( phase === 10 ){
                        zooms = 5;
                        blinks = 35;
                        this.obj.zoomMaxScale = 1.7;
                        this.obj.zoomDuration = 4000;
                    }else if( phase === 11 ){
                        zooms = 0;
                        blinks = 30;
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 2500;
                    }else if( phase === 12 ){
                        zooms = 8;
                        this.obj.zoomMaxScale = 1.2;
                        this.obj.zoomDuration = 3500;
                        blinks = 35;
                    }else if( phase === 13 ){
                        zooms = 0;
                        blinks = 20;
                        this.obj.zoomMaxScale = 1.6;
                        this.obj.zoomDuration = 3500;
                    }else if( phase === 14 ){
                        zooms = 10;
                        blinks = 15;
                        this.obj.zoomMaxScale = 1.3;
                        this.obj.zoomDuration = 2500;
                    }else if( phase === 15 ){
                        zooms = 0;
                        blinks = 10;
                    }else if( phase === 15 ){
                        zooms = 9999;
                        blinks = 9999;
                    }
                    
                    // Pulsieren
                    if( ELEMENTS.Music.f_leadFlute[ frame ] > zooms ){
                        this.obj.startZoom( this.obj.countPerZoom );
                    }
                    // Blinken
                    if( ELEMENTS.Music.f_mainBassVolume[ frame  ] > blinks ){
                            this.obj.startBlink(  );
                    }
                    // Fountain
                    i = this.obj.delayFountain.length;
                    if( this.obj.delayFountainIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayFountain[ this.obj.delayFountainIndex ]){
                            this.obj.startFountain( 3 );
                            this.obj.delayFountainIndex++;
                        }
                    }
                    // Comet
                    i = this.obj.delayComet.length;
                    if( this.obj.delayCometIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayComet[ this.obj.delayCometIndex ]){
                            this.obj.startComet();
                            this.obj.delayCometIndex++;
                        }
                    }
                
            // ______________
            // PIERRE FEUER
                }else if( ELEMENTS.Config.trackNr === 1){
                    if( phase === 0 ){
                        zooms = 9999;blinks = 350;
                    }else if( phase === 1 ){
                        zooms = 65;
                        this.obj.zoomMaxScale = 1.5;
                        this.obj.zoomDuration = 22000;
                        this.obj.countPerZoom = 7;

                    }else if( phase === 2 ){
                        zooms = 65;
                        this.obj.countPerZoom = 2.6;
                        this.obj.zoomMaxScale = 2;
                        this.obj.zoomDuration = 20000;                        
                    }else if( phase === 3 ){
                        zooms = 9999; 
                        // --> fountains 1x
                    }else if( phase === 4 ){
                        zooms = 0;
                        this.obj.zoomMaxScale = 1.5;
                        this.obj.zoomDuration = 2700;
                        this.obj.countPerZoom = 5;
                    }else if( phase === 5 ){
                        zooms = 0;
                        this.obj.zoomMaxScale = 1.3;
                        this.obj.zoomDuration = 2400;
                        this.obj.countPerZoom = 5;
                        blinks = 9999;
                    }else if( phase === 6 ){
                        blinks = 400;
                        this.obj.lightWfading = this.obj.lightYfading = 0.8;
                        this.obj.zoomMaxScale = 1.3;
                        this.obj.zoomDuration = 3300;
                        this.obj.countPerZoom = 3;
                    }else if( phase === 7 ){
                        this.obj.zoomMaxScale = 1.2;
                        blinks = 420;
                        this.obj.lightWfading = this.obj.lightYfading = 0.7;
                        this.obj.zoomDuration = 3500;
                        this.obj.countPerZoom = 4;
                    }else if( phase === 8 ){
                        zooms = 65;
                        blinks = 270;
                        this.obj.zoomMaxScale = 1.2;
                        this.obj.zoomDuration = 2400;
                        this.obj.countPerZoom = 5;
                    }else if( phase === 9 ){
                        zooms = 65;
                        blinks = 250;
                        this.obj.zoomMaxScale = 1.2;
                        this.obj.zoomDuration = 2400;
                        this.obj.countPerZoom = 5;
                    }else if( phase === 10 ){
                        zooms = 5;
                        blinks = 350;
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 2600;
                        this.obj.countPerZoom = 4;
                    }else if( phase === 11 ){
                        zooms = 30;
                        this.obj.zoomMaxScale = 1.1;
                        this.obj.zoomDuration = 3500;
                        this.obj.countPerZoom = 5;
                          blinks = 400;
                    }else if( phase === 12 ){
                        zooms = 10;
                        this.obj.zoomMaxScale = 2.2;
                        this.obj.zoomDuration = 19000;
                        this.obj.countPerZoom = 20;
                    }

                    // BLINK
                    if( ELEMENTS.Music.f_drumsVolume[ frame ] > blinks ){
                        this.obj.startBlink( );
                    }
                    // ZOOM
                    i = this.obj.delayZoom.length;
                    if( this.obj.delayZoomIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayZoom[ this.obj.delayZoomIndex ]){
                            this.obj.startZoom( this.obj.countPerZoom );
                            this.obj.delayZoomIndex++;
                        }
                    }
                    // Fountain
                    i = this.obj.delayFountain.length;
                    if( this.obj.delayFountainIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayFountain[ this.obj.delayFountainIndex ]){
                            this.obj.startFountain( 2 );
                            this.obj.delayFountainIndex++;
                        }
                    }
                    // Comet
                    i = this.obj.delayComet.length;
                    if( this.obj.delayCometIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayComet[ this.obj.delayCometIndex ]){
                            this.obj.startComet();
                            this.obj.delayCometIndex++;
                        }
                    }                 
                    
            // ______________
            // DAVE FEUER      
                }else if ( ELEMENTS.Config.trackNr === 2){
                    if( phase === 0 ){
                        blinks = 390;
                    }else if( phase === 1 ){
                        blinks = 420;
                        this.obj.countPerZoom = 35;
                        this.obj.zoomMaxScale = 1.6;
                        this.obj.zoomDuration = 3000;
                    }else if( phase === 2 ){
                        blinks = 9999;
                        this.obj.countPerZoom = 45;
                        this.obj.zoomMaxScale = 1.2;
                        this.obj.zoomDuration = 2500;
                    }else if( phase === 3 ){
                        blinks = 420;
                    }else if( phase === 4 ){
                        blinks = 410;
                        this.obj.zoomMaxScale = 1.4;
                        this.obj.zoomDuration = 2000;
                    }else if( phase === 5 ){
                        blinks = 9999;
                        this.obj.zoomMaxScale = 1.7;
                        this.obj.zoomDuration = 2500;
                    }else if( phase === 6 ){
                        blinks = 240;
                        this.obj.countPerZoom = 50;
                        this.obj.zoomMaxScale = 1.5;
                        this.obj.zoomDuration = 2200;
                    }else if( phase === 7){
                        blinks = 0;
                    }
                    //Blinken
                    if( ELEMENTS.Music.f_tomsVolume[ frame ] > blinks ){
                            this.obj.startBlink(  );
                    }
                    //Pulsieren
                    i = this.obj.delayZoom.length;
                    if( this.obj.delayZoomIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayZoom[ this.obj.delayZoomIndex ]){
                            this.obj.startZoom( this.obj.countPerZoom );
                            this.obj.delayZoomIndex++;
                        }
                    }                    
                    // Fountain
                    i = this.obj.delayFountain.length;
                    if( this.obj.delayFountainIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayFountain[ this.obj.delayFountainIndex ]){
                            this.obj.startFountain( 1 );
                            this.obj.delayFountainIndex++;
                        }
                    }
                    // Comet
                    i = this.obj.delayComet.length;
                    if( this.obj.delayCometIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayComet[ this.obj.delayCometIndex ]){
                            this.obj.startComet();
                            this.obj.delayCometIndex++;
                        }
                    }
                }
                
         // _____________________________________
            // WASSER
            }else if( this.worldNr === 2 ){      // Drop
                //eIndex [0: Hierarchy E3, 1: Helix E2, 2: Hierarchy, 3: Hierarchy]
                //0x,1y,2z,3d:Hierarchy | 4x,5y,6z,7d:Helix | 8x,9y,10z,11d:Hierarchy | 12x,13y,14z,15d: Hierarchy

                // _____________
                // WASSER PAUL
                if( ELEMENTS.Config.trackNr === 0){
                    if( phase === 0 ){
                        this.obj.ePos = [0,0,2000,1000,  0,200,1700,1200,  -200,0,2500,1500,  200,0,2000,1500];
                        this.obj.eIndex =[0,1,0,0];
                    }else if( phase === 1 ){
                        this.obj.eIndex =[0,0,1,1];
                    }else if( phase === 2 ){
                        this.obj.eIndex =[1,0,0,0];
                    }else if( phase === 3 ){
                        this.obj.eIndex =[1,1,0,0];
                    }else if( phase === 4 ){
                        this.obj.eIndex =[1,0,0,0];
                        this.obj.dropsTime = 0.07;
                        this.obj.ePos[2]=1800;
                        this.obj.ePos[3]=900;
                    }else if( phase === 5 ){
                        this.obj.eIndex =[1,1,0,0];
                        this.obj.ePos[0]=200;
                        this.obj.ePos[4]=-400;
                        this.obj.ePos[5]=-200;
                        this.obj.ePos[6]=2200;
                        this.obj.dropsTime = 0.05;
                    }else if( phase === 6 ){
                        this.obj.eIndex =[1,0,1,1];
                        this.obj.ePos[0]=-600;
                        this.obj.ePos[1]=200;
                        this.obj.ePos[2]=1700;
                        this.obj.ePos[3]=1500;
                        this.obj.ePos[12]=300;
                        this.obj.ePos[14]=1200;
                        this.obj.ePos[15]=800;
                    }else if( phase === 7 ){
                        this.obj.eIndex =[1,0,1,1];
                        this.obj.emitterRotSpeed = 0.07;
                        this.obj.ePos[8]=-300;
                        this.obj.ePos[11]=3000;
                        this.obj.ePos[15]=3000;
                    }else if( phase === 8 ){
                        this.obj.eIndex =[0,1,0,0];
                        this.obj.ePos[4]=0;
                        this.obj.ePos[5]=200;
                        this.obj.ePos[6]=2200;
                        this.obj.ePos[7]=3000;
                        this.obj.ePos[3]=3000;
                        this.obj.ePos[11]=3000;
                        this.obj.ePos[15]=3000;
                    }else if( phase === 9 ){
                        this.obj.eIndex =[0,0,0,0];
                    }
                
                // ____________________
                // WASSER Pierre
                }else if( ELEMENTS.Config.trackNr === 1){
                    if( phase === 0 ){
                        this.obj.ePos = [ -200, 0, 1800, 1200,    0, 200, 2000, 1200,  -200, 0, 1500, 1200,    200, 0, 1200, 1200 ];    
                        this.obj.eIndex =[0,0,1,0];
                    }else if( phase === 1 ){
                        this.obj.eIndex =[0,0,1,1];
                    }else if( phase === 2 ){
                        this.obj.eIndex =[0,0,1,1];
                    }else if( phase === 3 ){
                        this.obj.eIndex =[0,0,1,1];     
                        this.obj.ePos[15] = 10000;
                    }else if( phase === 4 ){
                        this.obj.eIndex =[1,0,0,0];
                    }else if( phase === 5 ){
                        this.obj.eIndex =[1,0,0,0];
                    }else if( phase === 6 ){
                        this.obj.eIndex =[1,0,0,1];
                        this.obj.ePos[14] = 1400;
                        this.obj.ePos[15] = 1400;
                    }else if( phase === 7 ){
                        this.obj.eIndex =[1,0,0,1];
                        this.obj.ePos[11] = 1000;
                        this.obj.ePos[15] = 1000;
                    }else if( phase === 8 ){
                        this.obj.eIndex =[1,1,0,1];
                        this.obj.ePos[5] = 0;
                    }else if( phase === 9 ){
                        this.obj.eIndex =[1,1,0,1];
                        this.obj.ePos[0] = -200;
                    }else if( phase === 10 ){
                        this.obj.eIndex =[1,1,1,1];
                     }else if( phase === 11 ){
                        this.obj.eIndex =[1,1,1,1];
                        this.obj.dropsTime = 0.05;
                    }else if( phase === 12 ){
                        this.obj.eIndex =[0,0,0,0];
                    }
                
                // ____________________
                // WASSER Dave
                }else if( ELEMENTS.Config.trackNr === 2){
                    
                    if( phase === 0 ){
                        this.obj.ePos = [ -200, 0, 1800, 1200,    0, 200, 2000, 1200,  -200, 0, 1500, 1200,    200, 0, 1200, 1200 ]; 
                        this.obj.eIndex =[0,0,1,0];
                    }else if( phase === 1 ){
                        this.obj.eIndex =[0,0,1,1];
                        this.obj.emitterRotSpeed = 0.1;
                    }else if( phase === 2 ){
                        this.obj.eIndex =[1,0,0,0];
                    }else if( phase === 3 ){
                        this.obj.eIndex =[0,1,0,0];
                    }else if( phase === 4 ){
                        this.obj.eIndex =[1,1,0,0];
                        this.obj.dropsTime = 0.3;
                    }else if( phase === 5 ){
                        this.obj.eIndex =[1,1,0,0];
                        this.obj.ePos[0]=-200;
                        this.obj.ePos[2]=1800;
                        this.obj.ePos[3]=800;
                        this.obj.ePos[4]=200;
                    }else if( phase === 6 ){
                            this.obj.eIndex =[1,0,0,1];
                        this.obj.ePos[12]=300;
                        this.obj.ePos[13]=100;
                        this.obj.ePos[12]=300;
                    }else if( phase === 7 ){
                        this.obj.eIndex =[1,0,0,1];
                        this.obj.emitterRotSpeed = 0.7;
                        this.obj.ePos[2]=1600;
                        this.obj.ePos[3]=2000;
                        this.obj.ePos[14]=1800;
                        this.obj.ePos[15]=5000;
                    }else if( phase === 8 ){
                        this.obj.eIndex =[0,1,0,0];
                        this.obj.ePos[4]=100;
                        this.obj.ePos[5]=0;
                        this.obj.ePos[6]=1800;
                        this.obj.ePos[7]=900;
                    }else if( phase === 9 ){
                        this.obj.eIndex =[1,1,0,0];
                        this.obj.ePos[0]=200;
                        this.obj.ePos[4]=-250;
                        this.obj.ePos[2]=1600;
                    }else if( phase === 10 ){
                        this.obj.eIndex =[1,1,0,0];
                         
                    }else if( phase === 11 ){
                        this.obj.eIndex =[0,1,1,0];
                        this.obj.ePos[3]=5000;
                        this.obj.ePos[6]=2000;
                        this.obj.ePos[7]=5000;
                    }else if( phase === 12 ){
                        this.obj.eIndex =[1,0,0,0];
                    }
                }
                
                    //AnimateDrops
                    i = this.obj.delayAnimateD.length;
                    if( this.obj.delayAnimateDIndex < i){
                        if( ELEMENTS.time >= this.obj.delayAnimateD[ this.obj.delayAnimateDIndex ]){
                            this.obj.animateDrops();  
                            this.obj.delayAnimateDIndex++;
                        }
                    }
                    i = this.obj.endAnimateD.length;
                    if( this.obj.endAnimateDIndex < i){
                        if( ELEMENTS.time >= this.obj.endAnimateD[ this.obj.endAnimateDIndex ]){
                            this.obj.stopAnimateDrops();  
                            this.obj.endAnimateDIndex++;
                        }
                    }
                    //Helix
                    i = this.obj.delayHelix.length;
                    if( this.obj.delayHelixIndex < i){
                        if( ELEMENTS.time >= this.obj.delayHelix[ this.obj.delayHelixIndex ]){
                            this.obj.helix();  
                            this.obj.delayHelixIndex++;
                        }
                    }
                    i = this.obj.endHelix.length;
                    if( this.obj.endHelixIndex < i){
                        if( ELEMENTS.time >= this.obj.endHelix[ this.obj.endHelixIndex ]){
                            this.obj.stopHelix();  
                            this.obj.endHelixIndex++;
                        }
                    }
                    //Emitter0
                    i = this.obj.delayEmitter0.length;
                    if( this.obj.delayEmitter0Index < i){
                        if( ELEMENTS.time >= this.obj.delayEmitter0[ this.obj.delayEmitter0Index ]){
                            this.obj.animateEmitter(0);  
                            this.obj.delayEmitter0Index++;
                        }
                    }
                    //Emitter1
                    i = this.obj.delayEmitter1.length;
                    if( this.obj.delayEmitter1Index < i){
                        if( ELEMENTS.time >= this.obj.delayEmitter1[ this.obj.delayEmitter1Index ]){
                            this.obj.animateEmitter(1);  
                            this.obj.delayEmitter1Index++;
                        }
                    }  
                    //Emitter2
                    i = this.obj.delayEmitter2.length;
                    if( this.obj.delayEmitter2Index < i){
                        if( ELEMENTS.time >= this.obj.delayEmitter2[ this.obj.delayEmitter2Index ]){
                            this.obj.animateEmitter(2);  
                            this.obj.delayEmitter2Index++;
                        }
                    }  
                    // Blink
                    i = this.obj.delayBlink.length;
                    if( this.obj.delayBlinkIndex < i){
                        if( ELEMENTS.time >= this.obj.delayBlink[ this.obj.delayBlinkIndex ]){
                            this.obj.emitterBlink();       
                            this.obj.delayBlinkIndex++;
                        }
                    }  
                    //Color
                    i = this.obj.delayColor.length;
                    if( this.obj.delayColorIndex < i){
                        if( ELEMENTS.time >= this.obj.delayColor[ this.obj.delayColorIndex ]){
                            this.obj.animateColor(); 
                            this.obj.delayColorIndex++;
                        }
                    }
                    i = this.obj.endColor.length;
                    if( this.obj.endColorIndex < i){
                        if( ELEMENTS.time >= this.obj.endColor[ this.obj.endColorIndex ]){
                            this.obj.stopAnimateColor(); 
                            this.obj.endColorIndex++;
                        }
                    }
            
            // _____________________________________
            // ERDE
            }else if( this.worldNr === 3){       // Cube
                var hills, ups, stacks, tiles;
                // __________________
                // ERDE Paul 
                if( ELEMENTS.Config.trackNr === 0){     // ERDE Paul    //--> 0 auf 2 ändern
                    if( phase === 0 ){//1
                        ups = 9999 , hills=25, stacks = 9999;
                    }else if( phase === 1 ){//1-6
                        ups = 9999 , hills=9999, stacks = 33;
                    }else if( phase === 2 ){//6-11
                        ups = 9999 , hills=9999, stacks = 48;
                    }else if( phase === 3 ){//11-20
                        ups = 33 , hills=9999, stacks = 50;
                    }else if( phase === 4 ){//21-31
                        ups = 22 , hills=9999, stacks = 9999;
                    }else if( phase === 5 ){//32-42
                        ups = 40 , hills=45, stacks = 9999;
                    }else if( phase === 6 ){//43-52
                        ups = 20 , hills=9999, stacks = 40;
                    }else if( phase === 7 ){//53-64
                        ups = 70 , hills=50, stacks = 9999;
                    }else if( phase === 8 ){//65-75
                        ups = 20 , hills=9999, stacks = 9999;
                    }else if( phase === 9 ){//76-85
                        ups = 9999 , hills=9999, stacks = 45;
                    }else if( phase === 10 ){//86-91
                        ups = 9999 , hills=30, stacks = 9999;
                    }
                    
                    //HILLS
                    if( ELEMENTS.Music.e_flaechenchordsVolume[ frame ] > hills ){
                        this.obj.startHill();
                    }
                    //STACKS
                    if( ELEMENTS.Music.e_flaechenchordsVolume[ frame ] > stacks ){
                        this.obj.startStack();
                    }
                    // UP
                    if( ELEMENTS.Music.e_percussionVolume[ frame ] > ups ){
                        this.obj.startMove();
                    }
                    //TILES
                    i = this.obj.delayTile.length;
                    if( this.obj.delayTileIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayTile[ this.obj.delayTileIndex ]){
                            this.obj.startTile();
                            this.obj.delayTileIndex++;
                        }
                    }
                
                // ________________
                // ERDE Pierre  
                }else if( ELEMENTS.Config.trackNr === 1){ 
                    // LIMITS für PHASEN
                    if( phase === 0 ){
                        ups = 50 , tiles = 9999;
                    }else if( phase === 1 ){
                        ups = 50 , tiles = 9999;
                    }else if( phase === 2 ){
                        ups = 70 , tiles = 150;
                    }else if( phase === 3 ){
                        ups = 70 , tiles = 150;
                    }else if( phase === 4 ){
                        ups = 80 , tiles = 200;
                    }else if( phase === 5 ){
                        ups = 100 , tiles = 9999;
                    }else if( phase === 6 ){
                        ups = 100 , tiles = 9999;
                    }
                    
                    // HILL
                    i = this.obj.delayHill.length;
                    if( this.obj.delayHillIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayHill[ this.obj.delayHillIndex ]){
                            this.obj.startHill();
                            this.obj.delayHillIndex++;
                        }
                    }
                    // STACK
                    i = this.obj.delayStack.length;
                    if( this.obj.delayStackIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayStack[ this.obj.delayStackIndex ]){
                            this.obj.startStack();
                            this.obj.delayStackIndex++;
                        }
                    }
                    // UP
                    if( ELEMENTS.Music.e_bassVolume[ frame ] > ups ){
                        this.obj.startMove(  );
                    }
                    //Tiles
                    if( ELEMENTS.Music.e_drumsVolume[ frame ] > tiles ){
                        this.obj.startTile();
                    }
                    
                //________________
                // ERDE DAVE
                }else if( ELEMENTS.Config.trackNr === 2){    
                   // LIMITS für PHASEN 
                    ups = 10;
                    if( phase === 0 ){
                        hills = 80 , stacks = 9999;
                    }else if( phase === 1 ){
                        hills = 90,  stacks = 9999;
                    }else if( phase === 2 ){
                        hills = 100, stacks = 17;
                    }else if( phase === 3 ){
                        hills = 9999, stacks = 13;
                    }else if( phase === 4 ){
                        hills = 90, stacks = 20;
                    }else if( phase === 5 ){
                        hills = 75, stacks = 27;
                    }else if( phase === 6 ){
                        hills = 9999, stacks = 13;
                    }else if( phase === 7 ){
                        hills = 9999, stacks = 15;
                    }else if( phase === 8 ){
                        hills = 9999, stacks = 20;
                    }
                    
                    // HILL
                    i = this.obj.delayHill.length;
                    if( this.obj.delayHillIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayHill[ this.obj.delayHillIndex ]){
                            this.obj.startHill();
                            this.obj.delayHillIndex++;
                        }
                    }
                    // UP
                    if( ELEMENTS.Music.e_percVolume[ frame ] > ups ){
                        this.obj.startMove(  );
                    }
                    // STACK
                    if( ELEMENTS.Music.e_geigenHiVolume[ frame ] > stacks ){
                        this.obj.startStack(  );
                    }
                    // TILE
                    i = this.obj.delayTile.length;
                    if( this.obj.delayTileIndex < i){
                        if( ELEMENTS.time + ELEMENTS.deltaTime/2 >= this.obj.delayTile[ this.obj.delayTileIndex ]){
                            this.obj.startTile();
                            this.obj.delayTileIndex++;
                        }
                    }
                    
                } // ERDE DAVE ENDE
            }    
            this.obj.update();
        }
    }
};


//__________________________________________________
//Input

ELEMENTS.Input = function() {
    this.initialize();
};

ELEMENTS.Input.mouseX = 0;
ELEMENTS.Input.mouseY = 0;
ELEMENTS.Input.FaktorX = 0;
ELEMENTS.Input.FaktorY = 0;

ELEMENTS.Input.prototype = {
    // _______________________________________________________________________________________ Constructor

    initialize: function() {
        document.addEventListener( 'mousemove', bind (this, this.onMouseMove ), false );
    },

    onMouseMove: function( event ){
        ELEMENTS.Input.mouseX = event.clientX - windowHalfX;
        ELEMENTS.Input.mouseY = event.clientY - windowHalfY;
        
        ELEMENTS.Input.FaktorX = ELEMENTS.Input.mouseX / windowHalfX;
        ELEMENTS.Input.FaktorY = ELEMENTS.Input.mouseY / windowHalfY;
    }
};


/**
 * Provides requestAnimationFrame in a cross browser way.
 * http://paulirish.com/2011/requestanimationframe-for-smart-animating/
 */

if ( !window.requestAnimationFrame ) {

    window.requestAnimationFrame = ( function() {

        return window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        function( /* function FrameRequestCallbasck */ callback, /* DOMElement Element */ element ) {

            window.setTimeout( callback, 1000 / 60 );

        };

    } )();

}   


var fadeEffect = function(){
	return{
		init: function(id, flag, target){
			this.ids = id;
			this.elem = document.getElementById(id);
			clearInterval(this.elem.si);
			this.target = target ? target : flag ? 100 : 0;
			this.flag = flag || -1;
			this.alpha = this.elem.style.opacity ? parseFloat(this.elem.style.opacity) * 100 : 0;
			this.si = setInterval(function(){fadeEffect.tween()}, 20);//ursprünglich 20
		},
		tween: function(){
			if(this.alpha === this.target){
				clearInterval(this.si);
			}else{
				var value = Math.round(this.alpha + ((this.target - this.alpha) * .05)) + (1 * this.flag);
				this.elem.style.opacity = value / 100;
				this.elem.style.filter = 'alpha(opacity=' + value + ')';
				this.alpha = value;
				if(this.ids === 'bridgeMenu' && this.alpha <=0){this.elem.setAttribute('class', 'hide');}
				
			}
		}
	}
}();